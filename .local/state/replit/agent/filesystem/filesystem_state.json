{"file_contents":{"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"design_guidelines.md":{"content":"# Design Guidelines: PokePao Poke Bowl Caf√© Website\n\n## Design Approach: Reference-Based (Food & Beverage E-commerce)\nDrawing inspiration from modern food delivery platforms (Uber Eats, DoorDash) combined with fresh, health-focused restaurant aesthetics (Sweetgreen, Chipotle digital experience). The design emphasizes vibrant food imagery, seamless ordering flow, and appetizing visual hierarchy.\n\n## Core Design Principles\n1. **Visual Appetite Appeal**: Food-first imagery that makes visitors hungry\n2. **Frictionless Ordering**: Clear, intuitive path from browse to cart to checkout\n3. **Fresh & Vibrant Energy**: Reflects the Hawaiian poke bowl concept with bright, tropical undertones\n4. **Trust & Transparency**: Clear pricing, ingredient visibility, social proof\n\n## Color Palette\n\n### Primary Colors\n- **Ocean Blue**: 198 71% 55% (Primary brand color, headers, CTAs)\n- **Sunset Orange**: 16 90% 55% (Secondary CTA, accents, highlights)\n- **Deep Navy**: 210 40% 20% (Text, navigation)\n\n### Supporting Colors\n- **Pure White**: 0 0% 100% (Backgrounds, cards)\n- **Soft Gray**: 210 20% 96% (Section backgrounds)\n- **Warm Gold**: 45 100% 50% (Awards, ratings, special badges)\n- **Fresh Green**: 140 50% 45% (Success states, fresh/healthy indicators)\n\n### Functional Colors\n- **Error Red**: 0 70% 55%\n- **Warning Amber**: 38 92% 50%\n- **Info Blue**: 210 80% 60%\n\n## Typography\n\n### Font Families\n- **Headings**: Poppins (600, 700) - Bold, modern, friendly\n- **Body**: Lato (400, 700) - Clean, readable, professional\n- **Accent**: Poppins for menu items, prices, CTAs\n\n### Type Scale\n- **Hero Headline**: text-5xl md:text-7xl font-bold (Poppins)\n- **Section Headers**: text-3xl md:text-5xl font-bold (Poppins)\n- **Subsection Titles**: text-2xl md:text-3xl font-semibold (Poppins)\n- **Body Large**: text-lg md:text-xl (Lato)\n- **Body Regular**: text-base (Lato)\n- **Small Text**: text-sm (Lato)\n\n## Layout System\n\n### Spacing Primitives\nPrimary spacing units: **4, 6, 8, 12, 16, 24** (Tailwind units)\n- Component padding: p-6 to p-8\n- Section spacing: py-16 md:py-24\n- Grid gaps: gap-6 to gap-8\n- Card spacing: p-6 md:p-8\n\n### Container Strategy\n- Max-width sections: max-w-7xl mx-auto\n- Content-focused: max-w-4xl mx-auto\n- Full-width hero: w-full with overlay\n\n### Grid Layouts\n- Service cards: grid-cols-1 md:grid-cols-3 gap-8\n- Menu items: grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\n- Testimonials: grid-cols-1 md:grid-cols-2 gap-8\n- Footer columns: grid-cols-1 md:grid-cols-4 gap-8\n\n## Component Library\n\n### Navigation\n- **Sticky Header**: Ocean blue gradient background, white text\n- **Logo**: Left-aligned, 48px height on desktop\n- **Nav Links**: Horizontal desktop, hamburger mobile, underline hover effect with orange accent\n- **Social Icons**: WhatsApp, Instagram, TikTok in header top bar\n- **Phone Number**: Prominent in header, clickable on mobile\n- **Mobile Menu**: Slide-down panel, full navigation + CTA button\n\n### Hero Section\n- **Height**: 80vh minimum, max 90vh\n- **Background**: Animated marquee/carousel of appetizing poke bowl images\n- **Overlay**: Dark gradient (40% opacity) for text readability\n- **Award Badge**: Floating badge \"Deutschlands Beste Poke Bowl 2024\" with trophy icon, glass-morphism effect\n- **Primary CTA**: Orange button, large (px-10 py-4), rounded-full\n- **Typography**: Large hero headline with text shadow for depth\n\n### Cards & Components\n\n**Service Cards** (Delivery, Pickup, Reservation):\n- White background, rounded-2xl, shadow-lg\n- Icon at top (64px, blue accent)\n- Badge for special offers (absolute positioned, -top-4)\n- Hover: Lift effect (translateY -10px)\n- CTA buttons: Orange primary or blue outline secondary\n\n**Menu Item Cards**:\n- Image: 16:9 ratio, rounded-t-xl, object-cover\n- Content: p-6, white background\n- Title: text-xl font-bold\n- Description: text-sm text-gray-600, 2-line clamp\n- Price: text-2xl font-bold, ocean blue\n- Add to Cart button: Orange, full-width, rounded-full\n- Hover: Shadow enhancement, subtle lift\n\n**Cart Widget**:\n- Fixed bottom-right, z-index 1000\n- Floating action button with item count badge\n- Pulsing animation when items added\n- Modal overlay: Full-screen with blur backdrop\n\n**Category Tabs** (Menu sections):\n- Horizontal scroll on mobile\n- Active state: Orange underline (4px thick)\n- Text: Uppercase, font-semibold, tracking-wide\n- Smooth scroll to sections\n\n### Forms & Inputs\n- Input fields: border-2 border-gray-300, rounded-lg, p-4\n- Focus state: border-blue-500, ring-2 ring-blue-200\n- Labels: font-semibold, mb-2\n- Submit buttons: Orange CTA style\n- Validation: Inline messages, red for errors, green for success\n\n### Footer\n- **Background**: Deep navy (210 40% 20%)\n- **Text**: White/light gray\n- **Layout**: 4-column grid on desktop, stack on mobile\n- **Sections**: Quick Links, Contact Info, Opening Hours, Newsletter Signup\n- **Social Icons**: Large, interactive, white with hover color\n- **Copyright**: Centered, smaller text, border-top separator\n\n## Images & Media\n\n### Hero Section Images\n**Primary Hero Image**: High-quality, appetizing poke bowl photography\n- Vibrant ingredients clearly visible (salmon, avocado, edamame, rice)\n- Professional lighting, shallow depth of field\n- Hawaiian/tropical aesthetic undertones\n- Animated background: Horizontal marquee/slider effect (2 copies for seamless loop)\n\n### Menu Section Images\n- **Product Photography**: Each menu item has a high-quality image\n- Consistent lighting and styling across all items\n- Square format (1:1) for grid display\n- Show portion size realistically\n- Include garnish and presentation details\n\n### Additional Imagery\n- **About Section**: Team photos, kitchen/preparation shots, restaurant interior\n- **Testimonial Section**: Customer photos (if available) or avatar placeholders\n- **Contact Section**: Embedded Google Maps for location\n- **Background Patterns**: Subtle tropical leaf patterns for section dividers (opacity 5-10%)\n\n## Interactive Elements\n\n### Buttons\n- **Primary CTA**: Orange, shadow-lg, hover lift + shadow enhancement\n- **Secondary**: Blue outline, transparent, hover fills blue\n- **Tertiary**: Text links with orange underline on hover\n\n### Animations\n**Sparingly Used**:\n- Fade-in on scroll for section reveals (0.6s ease-out)\n- Card hover states (transform, shadow)\n- Hero image marquee (80s linear infinite)\n- Cart widget scale entrance\n- Mobile menu slide-down\n\n**No Excessive Motion**: Avoid distracting parallax, spinning elements, or complex transitions\n\n### Microinteractions\n- Button press: Subtle scale (0.98)\n- Add to cart: Item flies to cart icon with particle effect\n- Form validation: Shake animation on error\n- Loading states: Spinner in brand colors\n\n## Page-Specific Guidelines\n\n### Menu/Pickup Page\n- Sticky category navigation\n- Filter/search at top\n- Grid of menu items with images\n- Add to cart inline on each card\n- Cart summary sticky on desktop (sidebar), floating on mobile\n- Clear checkout flow\n\n### Contact Page\n- Split layout: Form (left) + Map (right) on desktop\n- Contact info cards: Phone, Email, Address with icons\n- Opening hours prominent\n- Social media links repeated\n- Form: Name, Email, Phone, Message fields\n\n### About Page\n- Story section with team photo\n- Values/mission statement\n- Awards and recognition badges\n- Origin story of Hawaiian poke concept\n- Gallery of restaurant/food images\n\n## Accessibility & Dark Mode\n- Maintain AA contrast ratios minimum\n- Dark mode: Not required (light theme is on-brand for fresh food)\n- Alt text for all images\n- Keyboard navigation support\n- ARIA labels for interactive elements\n\n## Mobile Optimization\n- Touch targets: Minimum 44px height\n- Simplified navigation: Hamburger menu\n- Single-column layouts below md breakpoint\n- Larger tap areas for cart interactions\n- Bottom navigation consideration for key actions\n\n---\n\n**Design Philosophy**: Create an appetizing, modern digital storefront that makes ordering poke bowls feel fresh, easy, and exciting. Every element should drive conversion while maintaining the vibrant, healthy brand identity of PokePao.","size_bytes":8050},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/pages/not-found.tsx":{"content":"import { Link } from \"wouter\";\nimport { Home, ArrowLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-[60vh] flex items-center justify-center px-6\">\n      <div className=\"text-center max-w-md\">\n        <div className=\"mb-8\">\n          <h1 className=\"font-poppins text-9xl font-bold text-ocean mb-4\" data-testid=\"text-404\">\n            404\n          </h1>\n          <h2 className=\"font-poppins text-3xl font-bold text-foreground mb-4\" data-testid=\"text-not-found-title\">\n            Seite nicht gefunden\n          </h2>\n          <p className=\"font-lato text-lg text-muted-foreground\" data-testid=\"text-not-found-description\">\n            Oops! Die Seite, die du suchst, existiert nicht oder wurde verschoben.\n          </p>\n        </div>\n\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <Button\n            onClick={() => window.history.back()}\n            variant=\"outline\"\n            className=\"font-poppins font-bold border-2\"\n            data-testid=\"button-go-back\"\n          >\n            <ArrowLeft className=\"w-5 h-5 mr-2\" />\n            Zur√ºck\n          </Button>\n          <Button\n            asChild\n            className=\"bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold\"\n            data-testid=\"button-go-home\"\n          >\n            <Link href=\"/\">\n              <Home className=\"w-5 h-5 mr-2\" />\n              Zur Startseite\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1583},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/CartModal.tsx":{"content":"import { X, Plus, Minus, Trash2, ShoppingBag, Check, Edit } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useCartStore } from \"@/lib/cartStore\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Ingredient } from \"@shared/schema\";\nimport { useState } from \"react\";\n\ninterface CartModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onEditItem?: (itemId: string) => void;\n}\n\nexport function CartModal({ isOpen, onClose, onEditItem }: CartModalProps) {\n  const { items, updateQuantity, removeItem, clearCart, getTotal } = useCartStore();\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [serviceType, setServiceType] = useState<\"pickup\" | \"dinein\">(\"pickup\");\n  const [customerName, setCustomerName] = useState(\"\");\n  const [customerPhone, setCustomerPhone] = useState(\"\");\n  const [tableNumber, setTableNumber] = useState(\"\");\n  const [pickupTime, setPickupTime] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const { toast } = useToast();\n\n  // Fetch all ingredients to display names\n  const { data: ingredients = [] } = useQuery<Ingredient[]>({\n    queryKey: ['/api/ingredients'],\n  });\n\n  const getIngredientName = (id: string) => {\n    const ing = ingredients.find(i => i.id === id);\n    return ing?.nameDE || id;\n  };\n\n  const createOrderMutation = useMutation({\n    mutationFn: async (data: { name: string; phone: string; pickupTime: string; tableNumber?: string; serviceType: string; total: string; comment?: string; items: any[] }) => {\n      return await apiRequest('POST', '/api/orders', data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Bestellung erfolgreich!\",\n        description: serviceType === \"pickup\" \n          ? \"Ihre Bestellung zur Abholung wurde aufgegeben.\"\n          : \"Ihre Bestellung f√ºr den Verzehr im Restaurant wurde aufgegeben.\",\n      });\n      clearCart();\n      setShowCheckout(false);\n      setCustomerName(\"\");\n      setCustomerPhone(\"\");\n      setTableNumber(\"\");\n      setPickupTime(\"\");\n      setComment(\"\");\n      onClose();\n      queryClient.invalidateQueries({ queryKey: ['/api/orders'] });\n    },\n    onError: () => {\n      toast({\n        title: \"Fehler\",\n        description: \"Bestellung konnte nicht aufgegeben werden.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleCheckout = () => {\n    const requiredField = serviceType === \"pickup\" ? pickupTime : tableNumber;\n    if (!customerName || !customerPhone || !requiredField) {\n      toast({\n        title: \"Fehlende Angaben\",\n        description: \"Bitte f√ºllen Sie alle erforderlichen Felder aus.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const orderData = {\n      name: customerName,\n      phone: customerPhone,\n      pickupTime: serviceType === \"pickup\" ? pickupTime : \"\",\n      tableNumber: serviceType === \"dinein\" ? tableNumber : \"\",\n      serviceType: serviceType,\n      total: getTotal().toFixed(2),\n      comment: comment || undefined,\n      items: items.map(item => ({\n        menuItemId: item.menuItemId,\n        name: item.name,\n        nameDE: item.nameDE,\n        price: item.price,\n        quantity: item.quantity,\n        size: item.size,\n        customization: item.customization ? JSON.stringify(item.customization) : null,\n      })),\n    };\n    createOrderMutation.mutate(orderData);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 animate-fade-in\">\n      {/* Backdrop */}\n      <div\n        className=\"absolute inset-0 bg-black/60 backdrop-blur-sm\"\n        onClick={onClose}\n        data-testid=\"backdrop-cart-modal\"\n      />\n\n      {/* Modal */}\n      <div className=\"relative bg-background rounded-2xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-hidden flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"font-poppins text-2xl md:text-3xl font-bold text-ocean flex items-center gap-2\" data-testid=\"text-cart-title\">\n            <ShoppingBag className=\"w-7 h-7\" />\n            Ihr Warenkorb\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-accent rounded-full transition-colors\"\n            data-testid=\"button-close-cart\"\n            aria-label=\"Close cart\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-y-auto p-6\">\n          {items.length === 0 ? (\n            <div className=\"text-center py-12\" data-testid=\"empty-cart\">\n              <ShoppingBag className=\"w-20 h-20 mx-auto mb-4 text-muted-foreground/30\" />\n              <p className=\"font-poppins text-xl text-muted-foreground mb-2\">\n                Dein Warenkorb ist leer\n              </p>\n              <p className=\"font-lato text-sm text-muted-foreground\">\n                F√ºge leckere Poke Bowls hinzu!\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {items.map((item) => (\n                <div\n                  key={item.id}\n                  className=\"flex gap-4 p-4 bg-card rounded-lg border border-card-border\"\n                  data-testid={`cart-item-${item.id}`}\n                >\n                  <img\n                    src={item.image}\n                    alt={item.nameDE}\n                    className=\"w-20 h-20 object-cover rounded-md flex-shrink-0\"\n                    data-testid={`img-cart-item-${item.id}`}\n                  />\n                  <div className=\"flex-1 min-w-0\">\n                    <h3 className=\"font-poppins font-bold text-foreground mb-1\" data-testid={`text-cart-item-name-${item.id}`}>\n                      {item.nameDE}\n                    </h3>\n                    {item.size && (\n                      <p className=\"font-lato text-xs text-muted-foreground mb-1\" data-testid={`text-cart-item-size-${item.id}`}>\n                        Gr√∂√üe: {item.size === \"klein\" ? \"Klein\" : \"Standard\"}\n                      </p>\n                    )}\n                    \n                    {/* Customization details */}\n                    {item.customization && (\n                      <div className=\"mt-2 space-y-1 text-xs\">\n                        {item.customization.base && (\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"font-semibold text-muted-foreground\">Base:</span>\n                            <Badge variant=\"outline\" className=\"text-xs h-5\">{getIngredientName(item.customization.base)}</Badge>\n                          </div>\n                        )}\n                        {item.customization.marinade && (\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"font-semibold text-muted-foreground\">Marinade:</span>\n                            <Badge variant=\"outline\" className=\"text-xs h-5\">{getIngredientName(item.customization.marinade)}</Badge>\n                          </div>\n                        )}\n                        {item.customization.freshIngredients && item.customization.freshIngredients.length > 0 && (\n                          <div className=\"flex items-start gap-1\">\n                            <span className=\"font-semibold text-muted-foreground whitespace-nowrap\">Zutaten:</span>\n                            <div className=\"flex flex-wrap gap-1\">\n                              {item.customization.freshIngredients.map((ing, idx) => (\n                                <Badge key={idx} variant=\"outline\" className=\"text-xs h-5\">{getIngredientName(ing)}</Badge>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                        {item.customization.sauce && (\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"font-semibold text-muted-foreground\">Sauce:</span>\n                            <Badge variant=\"outline\" className=\"text-xs h-5\">{getIngredientName(item.customization.sauce)}</Badge>\n                          </div>\n                        )}\n                        {item.customization.toppings && item.customization.toppings.length > 0 && (\n                          <div className=\"flex items-start gap-1\">\n                            <span className=\"font-semibold text-muted-foreground whitespace-nowrap\">Toppings:</span>\n                            <div className=\"flex flex-wrap gap-1\">\n                              {item.customization.toppings.map((topping, idx) => (\n                                <Badge key={idx} variant=\"outline\" className=\"text-xs h-5\">{getIngredientName(topping)}</Badge>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                    \n                    <p className=\"font-poppins text-lg font-bold text-ocean mt-2\" data-testid={`text-cart-item-price-${item.id}`}>\n                      ‚Ç¨{item.price}\n                    </p>\n                  </div>\n                  <div className=\"flex flex-col items-end justify-between\">\n                    <div className=\"flex gap-1\">\n                      {item.customization && onEditItem && (\n                        <button\n                          onClick={() => onEditItem(item.id)}\n                          className=\"p-1 hover:bg-ocean/10 text-ocean rounded transition-colors\"\n                          data-testid={`button-edit-${item.id}`}\n                          aria-label=\"Edit item\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </button>\n                      )}\n                      <button\n                        onClick={() => removeItem(item.id)}\n                        className=\"p-1 hover:bg-destructive/10 text-destructive rounded transition-colors\"\n                        data-testid={`button-remove-${item.id}`}\n                        aria-label=\"Remove item\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        onClick={() => updateQuantity(item.id, Math.max(1, item.quantity - 1))}\n                        className=\"p-1 hover:bg-accent rounded transition-colors\"\n                        data-testid={`button-decrease-${item.id}`}\n                        aria-label=\"Decrease quantity\"\n                      >\n                        <Minus className=\"w-4 h-4\" />\n                      </button>\n                      <span className=\"font-bold w-8 text-center\" data-testid={`text-quantity-${item.id}`}>\n                        {item.quantity}\n                      </span>\n                      <button\n                        onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                        className=\"p-1 hover:bg-accent rounded transition-colors\"\n                        data-testid={`button-increase-${item.id}`}\n                        aria-label=\"Increase quantity\"\n                      >\n                        <Plus className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        {items.length > 0 && (\n          <div className=\"border-t p-6 space-y-4\">\n            {!showCheckout ? (\n              <>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"font-poppins text-xl font-bold text-foreground\">Gesamt:</span>\n                  <span className=\"font-poppins text-2xl font-bold text-ocean\" data-testid=\"text-cart-total\">\n                    ‚Ç¨{getTotal().toFixed(2)}\n                  </span>\n                </div>\n                <div className=\"flex gap-3\">\n                  <Button\n                    onClick={clearCart}\n                    variant=\"outline\"\n                    className=\"flex-1 font-poppins font-bold\"\n                    data-testid=\"button-clear-cart\"\n                  >\n                    Warenkorb leeren\n                  </Button>\n                  <Button\n                    onClick={() => setShowCheckout(true)}\n                    className=\"flex-1 bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold\"\n                    data-testid=\"button-checkout\"\n                  >\n                    Zur Kasse\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <span className=\"font-poppins text-xl font-bold text-foreground\">Bestellung abschlie√üen</span>\n                  <span className=\"font-poppins text-2xl font-bold text-ocean\" data-testid=\"text-checkout-total\">\n                    ‚Ç¨{getTotal().toFixed(2)}\n                  </span>\n                </div>\n                \n                {/* Order Type Selection */}\n                <div className=\"grid grid-cols-2 gap-3 mb-4\">\n                  <button\n                    onClick={() => setServiceType(\"pickup\")}\n                    className={`p-4 rounded-lg border-2 transition-all ${\n                      serviceType === \"pickup\"\n                        ? \"border-ocean bg-ocean/10 shadow-lg\"\n                        : \"border-gray-200 hover:border-gray-300\"\n                    }`}\n                    data-testid=\"button-order-type-pickup\"\n                  >\n                    <div className=\"flex flex-col items-center gap-2\">\n                      {serviceType === \"pickup\" && (\n                        <Check className=\"w-5 h-5 text-ocean\" />\n                      )}\n                      <span className=\"font-poppins font-semibold text-center\">\n                        Zum Mitnehmen\n                      </span>\n                    </div>\n                  </button>\n                  \n                  <button\n                    onClick={() => setServiceType(\"dinein\")}\n                    className={`p-4 rounded-lg border-2 transition-all ${\n                      serviceType === \"dinein\"\n                        ? \"border-ocean bg-ocean/10 shadow-lg\"\n                        : \"border-gray-200 hover:border-gray-300\"\n                    }`}\n                    data-testid=\"button-order-type-dinein\"\n                  >\n                    <div className=\"flex flex-col items-center gap-2\">\n                      {serviceType === \"dinein\" && (\n                        <Check className=\"w-5 h-5 text-ocean\" />\n                      )}\n                      <span className=\"font-poppins font-semibold text-center\">\n                        Im Restaurant essen\n                      </span>\n                    </div>\n                  </button>\n                </div>\n\n                {/* Customer Information Form */}\n                <div className=\"space-y-3\">\n                  <div>\n                    <Label htmlFor=\"customer-name\" className=\"font-poppins font-semibold\">Name *</Label>\n                    <Input\n                      id=\"customer-name\"\n                      value={customerName}\n                      onChange={(e) => setCustomerName(e.target.value)}\n                      placeholder=\"Ihr Name\"\n                      className=\"mt-1\"\n                      data-testid=\"input-customer-name\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"customer-phone\" className=\"font-poppins font-semibold\">Telefonnummer *</Label>\n                    <Input\n                      id=\"customer-phone\"\n                      type=\"tel\"\n                      value={customerPhone}\n                      onChange={(e) => setCustomerPhone(e.target.value)}\n                      placeholder=\"Ihre Telefonnummer\"\n                      className=\"mt-1\"\n                      data-testid=\"input-customer-phone\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"table-or-time\" className=\"font-poppins font-semibold\">\n                      {serviceType === \"pickup\" ? \"Abholzeit *\" : \"Tischnummer *\"}\n                    </Label>\n                    {serviceType === \"pickup\" ? (\n                      <Select value={pickupTime} onValueChange={setPickupTime}>\n                        <SelectTrigger className=\"mt-1\" data-testid=\"select-pickup-time\">\n                          <SelectValue placeholder=\"W√§hle deine Abholzeit\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {Array.from({ length: 48 }, (_, i) => {\n                            const hour = Math.floor(i / 4) + 10;\n                            const minute = (i % 4) * 15;\n                            if (hour >= 22) return null;\n                            const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n                            return (\n                              <SelectItem key={timeStr} value={timeStr}>\n                                {timeStr} Uhr\n                              </SelectItem>\n                            );\n                          }).filter(Boolean)}\n                        </SelectContent>\n                      </Select>\n                    ) : (\n                      <Select value={tableNumber} onValueChange={setTableNumber}>\n                        <SelectTrigger className=\"mt-1\" data-testid=\"select-table-number\">\n                          <SelectValue placeholder=\"W√§hle deinen Tisch\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {Array.from({ length: 20 }, (_, i) => i + 1).map((num) => (\n                            <SelectItem key={num} value={num.toString()}>\n                              Tisch {num}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    )}\n                  </div>\n                  \n                  <div>\n                    <Label htmlFor=\"comment\" className=\"font-poppins font-semibold\">Kommentar (optional)</Label>\n                    <Input\n                      id=\"comment\"\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                      placeholder=\"Besondere W√ºnsche oder Anmerkungen\"\n                      className=\"mt-1\"\n                      data-testid=\"input-comment\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"flex gap-3 mt-4\">\n                  <Button\n                    onClick={() => setShowCheckout(false)}\n                    variant=\"outline\"\n                    className=\"flex-1 font-poppins font-bold\"\n                    data-testid=\"button-back-to-cart\"\n                  >\n                    Zur√ºck\n                  </Button>\n                  <Button\n                    onClick={handleCheckout}\n                    disabled={createOrderMutation.isPending}\n                    className=\"flex-1 bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold\"\n                    data-testid=\"button-confirm-order\"\n                  >\n                    {createOrderMutation.isPending ? \"Wird bearbeitet...\" : \"Bestellung aufgeben\"}\n                  </Button>\n                </div>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":20203},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ReservationForm.tsx":{"content":"import { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\n\nconst reservationFormSchema = z.object({\n  name: z.string().min(2, \"Name muss mindestens 2 Zeichen lang sein\"),\n  guests: z.coerce.number().int().min(1, \"Mindestens 1 Person\").max(20, \"Maximal 20 Personen\"),\n  phone: z.string().min(5, \"Bitte geben Sie eine g√ºltige Telefonnummer ein\"),\n  date: z.string().min(1, \"Bitte w√§hlen Sie ein Datum\"),\n  time: z.string().min(1, \"Bitte w√§hlen Sie eine Uhrzeit\"),\n});\n\ntype ReservationFormValues = z.infer<typeof reservationFormSchema>;\n\nexport function ReservationForm() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<ReservationFormValues>({\n    resolver: zodResolver(reservationFormSchema),\n    defaultValues: {\n      name: \"\",\n      guests: 2,\n      phone: \"\",\n      date: \"\",\n      time: \"\",\n    },\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: ReservationFormValues) => {\n      return apiRequest(\"POST\", \"/api/reservations\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/reservations\"] });\n      toast({\n        title: \"Reservierung erfolgreich!\",\n        description: \"Wir haben Ihre Reservierung erhalten und werden uns bei Ihnen melden.\",\n      });\n      form.reset();\n    },\n    onError: () => {\n      toast({\n        variant: \"destructive\",\n        title: \"Fehler\",\n        description: \"Reservierung konnte nicht gespeichert werden. Bitte versuchen Sie es erneut.\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ReservationFormValues) => {\n    mutation.mutate(data);\n  };\n\n  return (\n    <Card className=\"p-6 md:p-8 max-w-2xl mx-auto\">\n      <div className=\"mb-6\">\n        <p className=\"text-sm text-ocean font-poppins font-semibold mb-2\" data-testid=\"text-reservation-subtitle\">\n          Reservierungsformular\n        </p>\n        <h2 className=\"font-poppins text-2xl md:text-3xl font-bold text-foreground mb-2\" data-testid=\"text-reservation-title\">\n          Herzlich Willkommen! Reservieren Sie jetzt Ihren Tisch und genie√üen Sie eine sch√∂ne Zeit bei uns.\n        </h2>\n      </div>\n\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Vor- und Nachname</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"Vor- und Nachname\"\n                    {...field}\n                    data-testid=\"input-name\"\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <FormField\n              control={form.control}\n              name=\"guests\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Anzahl der Personen</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      placeholder=\"Anzahl der Personen\"\n                      {...field}\n                      data-testid=\"input-guests\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Telefon</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"tel\"\n                      placeholder=\"Telefon\"\n                      {...field}\n                      data-testid=\"input-phone\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <FormField\n              control={form.control}\n              name=\"date\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Datum</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"date\"\n                      {...field}\n                      data-testid=\"input-date\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"time\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Uhrzeit</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"time\"\n                      {...field}\n                      data-testid=\"input-time\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <Button\n            type=\"submit\"\n            className=\"w-full bg-ocean hover:bg-ocean-dark font-poppins font-bold text-lg py-6\"\n            disabled={mutation.isPending}\n            data-testid=\"button-submit-reservation\"\n          >\n            {mutation.isPending ? \"Wird gesendet...\" : \"Reservierung\"}\n          </Button>\n        </form>\n      </Form>\n    </Card>\n  );\n}\n","size_bytes":6001},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/App.tsx":{"content":"import { useEffect } from \"react\";\nimport { Switch, Route, useLocation } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { Header } from \"@/components/Header\";\nimport { Footer } from \"@/components/Footer\";\nimport Home from \"@/pages/Home\";\nimport Menu from \"@/pages/Menu\";\nimport About from \"@/pages/About\";\nimport Contact from \"@/pages/Contact\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/menu\" component={Menu} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <div className=\"min-h-screen flex flex-col\">\n          <Header />\n          <main className=\"flex-1\">\n            <Router />\n          </main>\n          <Footer />\n        </div>\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1363},"server/data/menu.ts":{"content":"import { type InsertCategory, type InsertMenuItem } from \"@shared/schema\";\n\n// PokePao Categories\nexport const categories = [\n  {\n    name: \"Custom Bowls\",\n    nameDE: \"Wunsch Bowls\",\n    order: 0,\n  },\n  {\n    name: \"Poke Bowls\",\n    nameDE: \"Poke Bowls\",\n    order: 1,\n  },\n  {\n    name: \"Wraps\",\n    nameDE: \"Wraps\",\n    order: 2,\n  },\n  {\n    name: \"Appetizers\",\n    nameDE: \"Vorspeisen\",\n    order: 3,\n  },\n  {\n    name: \"Desserts\",\n    nameDE: \"Desserts\",\n    order: 4,\n  },\n  {\n    name: \"Drinks\",\n    nameDE: \"Getr√§nke\",\n    order: 5,\n  },\n] as const satisfies InsertCategory[];\n\n// PokePao Menu Items\nexport const createMenuItems = (categoryIds: { customBowls: string, bowls: string, wraps: string, appetizers: string, desserts: string, drinks: string }): InsertMenuItem[] => [\n  // Wunsch Bowls (Custom Bowls)\n  {\n    name: \"Custom Poke Bowl\",\n    nameDE: \"Wunsch Bowl\",\n    description: \"Create your own custom poke bowl: Choose protein, base, marinade, 4 fresh ingredients, sauce, and 3 toppings\",\n    descriptionDE: \"Stelle deinen Wunsch Bowl zusammen: W√§hle Protein, Base, Marinade, 4 frische Zutaten, Sauce und 3 Toppings\",\n    price: \"9.50\",\n    priceSmall: \"9.50\",\n    priceLarge: \"14.75\",\n    image: \"/images/wunschbowl/23.jpeg\",\n    categoryId: categoryIds.customBowls,\n    available: 1,\n    popular: 1,\n    hasSizeOptions: 1,\n    isCustomBowl: 1,\n  },\n  \n  // Poke Bowls\n  {\n    name: \"Thunfisch-Traum mit Reis\",\n    nameDE: \"Thunfisch-Traum mit Reis\",\n    description: \"Tuna poke bowl with rice, avocado, cucumber, cherry tomatoes, mango, edamame, soy-sesame sauce, sesame, pomegranate, and nori\",\n    descriptionDE: \"Thunfisch, Avocado, Gurke, Kirschtomaten, Mango, Edamame, Soja-Sesamsauce, Sesam, Granatapfel, Nori\",\n    price: \"9.90\",\n    priceSmall: \"9.90\",\n    priceLarge: \"15.90\",\n    image: \"/images/thunfisch-traum-reis.webp\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 1,\n    protein: \"Thunfisch\",\n    marinade: \"Lanai (mit Soja, Knoblauch)\",\n    ingredients: [\"Avocado\", \"Gurke\", \"Kirschtomaten\", \"Mango\", \"Edamame\"],\n    sauce: \"Soja-Sesamsauce\",\n    toppings: [\"Sesam\", \"Granatapfel\", \"Nori\"],\n    allergens: [\"Fisch\", \"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"H√§hnchen-Harmonie mit Reis\",\n    nameDE: \"H√§hnchen-Harmonie mit Reis\",\n    description: \"Chicken poke bowl with rice, edamame, butternut squash, cherry tomatoes, cucumber, soy-sesame sauce, roasted onions, peanuts, and spring onion\",\n    descriptionDE: \"H√§hnchen, Edamame, S√º√ük√ºrbis, Kirschtomaten, Gurken, Soja-Sesamsauce, ger√∂stete Zwiebeln, Erdn√ºsse, Fr√ºhlingszwiebeln\",\n    price: \"9.50\",\n    priceSmall: \"9.50\",\n    priceLarge: \"14.75\",\n    image: \"/images/haehnchen-harmonie-reis.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 1,\n    protein: \"H√§hnchen\",\n    marinade: \"Gozo (mit Knoblauch)\",\n    ingredients: [\"Edamame\", \"S√º√ük√ºrbis\", \"Kirschtomaten\", \"Gurken\"],\n    sauce: \"Soja-Sesamsauce\",\n    toppings: [\"ger√∂stete Zwiebeln\", \"Erdn√ºsse\", \"Fr√ºhlingszwiebeln\"],\n    allergens: [\"Sesam\", \"Soja\", \"Ei\", \"Schalenfr√ºchte (Cashewkerne)\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Lachs-Lust mit Quinoa\",\n    nameDE: \"Lachs-Lust mit Quinoa\",\n    description: \"Salmon poke bowl with quinoa, cherry tomatoes, mango, kimchi, edamame, teriyaki sauce, black olives, sunflower seeds, and spring onion\",\n    descriptionDE: \"Lachs, Kirschtomaten, Mango, Kimchi, Edamame, Teriyaki, Schwarze Oliven, Sonnenblumenkerne, Fr√ºhlingszwiebeln\",\n    price: \"9.90\",\n    priceSmall: \"9.90\",\n    priceLarge: \"15.90\",\n    image: \"/images/lachs-lust-quinoa.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 1,\n    protein: \"Lachs\",\n    marinade: \"Gozo (mit Knoblauch)\",\n    ingredients: [\"Kirschtomaten\", \"Mango\", \"Kimchi\", \"Edamame\"],\n    sauce: \"Teriyaki\",\n    toppings: [\"Schwarze Oliven\", \"Sonnenblumenkerne\", \"Fr√ºhlingszwiebeln\"],\n    allergens: [\"Fisch\", \"Soja\", \"Sesam\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Falafel-Freude mit Quinoa\",\n    nameDE: \"Falafel-Freude mit Quinoa\",\n    description: \"Falafel poke bowl with quinoa, cucumber, butternut squash, carrot, kimchi, mango-dill sauce, black olives, pumpkin seeds, and corn\",\n    descriptionDE: \"Falafel, Gurke, S√º√ük√ºrbis, Karotte, Kimchi, Mangodill, Schwarze Oliven, K√ºrbiskerne, Zuckermais\",\n    price: \"9.50\",\n    priceSmall: \"9.50\",\n    priceLarge: \"14.75\",\n    image: \"/images/falafel-freude-quinoa.webp\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Falafel\",\n    marinade: \"Capri (tomatig, mittelscharf)\",\n    ingredients: [\"Gurke\", \"S√º√ük√ºrbis\", \"Karotte\", \"Kimchi\"],\n    sauce: \"Mangodill\",\n    toppings: [\"Schwarze Oliven\", \"K√ºrbiskerne\", \"Zuckermais\"],\n    allergens: [\"Soja\", \"Ei\", \"Knoblauch\", \"H√ºlsenfr√ºchte (Kichererbsen)\", \"Schalenfr√ºchte (Mandeln)\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Garnelen-Genuss mit Reis\",\n    nameDE: \"Garnelen-Genuss mit Reis\",\n    description: \"Shrimp poke bowl with rice, corn, yellow radish, cucumber, carrot, kimchi sriracha sauce, pumpkin seeds, peanuts, and pickled ginger\",\n    descriptionDE: \"Garnelen, Zuckermais, Gelber Rettich, Gurke, Karotte, Kimchi Sriracha, K√ºrbiskerne, Erdn√ºsse, Ingwer eingelegt\",\n    price: \"9.90\",\n    priceSmall: \"9.90\",\n    priceLarge: \"15.90\",\n    image: \"/images/garnelen-genuss-reis.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Garnelen\",\n    marinade: \"Gozo (mit Knoblauch)\",\n    ingredients: [\"Zuckermais\", \"Gelber Rettich\", \"Gurke\", \"Karotte\"],\n    sauce: \"Kimchi Sriracha\",\n    toppings: [\"K√ºrbiskerne\", \"Erdn√ºsse\", \"Ingwer eingelegt\"],\n    allergens: [\"Krebstiere\", \"Sesam\", \"Soja\", \"Ei\", \"Erdn√ºsse\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Garnelen-Genuss mit Quinoa\",\n    nameDE: \"Garnelen-Genuss mit Quinoa\",\n    description: \"Shrimp poke bowl with quinoa, corn, yellow radish, cucumber, carrot, kimchi sriracha sauce, pumpkin seeds, peanuts, and pickled ginger\",\n    descriptionDE: \"Garnelen, Zuckermais, Gelber Rettich, Gurke, Karotte, Kimchi Sriracha, K√ºrbiskerne, Erdn√ºsse, Ingwer eingelegt\",\n    price: \"9.90\",\n    priceSmall: \"9.90\",\n    priceLarge: \"15.90\",\n    image: \"/images/garnelen-genuss-quinoa.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Garnelen\",\n    marinade: \"Gozo (mit Knoblauch)\",\n    ingredients: [\"Zuckermais\", \"Gelber Rettich\", \"Gurke\", \"Karotte\"],\n    sauce: \"Kimchi Sriracha\",\n    toppings: [\"K√ºrbiskerne\", \"Erdn√ºsse\", \"Ingwer eingelegt\"],\n    allergens: [\"Krebstiere\", \"Sesam\", \"Soja\", \"Ei\", \"Erdn√ºsse\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Falafel-Freude mit Reis\",\n    nameDE: \"Falafel-Freude mit Reis\",\n    description: \"Falafel poke bowl with rice, cucumber, butternut squash, carrot, kimchi, mango-dill sauce, black olives, pumpkin seeds, and corn\",\n    descriptionDE: \"Falafel, Gurke, S√º√ük√ºrbis, Karotte, Kimchi, Mangodill, Schwarze Oliven, K√ºrbiskerne, Zuckermais\",\n    price: \"9.50\",\n    priceSmall: \"9.50\",\n    priceLarge: \"14.75\",\n    image: \"/images/falafel-freude-reis.webp\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Falafel\",\n    marinade: \"Capri (tomatig, mittelscharf)\",\n    ingredients: [\"Gurke\", \"S√º√ük√ºrbis\", \"Karotte\", \"Kimchi\"],\n    sauce: \"Mangodill\",\n    toppings: [\"Schwarze Oliven\", \"K√ºrbiskerne\", \"Zuckermais\"],\n    allergens: [\"Soja\", \"Ei\", \"Knoblauch\", \"H√ºlsenfr√ºchte (Kichererbsen)\", \"Schalenfr√ºchte (Mandeln)\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Lachs-Lust mit Reis\",\n    nameDE: \"Lachs-Lust mit Reis\",\n    description: \"Salmon poke bowl with rice, cherry tomatoes, mango, kimchi, edamame, teriyaki sauce, black olives, sunflower seeds, and spring onion\",\n    descriptionDE: \"Lachs, Kirschtomaten, Mango, Kimchi, Edamame, Teriyaki, Schwarze Oliven, Sonnenblumenkerne, Fr√ºhlingszwiebeln\",\n    price: \"9.90\",\n    priceSmall: \"9.90\",\n    priceLarge: \"15.90\",\n    image: \"/images/lachs-lust-reis.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Lachs\",\n    marinade: \"Gozo (mit Knoblauch)\",\n    ingredients: [\"Kirschtomaten\", \"Mango\", \"Kimchi\", \"Edamame\"],\n    sauce: \"Teriyaki\",\n    toppings: [\"Schwarze Oliven\", \"Sonnenblumenkerne\", \"Fr√ºhlingszwiebeln\"],\n    allergens: [\"Fisch\", \"Soja\", \"Sesam\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Tofu-Triumph mit Reis\",\n    nameDE: \"Tofu-Triumph mit Reis\",\n    description: \"Tofu poke bowl with rice, spinach, sweet potato, cherry tomatoes, corn, kimchi sriracha sauce, pickled ginger, spring onion, and roasted onions\",\n    descriptionDE: \"Tofu, Spinat, S√º√ükartoffel, Kirschtomaten, Zuckermais, Kimchi Sriracha, Ingwer eingelegt, Fr√ºhlingszwiebeln, Ger√∂stete Zwiebeln\",\n    price: \"9.50\",\n    priceSmall: \"9.50\",\n    priceLarge: \"14.75\",\n    image: \"/images/tofu-triumph-reis.webp\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Tofu\",\n    marinade: \"Capri (tomatig, mittelscharf)\",\n    ingredients: [\"Spinat\", \"S√º√ükartoffel\", \"Kirschtomaten\", \"Zuckermais\"],\n    sauce: \"Kimchi Sriracha\",\n    toppings: [\"Ingwer eingelegt\", \"Fr√ºhlingszwiebeln\", \"Ger√∂stete Zwiebeln\"],\n    allergens: [\"Soja\", \"Ei\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Tofu-Triumph mit Quinoa\",\n    nameDE: \"Tofu-Triumph mit Quinoa\",\n    description: \"Tofu poke bowl with quinoa, spinach, sweet potato, cherry tomatoes, corn, kimchi sriracha sauce, pickled ginger, spring onion, and roasted onions\",\n    descriptionDE: \"Tofu, Spinat, S√º√ükartoffel, Kirschtomaten, Zuckermais, Kimchi Sriracha, Ingwer eingelegt, Fr√ºhlingszwiebeln, Ger√∂stete Zwiebeln\",\n    price: \"9.50\",\n    priceSmall: \"9.50\",\n    priceLarge: \"14.75\",\n    image: \"/images/tofu-triumph-quinoa.webp\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Tofu\",\n    marinade: \"Capri (tomatig, mittelscharf)\",\n    ingredients: [\"Spinat\", \"S√º√ükartoffel\", \"Kirschtomaten\", \"Zuckermais\"],\n    sauce: \"Kimchi Sriracha\",\n    toppings: [\"Ingwer eingelegt\", \"Fr√ºhlingszwiebeln\", \"Ger√∂stete Zwiebeln\"],\n    allergens: [\"Soja\", \"Ei\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Thunfisch-Traum mit Quinoa\",\n    nameDE: \"Thunfisch-Traum mit Quinoa\",\n    description: \"Tuna poke bowl with quinoa, avocado, cucumber, cherry tomatoes, mango, edamame, soy-sesame sauce, sesame, pomegranate, and nori\",\n    descriptionDE: \"Thunfisch, Avocado, Gurke, Kirschtomaten, Mango, Edamame, Soja-Sesamsauce, Sesam, Granatapfel, Nori\",\n    price: \"9.90\",\n    priceSmall: \"9.90\",\n    priceLarge: \"15.90\",\n    image: \"/images/thunfisch-traum-quinoa.webp\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Thunfisch\",\n    marinade: \"Lanai (mit Soja, Knoblauch)\",\n    ingredients: [\"Avocado\", \"Gurke\", \"Kirschtomaten\", \"Mango\", \"Edamame\"],\n    sauce: \"Soja-Sesamsauce\",\n    toppings: [\"Sesam\", \"Granatapfel\", \"Nori\"],\n    allergens: [\"Fisch\", \"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"H√§hnchen-Harmonie mit Quinoa\",\n    nameDE: \"H√§hnchen-Harmonie mit Quinoa\",\n    description: \"Chicken poke bowl with quinoa, edamame, butternut squash, cherry tomatoes, cucumber, soy-sesame sauce, roasted onions, peanuts, and spring onion\",\n    descriptionDE: \"H√§hnchen, Edamame, S√º√ük√ºrbis, Kirschtomaten, Gurken, Soja-Sesamsauce, ger√∂stete Zwiebeln, Erdn√ºsse, Fr√ºhlingszwiebeln\",\n    price: \"9.50\",\n    priceSmall: \"9.50\",\n    priceLarge: \"14.75\",\n    image: \"/images/haehnchen-harmonie-quinoa.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"H√§hnchen\",\n    marinade: \"Gozo (mit Knoblauch)\",\n    ingredients: [\"Edamame\", \"S√º√ük√ºrbis\", \"Kirschtomaten\", \"Gurken\"],\n    sauce: \"Soja-Sesamsauce\",\n    toppings: [\"ger√∂stete Zwiebeln\", \"Erdn√ºsse\", \"Fr√ºhlingszwiebeln\"],\n    allergens: [\"Sesam\", \"Soja\", \"Ei\", \"Schalenfr√ºchte (Cashewkerne)\", \"Knoblauch\"],\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Vitamins Bowl\",\n    nameDE: \"Vitamins Bowl\",\n    description: \"Light and incredibly tasty bowl full of vitamins - the perfect energy boost for the workday. Fresh vegetables and homemade dressing for enjoyment, lightness and clear thoughts\",\n    descriptionDE: \"Leicht, unglaublich lecker und voller Vitamine ‚Äî der perfekte Energieschub f√ºr den Arbeitstag. Frisches Gem√ºse und hausgemachtes Dressing\",\n    price: \"5.70\",\n    priceSmall: \"5.70\",\n    priceLarge: \"8.70\",\n    image: \"/images/vitamins-bowl.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    hasSizeOptions: 1,\n  },\n  {\n    name: \"Mittags Bowl mit H√§hnchen\",\n    nameDE: \"Mittags Bowl mit H√§hnchen\",\n    description: \"Large, delicious, filling: tender chicken on rice with signature sauce and marinade, plus tomatoes, cucumber, spinach, kimchi, carrot, zucchini, fried onions and spring onions (Monday to Friday, 12:00-15:00)\",\n    descriptionDE: \"Gro√ü, lecker, sattigend: zartes H√§hnchen auf Reis mit Signature-Sauce und Marinade, dazu Tomaten, Gurke, Spinat, Kimchi, Karotte, Zucchini, R√∂stzwiebeln und Fr√ºhlingszwiebeln\",\n    price: \"6.90\",\n    image: \"/images/mittags-bowl-haehnchen.png\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 1,\n    protein: \"H√§hnchen\",\n    ingredients: [\"Tomaten\", \"Gurke\", \"Spinat\", \"Kimchi\", \"Karotte\", \"Zucchini\"],\n    toppings: [\"R√∂stzwiebeln\", \"Fr√ºhlingszwiebeln\"],\n  },\n  {\n    name: \"Mittags Bowl mit Tofu\",\n    nameDE: \"Mittags Bowl mit Tofu\",\n    description: \"Large, delicious, filling: soft, incredibly flavorful tofu on rice with signature sauce and marinade, plus tomatoes, cucumber, spinach, kimchi, carrot, zucchini, fried onions and spring onions (Monday to Friday, 12:00-15:00)\",\n    descriptionDE: \"Gro√ü, lecker, sattigend: weicher, unglaublich schmackhafter Tofu auf Reis mit Signature-Sauce und Marinade, dazu Tomaten, Gurke, Spinat, Kimchi, Karotte, Zucchini, R√∂stzwiebeln und Fr√ºhlingszwiebeln\",\n    price: \"6.90\",\n    image: \"/images/mittags-bowl-tofu.webp\",\n    categoryId: categoryIds.bowls,\n    available: 1,\n    popular: 0,\n    protein: \"Tofu\",\n    ingredients: [\"Tomaten\", \"Gurke\", \"Spinat\", \"Kimchi\", \"Karotte\", \"Zucchini\"],\n    toppings: [\"R√∂stzwiebeln\", \"Fr√ºhlingszwiebeln\"],\n  },\n\n  // Wraps\n  {\n    name: \"Wrap mit H√§hnchen\",\n    nameDE: \"Wrap mit H√§hnchen\",\n    description: \"A hearty wrap with tender chicken, fresh vegetables and a creamy sauce\",\n    descriptionDE: \"Ein herzhafter Wrap mit zartem H√§hnchen, frischem Gem√ºse und einer cremigen Sauce\",\n    price: \"9.70\",\n    image: \"/images/wrap-haehnchen.webp\",\n    categoryId: categoryIds.wraps,\n    available: 1,\n    popular: 1,\n    protein: \"H√§hnchen\",\n    allergens: [\"Gluten\", \"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n  },\n  {\n    name: \"Wrap mit Lachs\",\n    nameDE: \"Wrap mit Lachs\",\n    description: \"A light wrap with juicy salmon, crisp vegetables and a spicy sauce\",\n    descriptionDE: \"Ein leichter Wrap mit saftigem Lachs, knackigem Gem√ºse und einer w√ºrzigen Sauce\",\n    price: \"9.70\",\n    image: \"/images/wrap-lachs.webp\",\n    categoryId: categoryIds.wraps,\n    available: 1,\n    popular: 0,\n    protein: \"Lachs\",\n    allergens: [\"Gluten\", \"Fisch\", \"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n  },\n  {\n    name: \"Wrap mit unglaublich leckerem Tofu\",\n    nameDE: \"Wrap mit unglaublich leckerem Tofu\",\n    description: \"A vegan option with incredibly delicious tofu, fresh vegetables and creamy sauce\",\n    descriptionDE: \"Eine vegane Option mit unglaublich leckerem Tofu, frischem Gem√ºse und cremiger Sauce\",\n    price: \"9.70\",\n    image: \"https://pokepao.de/assets/images/menu/no-image.png\",\n    categoryId: categoryIds.wraps,\n    available: 1,\n    popular: 0,\n    protein: \"Tofu\",\n    allergens: [\"Gluten\", \"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n  },\n  {\n    name: \"Wrap mit Falafel\",\n    nameDE: \"Wrap mit Falafel\",\n    description: \"A spicy wrap with homemade falafel, fresh vegetables and an aromatic sauce\",\n    descriptionDE: \"Ein w√ºrziger Wrap mit hausgemachtem Falafel, frischem Gem√ºse und einer aromatischen Sauce\",\n    price: \"9.70\",\n    image: \"/images/wrap-falafel.webp\",\n    categoryId: categoryIds.wraps,\n    available: 1,\n    popular: 0,\n    protein: \"Falafel\",\n    allergens: [\"Gluten\", \"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\", \"H√ºlsenfr√ºchte\"],\n  },\n\n  // Appetizers/Sides\n  {\n    name: \"Fr√ºhlingsrollen (12 St√ºck)\",\n    nameDE: \"Fr√ºhlingsrollen (12 St√ºck)\",\n    description: \"Crispy, from the airfryer, with vegetables & teriyaki sauce ‚Äì ideal for sharing\",\n    descriptionDE: \"Knusprig, aus dem Airfryer, mit Gem√ºse & Teriyaki-Sauce ‚Äì ideal zum Teilen\",\n    price: \"7.50\",\n    image: \"/images/fruehlingsrollen.webp\",\n    categoryId: categoryIds.appetizers,\n    available: 1,\n    popular: 1,\n    allergens: [\"Weizen (Gluten)\", \"Sesam\", \"Soja\"],\n  },\n  {\n    name: \"Green-Salat\",\n    nameDE: \"Green-Salat\",\n    description: \"A light, vitamin-rich salad with fresh vegetables and an aromatic sauce\",\n    descriptionDE: \"Ein leichter, vitaminreicher Salat mit frischem Gem√ºse und einer aromatischen Sauce\",\n    price: \"9.70\",\n    image: \"/images/green-salat.webp\",\n    categoryId: categoryIds.appetizers,\n    available: 1,\n    popular: 0,\n    allergens: [\"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n  },\n  {\n    name: \"Tofu-Salat\",\n    nameDE: \"Tofu-Salat\",\n    description: \"A fresh and nutritious salad with incredibly delicious tofu, colorful vegetables and a creamy sauce\",\n    descriptionDE: \"Ein frischer und nahrhafter Salat mit unglaublich leckerem Tofu, buntem Gem√ºse und einer cremigen Sauce\",\n    price: \"12.70\",\n    image: \"/images/tofu-salat.webp\",\n    categoryId: categoryIds.appetizers,\n    available: 1,\n    popular: 0,\n    protein: \"Tofu\",\n    allergens: [\"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n  },\n  {\n    name: \"H√§hnchen-Salat\",\n    nameDE: \"H√§hnchen-Salat\",\n    description: \"A protein-rich salad with tender chicken, crisp vegetables and a spicy sauce\",\n    descriptionDE: \"Ein proteinreicher Salat mit zartem H√§hnchen, knackigem Gem√ºse und einer w√ºrzigen Sauce\",\n    price: \"12.70\",\n    image: \"/images/haehnchen-salat.webp\",\n    categoryId: categoryIds.appetizers,\n    available: 1,\n    popular: 0,\n    protein: \"H√§hnchen\",\n    allergens: [\"Soja\", \"Sesam\", \"Ei\", \"Knoblauch\"],\n  },\n  {\n    name: \"Zarte H√§hnchenstreifen (150g)\",\n    nameDE: \"Zarte H√§hnchenstreifen (150g)\",\n    description: \"Juicy, aromatic chicken strips in a delicious marinade, perfectly cooked in the airgrill for a healthy preparation\",\n    descriptionDE: \"Saftige, aromatische H√§hnchenstreifen in einer k√∂stlichen Marinade, perfekt gegart im Airgrill\",\n    price: \"5.70\",\n    image: \"/images/haehnchenstreifen.webp\",\n    categoryId: categoryIds.appetizers,\n    available: 1,\n    popular: 0,\n    protein: \"H√§hnchen\",\n    marinade: \"Mit Sojasauce und Teriyaki verfeinert\",\n    allergens: [\"Soja\", \"Sesam\", \"Knoblauch\"],\n  },\n  {\n    name: \"Wakame-Salat (100g)\",\n    nameDE: \"Wakame-Salat (100g)\",\n    description: \"Refreshing, slightly spicy seaweed salad with a hint of sesame. Perfect as a healthy side dish\",\n    descriptionDE: \"Erfrischender, leicht w√ºrziger Algensalat mit einem Hauch Sesam. Perfekt als gesunde Beilage\",\n    price: \"3.90\",\n    image: \"/images/wakame-salat.webp\",\n    categoryId: categoryIds.appetizers,\n    available: 1,\n    popular: 0,\n    allergens: [\"Sesam\", \"Soja\"],\n  },\n\n  // Desserts\n  {\n    name: \"A√ßa√≠ Bowl\",\n    nameDE: \"A√ßa√≠ Bowl\",\n    description: \"A refreshing and healthy superfood dessert with fruity a√ßa√≠ and exotic toppings\",\n    descriptionDE: \"Ein erfrischender und gesunder Superfood-Dessert mit fruchtigem A√ßa√≠ und exotischen Toppings\",\n    price: \"12.70\",\n    image: \"/images/acai-bowl.webp\",\n    categoryId: categoryIds.desserts,\n    available: 1,\n    popular: 1,\n    allergens: [\"Schalenfr√ºchte (Kokos)\", \"Chiasamen\"],\n  },\n  {\n    name: \"Mandeln in wei√üer Schokolade mit Kokos\",\n    nameDE: \"Mandeln in wei√üer Schokolade mit Kokos\",\n    description: \"Crunchy almonds coated in creamy white chocolate and fine coconut flakes\",\n    descriptionDE: \"Knackige Mandeln umh√ºllt von cremiger wei√üer Schokolade und feinen Kokosraspeln\",\n    price: \"3.90\",\n    image: \"/images/mandeln-weisse-schokolade.webp\",\n    categoryId: categoryIds.desserts,\n    available: 1,\n    popular: 0,\n    allergens: [\"Schalenfr√ºchte (Mandeln, Kokos)\", \"Milch\"],\n  },\n  {\n    name: \"Kokosnuss in Vollmilchschokolade\",\n    nameDE: \"Kokosnuss in Vollmilchschokolade\",\n    description: \"Fine coconut coated in melting milk chocolate\",\n    descriptionDE: \"Feine Kokosnuss umh√ºllt von zartschmelzender Vollmilchschokolade\",\n    price: \"3.90\",\n    image: \"/images/kokosnuss-vollmilchschokolade.webp\",\n    categoryId: categoryIds.desserts,\n    available: 1,\n    popular: 0,\n    allergens: [\"Schalenfr√ºchte (Kokos)\", \"Milch\"],\n  },\n  {\n    name: \"Kokoskugel Deluxe\",\n    nameDE: \"Kokoskugel Deluxe\",\n    description: \"Tender coconut praline with vanilla and sweetened condensed milk\",\n    descriptionDE: \"Zarte Kokospraline mit Vanille und ges√º√üter Kondensmilch\",\n    price: \"1.90\",\n    image: \"/images/kokoskugel-deluxe.webp\",\n    categoryId: categoryIds.desserts,\n    available: 1,\n    popular: 0,\n    allergens: [\"Schalenfr√ºchte (Kokos)\", \"Milch\"],\n  },\n\n  // Drinks - Smoothies\n  {\n    name: \"Gr√ºner Tropensturm\",\n    nameDE: \"Gr√ºner Tropensturm\",\n    description: \"Fresh green smoothie with spinach, banana, pineapple, mango, mint, and apple\",\n    descriptionDE: \"Spinat, Banane, Ananas, Mango, Minze, Apfel\",\n    price: \"5.50\",\n    image: \"/images/67217032025165311_1760608014573.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 1,\n  },\n  {\n    name: \"Goldene Paradieswelle\",\n    nameDE: \"Goldene Paradieswelle\",\n    description: \"Tropical smoothie with pineapple, mango, apple, banana, passion fruit, and orange\",\n    descriptionDE: \"Ananas, Mango, Apfel, Banane, Maracuja, Orange\",\n    price: \"5.50\",\n    image: \"/images/91017032025165651_1760608033694.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  {\n    name: \"Vitaminwunder\",\n    nameDE: \"Vitaminwunder\",\n    description: \"Vitamin-rich smoothie with orange, apple, carrot, pumpkin, pineapple, and mango\",\n    descriptionDE: \"Orange, Apfel, Karotte, K√ºrbis, Ananas, Mango\",\n    price: \"5.50\",\n    image: \"/images/69717032025175940_1760608042517.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  {\n    name: \"Lila Energieboost\",\n    nameDE: \"Lila Energieboost\",\n    description: \"Energy-packed purple smoothie with acai, banana, raspberries, blackberries, blueberries, black currants, and orange\",\n    descriptionDE: \"Acai, Banane, Himbeeren, Brombeeren, Blaubeeren, schwarze Johannisbeeren, Orange\",\n    price: \"5.50\",\n    image: \"/images/42817032025180237_1760608056886.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n\n  // Drinks - Beer\n  {\n    name: \"Peroni Nastro Azzurro\",\n    nameDE: \"Peroni Nastro Azzurro\",\n    description: \"Light alcohol-free Italian premium beer with fine citrus note\",\n    descriptionDE: \"Leichtes alkoholfreies italienisches Premium-Bier mit feiner Zitrusnote\",\n    price: \"3.50\",\n    image: \"/images/drinks/beer-peroni.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 1,\n  },\n  {\n    name: \"Beck's Blue\",\n    nameDE: \"Beck's Blue\",\n    description: \"Refreshing alcohol-free beer with light malt and hop flavor\",\n    descriptionDE: \"Erfrischendes alkoholfreies Bier mit leichtem Malz- und Hopfengeschmack\",\n    price: \"3.50\",\n    image: \"/images/56117032025181608_1760608102257.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  \n  // Drinks - Soft Drinks\n  {\n    name: \"Fritz-Kola\",\n    nameDE: \"Fritz-Kola\",\n    description: \"Cult cola from Hamburg - choose from Classic light, Original, Orange, Honigmelone, or Apfel-Kirsch-Holunder\",\n    descriptionDE: \"1. Classic light ohne Zuker\\n2. Original\\n3. Orange\\n4. Honigmelone\\n5. Apfel-Kirsch-Holunder\",\n    price: \"2.90\",\n    image: \"/images/69917032025183322_1760608213787.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 1,\n  },\n  \n  // Drinks - Coffee\n  {\n    name: \"Kaffee\",\n    nameDE: \"Kaffee\",\n    description: \"Freshly brewed coffee\",\n    descriptionDE: \"Frisch gebr√ºhter Kaffee\",\n    price: \"2.90\",\n    image: \"/images/59417032025182607_1760608171390.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 1,\n  },\n  {\n    name: \"Espresso\",\n    nameDE: \"Espresso\",\n    description: \"Strong Italian espresso\",\n    descriptionDE: \"Kr√§ftiger italienischer Espresso\",\n    price: \"2.90\",\n    image: \"/images/59417032025182607_1760608171390.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  {\n    name: \"Cappuccino\",\n    nameDE: \"Cappuccino\",\n    description: \"Italian cappuccino with creamy milk foam\",\n    descriptionDE: \"Italienischer Cappuccino mit cremigem Milchschaum\",\n    price: \"3.90\",\n    image: \"/images/96717032025182912_1760608213788.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 1,\n  },\n  {\n    name: \"Latte Macchiato\",\n    nameDE: \"Latte Macchiato\",\n    description: \"Layered coffee drink with steamed milk and espresso\",\n    descriptionDE: \"Geschichtetes Kaffeegetr√§nk mit aufgesch√§umter Milch und Espresso\",\n    price: \"3.90\",\n    image: \"/images/33918032025134434_1760608213788.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  \n  // Drinks - Water\n  {\n    name: \"Stilles Wasser\",\n    nameDE: \"Stilles Wasser\",\n    description: \"Still mineral water 0.5l\",\n    descriptionDE: \"0.5l\",\n    price: \"2.90\",\n    image: \"/images/89417032025184229_1760608213787.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  {\n    name: \"Sprudel Wasser\",\n    nameDE: \"Sprudel Wasser\",\n    description: \"Sparkling mineral water 0.5l\",\n    descriptionDE: \"0.5l\",\n    price: \"2.90\",\n    image: \"/images/22417032025184355_1760608213786.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n\n  // Drinks - Cocktails\n  {\n    name: \"Martini Eleganz\",\n    nameDE: \"Martini Eleganz\",\n    description: \"Refreshing mocktail with alcohol-free Martini, sparkling Schweppes and fresh berries - refreshing and sophisticated\",\n    descriptionDE: \"Erfrischender Mocktail mit alkoholfreiem Martini, spritzigem Schweppes und frischen Beeren ‚Äì einfruchtig - herber Genuss\",\n    price: \"5.50\",\n    image: \"/images/10517032025182015_1760608171391.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  {\n    name: \"Mandelmagie\",\n    nameDE: \"Mandelmagie\",\n    description: \"Refreshing mocktail with alcohol-free Amaretto, citrus fruits and mint\",\n    descriptionDE: \"Erfrischender Mocktail mit alkoholfreiem Amaretto, Zitrusfr√ºchten und Minze\",\n    price: \"5.50\",\n    image: \"/images/15817032025182220_1760608171391.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n\n  // Drinks - Beer\n  {\n    name: \"Heineken\",\n    nameDE: \"Heineken\",\n    description: \"Fresh alcohol-free quality beer\",\n    descriptionDE: \"frisches alkoholfreies Qualit√§tsbier\",\n    price: \"3.50\",\n    image: \"/images/image_1760608442538.png\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n\n  // Drinks - Tea Specialties\n  {\n    name: \"Teespezialit√§ten - Kokostraum\",\n    nameDE: \"Teespezialit√§ten - Kokostraum\",\n    description: \"Coconut dream tea\",\n    descriptionDE: \"Kokostraum\",\n    price: \"3.90\",\n    image: \"/images/73517032025183935_1760608213787.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n  {\n    name: \"Teespezialit√§ten - Ingwer-Lemongras\",\n    nameDE: \"Teespezialit√§ten - Ingwer-Lemongras\",\n    description: \"Ginger lemongrass tea\",\n    descriptionDE: \"Ingwer-Lemongras\",\n    price: \"3.90\",\n    image: \"/images/93317032025183849_1760608213787.jpg\",\n    categoryId: categoryIds.drinks,\n    available: 1,\n    popular: 0,\n  },\n];\n","size_bytes":28159},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/pages/Home.tsx":{"content":"import { Link } from \"wouter\";\nimport { Hero } from \"@/components/Hero\";\nimport { Gallery3D } from \"@/components/Gallery3D\";\nimport { ReservationForm } from \"@/components/ReservationForm\";\nimport { Truck, ShoppingBag, Calendar } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Hero />\n\n      {/* Order Options Section */}\n      <section id=\"order-options\" className=\"py-16 md:py-24 bg-muted\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"font-poppins text-3xl md:text-4xl lg:text-5xl font-bold text-ocean mb-4\" data-testid=\"text-section-title\">\n              W√§hle dein Erlebnis\n            </h2>\n            <p className=\"font-lato text-lg md:text-xl text-muted-foreground max-w-2xl mx-auto\" data-testid=\"text-section-subtitle\">\n              Ob schnell geliefert, zum Mitnehmen oder gem√ºtlich bei uns ‚Äì Frische ist garantiert.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {/* Delivery Card */}\n              <Card className=\"relative p-8 rounded-2xl shadow-md hover:shadow-lg transition-all duration-300 border-2 border-transparent hover:border-ocean/20\" data-testid=\"card-delivery\">\n              {/* 10% Rabatt Badge */}\n              <div className=\"absolute -top-4 left-1/2 -translate-x-1/2\">\n                <span className=\"bg-destructive text-white font-poppins font-bold text-sm rounded-full px-4 py-1.5 shadow-lg\" data-testid=\"badge-discount\">\n                  10% RABATT\n                </span>\n              </div>\n\n              <div className=\"flex flex-col items-center text-center\">\n                <div className=\"bg-ocean/10 p-4 rounded-full mb-6\">\n                  <Truck className=\"w-12 h-12 text-ocean\" />\n                </div>\n                <h3 className=\"font-poppins text-2xl font-bold text-ocean mb-3\" data-testid=\"text-delivery-title\">\n                  Lieferung\n                </h3>\n                <p className=\"font-lato text-muted-foreground mb-6\" data-testid=\"text-delivery-description\">\n                  Bestell √ºber Lieferando, Wolt oder Uber Eats und spare 10% bei deiner Online-Bestellung!\n                </p>\n                <Button\n                  asChild\n                  variant=\"outline\"\n                  className=\"font-poppins font-bold rounded-full px-6 py-3 border-2 border-ocean text-ocean hover:bg-ocean hover:text-white transition-all\"\n                  data-testid=\"button-delivery\"\n                >\n                  <a href=\"https://www.lieferando.de/speisekarte/poke-pao\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Lieferando & Co.\n                  </a>\n                </Button>\n              </div>\n            </Card>\n\n            {/* Pickup Card */}\n              <Card className=\"p-8 rounded-2xl shadow-md hover:shadow-lg transition-all duration-300 border-2 border-transparent hover:border-ocean/20\" data-testid=\"card-pickup\">\n              <div className=\"flex flex-col items-center text-center\">\n                <div className=\"bg-ocean/10 p-4 rounded-full mb-6\">\n                  <ShoppingBag className=\"w-12 h-12 text-ocean\" />\n                </div>\n                <h3 className=\"font-poppins text-2xl font-bold text-ocean mb-3\" data-testid=\"text-pickup-title\">\n                  Speisekarte & Abholung\n                </h3>\n                <p className=\"font-lato text-muted-foreground mb-6\" data-testid=\"text-pickup-description\">\n                  Online vorbestellen, ohne Wartezeit abholen. Perfekt f√ºr die Mittagspause!\n                </p>\n                <Button\n                  asChild\n                  className=\"font-poppins font-bold rounded-full px-6 py-3 bg-sunset hover:bg-sunset-dark text-white shadow-lg hover:shadow-xl transition-all\"\n                  data-testid=\"button-pickup\"\n                >\n                  <Link href=\"/menu\">Speisekarte ansehen</Link>\n                </Button>\n              </div>\n            </Card>\n\n            {/* Reservation Card */}\n              <Card className=\"p-8 rounded-2xl shadow-md hover:shadow-lg transition-all duration-300 border-2 border-transparent hover:border-ocean/20\" data-testid=\"card-reservation\">\n              <div className=\"flex flex-col items-center text-center\">\n                <div className=\"bg-ocean/10 p-4 rounded-full mb-6\">\n                  <Calendar className=\"w-12 h-12 text-ocean\" />\n                </div>\n                <h3 className=\"font-poppins text-2xl font-bold text-ocean mb-3\" data-testid=\"text-reservation-title\">\n                  Vor Ort genie√üen\n                </h3>\n                <p className=\"font-lato text-muted-foreground mb-6\" data-testid=\"text-reservation-description\">\n                  Besuche uns direkt im Restaurant und genie√üe deine Poke Bowl in gem√ºtlicher Atmosph√§re!\n                </p>\n                <Button\n                  asChild\n                  variant=\"outline\"\n                  className=\"font-poppins font-bold rounded-full px-6 py-3 border-2 border-ocean text-ocean hover:bg-ocean hover:text-white transition-all\"\n                  data-testid=\"button-reservation\"\n                >\n                  <Link href=\"/contact\">Zu unseren Infos</Link>\n                </Button>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Why Choose Us Section */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"font-poppins text-3xl md:text-4xl font-bold text-ocean mb-4\" data-testid=\"text-why-title\">\n              Warum PokePao?\n            </h2>\n            <p className=\"font-lato text-lg text-muted-foreground max-w-2xl mx-auto\" data-testid=\"text-why-subtitle\">\n              Was uns besonders macht\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto\">\n            <div className=\"text-center\" data-testid=\"feature-fresh\">\n              <div className=\"text-5xl mb-4\">üåä</div>\n              <h3 className=\"font-poppins font-bold text-xl text-ocean mb-2\">Immer frisch</h3>\n              <p className=\"font-lato text-muted-foreground\">T√§glich frische Zutaten, direkt vom Markt</p>\n            </div>\n            <div className=\"text-center\" data-testid=\"feature-authentic\">\n              <div className=\"text-5xl mb-4\">üèùÔ∏è</div>\n              <h3 className=\"font-poppins font-bold text-xl text-ocean mb-2\">Authentisch hawaiianisch</h3>\n              <p className=\"font-lato text-muted-foreground\">Traditionelle Rezepte mit modernem Twist</p>\n            </div>\n            <div className=\"text-center\" data-testid=\"feature-quality\">\n              <div className=\"text-5xl mb-4\">‚≠ê</div>\n              <h3 className=\"font-poppins font-bold text-xl text-ocean mb-2\">Beste Qualit√§t</h3>\n              <p className=\"font-lato text-muted-foreground\">Ausgezeichnet als Deutschlands beste Poke Bowl</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Reservation Section */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"font-poppins text-3xl md:text-4xl font-bold text-ocean mb-4\" data-testid=\"text-reservation-section-title\">\n              Tisch reservieren\n            </h2>\n            <p className=\"font-lato text-lg text-muted-foreground max-w-2xl mx-auto\" data-testid=\"text-reservation-section-subtitle\">\n              Sichere dir deinen Platz bei uns\n            </p>\n          </div>\n          <div>\n            <ReservationForm />\n          </div>\n        </div>\n      </section>\n\n      {/* 3D Gallery Section */}\n      <Gallery3D />\n    </div>\n  );\n}\n","size_bytes":7961},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/pages/About.tsx":{"content":"import { Heart, Users, Award, Leaf } from \"lucide-react\";\nimport { Card } from \"@/components/ui/card\";\nimport image from \"@assets/image.png\";\n\nexport default function About() {\n  return (\n    <div>\n      {/* Breadcrumb / Page Header */}\n      <div className=\"bg-gradient-to-r from-ocean to-ocean-dark text-white py-16\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h1 className=\"font-poppins text-4xl md:text-5xl font-bold mb-4\" data-testid=\"text-page-title\">\n            √úber Uns\n          </h1>\n          <p className=\"font-lato text-lg md:text-xl opacity-90\" data-testid=\"text-page-subtitle\">\n            Unsere Geschichte und Leidenschaft\n          </p>\n        </div>\n      </div>\n\n      {/* About Content */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12 items-center mb-16\">\n            <div>\n              <img\n                src={image}\n                alt=\"Fresh Poke Bowl\"\n                loading=\"lazy\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                data-testid=\"img-about-hero\"\n              />\n            </div>\n            <div>\n              <h2 className=\"font-poppins text-3xl md:text-4xl font-bold text-ocean mb-6\" data-testid=\"text-story-title\">\n                Unsere Geschichte\n              </h2>\n              <div className=\"space-y-4 font-lato text-muted-foreground\">\n                <p data-testid=\"text-story-p1\">\n                  Bei PokePao bringen wir die authentische hawaiianische Poke Bowl-Kultur nach Hamburg. Unsere Reise begann mit der Leidenschaft f√ºr frische, gesunde und unglaublich leckere Bowls.\n                </p>\n                <p data-testid=\"text-story-p2\">\n                  Jede Bowl wird mit Liebe und Sorgfalt zubereitet. Wir verwenden nur die frischesten Zutaten und folgen traditionellen Rezepten, die wir mit modernen Geschmacksnoten verfeinern.\n                </p>\n                <p data-testid=\"text-story-p3\">\n                  Heute sind wir stolz darauf, als eine der besten Poke Bowl Restaurants in Deutschland anerkannt zu sein. Aber f√ºr uns z√§hlt vor allem eins: dass jeder Gast mit einem L√§cheln unser Restaurant verl√§sst.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Values Section */}\n          <div className=\"mb-16\">\n            <h2 className=\"font-poppins text-3xl md:text-4xl font-bold text-ocean mb-12 text-center\" data-testid=\"text-values-title\">\n              Unsere Werte\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n              <Card className=\"p-6 text-center hover:shadow-xl transition-all duration-300 hover:-translate-y-1\" data-testid=\"card-value-quality\">\n                <div className=\"bg-ocean/10 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Award className=\"w-8 h-8 text-ocean\" />\n                </div>\n                <h3 className=\"font-poppins font-bold text-xl text-ocean mb-2\">Qualit√§t</h3>\n                <p className=\"font-lato text-sm text-muted-foreground\">\n                  Nur die besten Zutaten kommen in unsere Bowls\n                </p>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-xl transition-all duration-300 hover:-translate-y-1\" data-testid=\"card-value-fresh\">\n                <div className=\"bg-ocean/10 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Leaf className=\"w-8 h-8 text-ocean\" />\n                </div>\n                <h3 className=\"font-poppins font-bold text-xl text-ocean mb-2\">Frische</h3>\n                <p className=\"font-lato text-sm text-muted-foreground\">\n                  T√§glich frisch zubereitet, direkt vor deinen Augen\n                </p>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-xl transition-all duration-300 hover:-translate-y-1\" data-testid=\"card-value-passion\">\n                <div className=\"bg-ocean/10 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Heart className=\"w-8 h-8 text-ocean\" />\n                </div>\n                <h3 className=\"font-poppins font-bold text-xl text-ocean mb-2\">Leidenschaft</h3>\n                <p className=\"font-lato text-sm text-muted-foreground\">\n                  Mit Herz und Seele bei jedem einzelnen Gericht\n                </p>\n              </Card>\n\n              <Card className=\"p-6 text-center hover:shadow-xl transition-all duration-300 hover:-translate-y-1\" data-testid=\"card-value-community\">\n                <div className=\"bg-ocean/10 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Users className=\"w-8 h-8 text-ocean\" />\n                </div>\n                <h3 className=\"font-poppins font-bold text-xl text-ocean mb-2\">Gemeinschaft</h3>\n                <p className=\"font-lato text-sm text-muted-foreground\">\n                  Wir sind mehr als ein Restaurant ‚Äì wir sind Familie\n                </p>\n              </Card>\n            </div>\n          </div>\n\n          {/* Awards Section */}\n          <div className=\"bg-gradient-to-r from-ocean/5 to-sunset/5 rounded-2xl p-8 md:p-12 text-center\">\n            <div className=\"flex justify-center mb-6\">\n              <div className=\"bg-gold/20 p-6 rounded-full\">\n                <Award className=\"w-16 h-16 text-gold\" />\n              </div>\n            </div>\n            <h2 className=\"font-poppins text-2xl md:text-3xl font-bold text-ocean mb-4\" data-testid=\"text-award-title\">\n              Deutschlands Beste Poke Bowl 2024\n            </h2>\n            <p className=\"font-lato text-lg text-muted-foreground max-w-2xl mx-auto\" data-testid=\"text-award-description\">\n              Wir sind stolz und dankbar f√ºr diese Auszeichnung. Sie motiviert uns, jeden Tag unser Bestes zu geben und euch mit k√∂stlichen, frischen Poke Bowls zu verw√∂hnen.\n            </p>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":6128},"client/src/pages/Contact.tsx":{"content":"import { Phone, MapPin, Clock, Star } from \"lucide-react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Contact() {\n  return (\n    <div>\n      {/* Breadcrumb / Page Header */}\n      <div className=\"bg-gradient-to-r from-ocean to-ocean-dark text-white py-16\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h1 className=\"font-poppins text-4xl md:text-5xl font-bold mb-4\" data-testid=\"text-page-title\">\n            Kontakt\n          </h1>\n          <p className=\"font-lato text-lg md:text-xl opacity-90\" data-testid=\"text-page-subtitle\">\n            Wir freuen uns auf deinen Besuch!\n          </p>\n        </div>\n      </div>\n\n      {/* Contact Content */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"container mx-auto px-6\">\n          {/* Contact Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-16\">\n            <Card className=\"p-6 hover:shadow-xl transition-all duration-300 hover:-translate-y-1\" data-testid=\"card-phone\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"bg-ocean/10 p-3 rounded-full flex-shrink-0\">\n                  <Phone className=\"w-6 h-6 text-ocean\" />\n                </div>\n                <div>\n                  <h3 className=\"font-poppins font-bold text-lg text-ocean mb-2\">Telefon</h3>\n                  <a\n                    href=\"tel:04036939098\"\n                    className=\"font-lato text-muted-foreground hover:text-ocean transition-colors\"\n                    data-testid=\"link-phone\"\n                  >\n                    040 36939098\n                  </a>\n                </div>\n              </div>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-xl transition-all duration-300 hover:-translate-y-1\" data-testid=\"card-address\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"bg-ocean/10 p-3 rounded-full flex-shrink-0\">\n                  <MapPin className=\"w-6 h-6 text-ocean\" />\n                </div>\n                <div>\n                  <h3 className=\"font-poppins font-bold text-lg text-ocean mb-2\">Adresse</h3>\n                  <p className=\"font-lato text-muted-foreground\" data-testid=\"text-address\">\n                    Fuhlsb√ºttler Stra√üe 328<br />\n                    Hamburg\n                  </p>\n                </div>\n              </div>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-xl transition-all duration-300 hover:-translate-y-1\" data-testid=\"card-hours\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"bg-ocean/10 p-3 rounded-full flex-shrink-0\">\n                  <Clock className=\"w-6 h-6 text-ocean\" />\n                </div>\n                <div>\n                  <h3 className=\"font-poppins font-bold text-lg text-ocean mb-2\">√ñffnungszeiten</h3>\n                  <div className=\"font-lato text-muted-foreground space-y-1\" data-testid=\"text-hours\">\n                    <p>Mo-So: 11:15 - 21:00</p>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n\n          {/* Map Section */}\n          <div className=\"mb-16\">\n            <h2 className=\"font-poppins text-3xl md:text-4xl font-bold text-ocean mb-8 text-center\" data-testid=\"text-map-title\">\n              So findest du uns\n            </h2>\n            <div className=\"rounded-2xl overflow-hidden shadow-2xl h-[400px] md:h-[500px]\">\n              <iframe\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2368.0789244563674!2d10.006686176819165!3d53.60771095646801!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47b18f1b7f8e8e8d%3A0x1234567890abcdef!2sFuhlsb%C3%BCttler%20Stra%C3%9Fe%20328%2C%20Hamburg!5e0!3m2!1sde!2sde!4v1234567890123!5m2!1sde!2sde\"\n                width=\"100%\"\n                height=\"100%\"\n                style={{ border: 0 }}\n                allowFullScreen\n                loading=\"lazy\"\n                referrerPolicy=\"no-referrer-when-downgrade\"\n                title=\"PokePao Location Map\"\n                data-testid=\"iframe-map\"\n              />\n            </div>\n          </div>\n\n          {/* Reviews Section */}\n          <div className=\"mb-16\">\n            <h2 className=\"font-poppins text-3xl md:text-4xl font-bold text-ocean mb-4 text-center\" data-testid=\"text-reviews-title\">\n              Was unsere G√§ste sagen\n            </h2>\n            <p className=\"text-center text-muted-foreground mb-8 font-lato\" data-testid=\"text-reviews-subtitle\">\n              Echte Bewertungen von echten Genie√üern.\n            </p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              {/* Review 1 */}\n              <Card className=\"p-6\" data-testid=\"card-review-1\">\n                <div className=\"flex gap-1 mb-3\">\n                  {[1, 2, 3, 4, 5].map((star) => (\n                    <Star key={star} className=\"w-5 h-5 fill-sunset text-sunset\" />\n                  ))}\n                </div>\n                <p className=\"font-lato text-muted-foreground italic mb-4\" data-testid=\"text-review-1\">\n                  \"Super lecker und frisch zubereitet. Die Auswahl ist riesig und das Personal sehr freundlich. Absolute Empfehlung!\"\n                </p>\n                <p className=\"font-poppins font-bold text-ocean\" data-testid=\"text-reviewer-1\">- Jennifer L.</p>\n              </Card>\n\n              {/* Review 2 */}\n              <Card className=\"p-6\" data-testid=\"card-review-2\">\n                <div className=\"flex gap-1 mb-3\">\n                  {[1, 2, 3, 4, 5].map((star) => (\n                    <Star key={star} className=\"w-5 h-5 fill-sunset text-sunset\" />\n                  ))}\n                </div>\n                <p className=\"font-lato text-muted-foreground italic mb-4\" data-testid=\"text-review-2\">\n                  \"Beste Poke Bowl in Hamburg! Die Zutaten sind immer frisch, die Saucen sind der Hammer und die Portionen machen satt. Wir kommen immer wieder gerne.\"\n                </p>\n                <p className=\"font-poppins font-bold text-ocean\" data-testid=\"text-reviewer-2\">- Max R.</p>\n              </Card>\n\n              {/* Review 3 */}\n              <Card className=\"p-6\" data-testid=\"card-review-3\">\n                <div className=\"flex gap-1 mb-3\">\n                  {[1, 2, 3, 4, 5].map((star) => (\n                    <Star key={star} className=\"w-5 h-5 fill-sunset text-sunset\" />\n                  ))}\n                </div>\n                <p className=\"font-lato text-muted-foreground italic mb-4\" data-testid=\"text-review-3\">\n                  \"Ein kleines St√ºck Hawaii in Barmbek. Alles wird mit Liebe gemacht, das schmeckt man einfach. Der Laden ist klein aber fein.\"\n                </p>\n                <p className=\"font-poppins font-bold text-ocean\" data-testid=\"text-reviewer-3\">- David S.</p>\n              </Card>\n            </div>\n\n            <div className=\"text-center\">\n              <Button\n                asChild\n                variant=\"outline\"\n                className=\"font-poppins font-bold rounded-full px-8 py-6 border-2 border-ocean text-ocean hover:bg-ocean hover:text-white\"\n                data-testid=\"button-more-reviews\"\n              >\n                <a \n                  href=\"https://www.google.com/maps/place/Pok%C3%A9+Pao+%E2%80%93+Frische+Pok%C3%A9+Bowls+%26+gesundes+Caf%C3%A9+in+Hamburg+(Barmbek)/@53.600353,10.0413782,17z/data=!4m8!3m7!1s0x47b189f7f4a00893:0xea8636b5afc20ba1!8m2!3d53.600353!4d10.0413782!9m1!1b1!16s%2Fg%2F11s990jl7w?entry=ttu&g_ep=EgoyMDI1MTAwOC4wIKXMDSoASAFQAw%3D%3D\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Mehr auf Google Maps lesen\n                </a>\n              </Button>\n            </div>\n          </div>\n\n          {/* How to Reach Us */}\n          <div className=\"bg-muted rounded-2xl p-8 md:p-12\">\n            <h2 className=\"font-poppins text-2xl md:text-3xl font-bold text-ocean mb-6 text-center\" data-testid=\"text-directions-title\">\n              Anfahrt\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n              <div data-testid=\"directions-public\">\n                <h3 className=\"font-poppins font-bold text-xl text-ocean mb-3\">√ñffentliche Verkehrsmittel</h3>\n                <p className=\"font-lato text-muted-foreground\">\n                  U-Bahn: U1 bis Ohlsdorf<br />\n                  Bus: Linie 23, 26, 179<br />\n                  Nur 5 Minuten Fu√üweg von der Station\n                </p>\n              </div>\n              <div data-testid=\"directions-car\">\n                <h3 className=\"font-poppins font-bold text-xl text-ocean mb-3\">Mit dem Auto</h3>\n                <p className=\"font-lato text-muted-foreground\">\n                  Parkpl√§tze in der N√§he verf√ºgbar<br />\n                  Gut erreichbar √ºber die A7<br />\n                  Kostenlose Parkpl√§tze in den Seitenstra√üen\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":9191},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/Hero.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Trophy } from \"lucide-react\";\n\nexport function Hero() {\n  return (\n    <section className=\"relative h-[80vh] min-h-[500px] flex items-center justify-center text-center text-white px-6 overflow-hidden\">\n      {/* Dark Overlay */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-ocean/80 via-ocean-dark/70 to-sunset/60 z-10\" />\n\n      {/* Animated Background - Rotating Circles */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        {/* Ring 1 - Outer, slowest */}\n        <div className=\"absolute animate-rotate-slow\">\n          <div className=\"relative w-[800px] h-[800px]\">\n            {[...Array(12)].map((_, i) => {\n              const angle = (i * 360) / 12;\n              const isPokebal = i % 2 === 0;\n              return (\n                <div\n                  key={`ring1-${i}`}\n                  className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n                  style={{\n                    transform: `rotate(${angle}deg) translateY(-400px)`,\n                  }}\n                >\n                  {isPokebal ? (\n                    <div className=\"w-12 h-12 rounded-full bg-white border-4 border-foreground/20 flex items-center justify-center shadow-xl\">\n                      <div className=\"w-5 h-5 rounded-full bg-sunset\"></div>\n                    </div>\n                  ) : (\n                    <div className=\"w-14 h-14 rounded-full bg-gradient-to-br from-ocean to-ocean-dark shadow-xl flex items-center justify-center border-2 border-white/30\">\n                      <div className=\"text-2xl\">üçú</div>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Ring 2 - Middle, medium speed */}\n        <div className=\"absolute animate-rotate-medium\">\n          <div className=\"relative w-[600px] h-[600px]\">\n            {[...Array(10)].map((_, i) => {\n              const angle = (i * 360) / 10;\n              const isBowl = i % 2 === 1;\n              return (\n                <div\n                  key={`ring2-${i}`}\n                  className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n                  style={{\n                    transform: `rotate(${angle}deg) translateY(-300px)`,\n                  }}\n                >\n                  {isBowl ? (\n                    <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-sunset to-gold shadow-xl flex items-center justify-center border-2 border-white/30\">\n                      <div className=\"text-xl\">ü•ó</div>\n                    </div>\n                  ) : (\n                    <div className=\"w-10 h-10 rounded-full bg-white border-4 border-foreground/20 flex items-center justify-center shadow-xl\">\n                      <div className=\"w-4 h-4 rounded-full bg-ocean\"></div>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Ring 3 - Inner, fastest */}\n        <div className=\"absolute animate-rotate-fast\">\n          <div className=\"relative w-[400px] h-[400px]\">\n            {[...Array(8)].map((_, i) => {\n              const angle = (i * 360) / 8;\n              const isPokebal = i % 2 === 0;\n              return (\n                <div\n                  key={`ring3-${i}`}\n                  className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n                  style={{\n                    transform: `rotate(${angle}deg) translateY(-200px)`,\n                  }}\n                >\n                  {isPokebal ? (\n                    <div className=\"w-8 h-8 rounded-full bg-white border-3 border-foreground/20 flex items-center justify-center shadow-lg\">\n                      <div className=\"w-3 h-3 rounded-full bg-gold\"></div>\n                    </div>\n                  ) : (\n                    <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-ocean-dark to-ocean shadow-lg flex items-center justify-center border-2 border-white/30\">\n                      <div className=\"text-lg\">üç≤</div>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Ring 4 - Very outer ring, very slow, opposite direction */}\n        <div className=\"absolute animate-rotate-reverse-slow\">\n          <div className=\"relative w-[1000px] h-[1000px]\">\n            {[...Array(16)].map((_, i) => {\n              const angle = (i * 360) / 16;\n              const type = i % 4;\n              return (\n                <div\n                  key={`ring4-${i}`}\n                  className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n                  style={{\n                    transform: `rotate(${angle}deg) translateY(-500px)`,\n                  }}\n                >\n                  {type === 0 && (\n                    <div className=\"w-10 h-10 rounded-full bg-white border-3 border-foreground/15 flex items-center justify-center shadow-lg opacity-70\">\n                      <div className=\"w-4 h-4 rounded-full bg-ocean-dark\"></div>\n                    </div>\n                  )}\n                  {type === 1 && (\n                    <div className=\"w-11 h-11 rounded-full bg-gradient-to-br from-gold to-sunset shadow-lg flex items-center justify-center border-2 border-white/20 opacity-70\">\n                      <div className=\"text-lg\">üç±</div>\n                    </div>\n                  )}\n                  {type === 2 && (\n                    <div className=\"w-9 h-9 rounded-full bg-white border-3 border-foreground/15 flex items-center justify-center shadow-lg opacity-70\">\n                      <div className=\"w-4 h-4 rounded-full bg-sunset\"></div>\n                    </div>\n                  )}\n                  {type === 3 && (\n                    <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-ocean to-sunset shadow-lg flex items-center justify-center border-2 border-white/20 opacity-70\">\n                      <div className=\"text-xl\">ü•ô</div>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"relative z-20 max-w-4xl mx-auto\">\n        {/* Award Badge */}\n        <div\n          className=\"inline-flex items-center gap-2 bg-white/90 backdrop-blur-md rounded-full px-6 py-3 mb-6 shadow-xl animate-fade-in\"\n          data-testid=\"badge-award\"\n        >\n          <Trophy className=\"w-6 h-6 text-gold\" />\n          <span className=\"font-poppins font-semibold text-ocean\">\n            Deutschlands Beste Poke Bowl 2024\n          </span>\n        </div>\n\n        {/* Headline */}\n        <h1\n          className=\"font-poppins text-4xl md:text-6xl lg:text-7xl font-bold leading-tight mb-6 animate-fade-in\"\n          style={{ textShadow: \"2px 2px 8px rgba(0,0,0,0.7)\" }}\n          data-testid=\"text-hero-title\"\n        >\n          Dein Kurzurlaub in der Sch√ºssel.\n        </h1>\n\n        {/* Subheading */}\n        <p\n          className=\"font-lato text-lg md:text-xl lg:text-2xl max-w-2xl mx-auto mb-8 animate-fade-in\"\n          style={{ textShadow: \"1px 1px 4px rgba(0,0,0,0.7)\", animationDelay: \"0.1s\" }}\n          data-testid=\"text-hero-subtitle\"\n        >\n          Frische, Geschmack und Hawaii-Feeling direkt in Hamburg. G√∂nn dir das Beste.\n        </p>\n\n        {/* CTA Button */}\n        <Link href=\"/menu\">\n          <Button\n            size=\"lg\"\n            className=\"bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold rounded-full px-10 py-6 text-lg tracking-wide uppercase shadow-2xl hover:shadow-sunset/50 transition-all hover:-translate-y-1 animate-fade-in\"\n            style={{ animationDelay: \"0.2s\" }}\n            data-testid=\"button-hero-cta\"\n          >\n            Jetzt bestellen\n          </Button>\n        </Link>\n      </div>\n    </section>\n  );\n}\n","size_bytes":8074},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/CartWidget.tsx":{"content":"import { ShoppingCart } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useCartStore } from \"@/lib/cartStore\";\n\ninterface CartWidgetProps {\n  onOpen: () => void;\n}\n\nexport function CartWidget({ onOpen }: CartWidgetProps) {\n  const { items, getTotal } = useCartStore();\n  const itemCount = items.reduce((sum, item) => sum + item.quantity, 0);\n\n  if (itemCount === 0) return null;\n\n  return (\n    <div className=\"fixed bottom-6 right-6 z-50 animate-scale-in\">\n      <Button\n        onClick={onOpen}\n        size=\"lg\"\n        className=\"bg-sunset hover:bg-sunset-dark text-white rounded-full shadow-2xl hover:shadow-sunset/50 transition-all hover:scale-105 px-6 py-6 relative\"\n        data-testid=\"button-cart-widget\"\n      >\n        <ShoppingCart className=\"w-6 h-6 mr-2\" />\n        <span className=\"font-poppins font-bold\">\n          {itemCount} {itemCount === 1 ? \"Artikel\" : \"Artikel\"}\n        </span>\n        <span className=\"absolute -top-2 -right-2 bg-ocean text-white text-xs font-bold rounded-full w-8 h-8 flex items-center justify-center\" data-testid=\"badge-cart-count\">\n          {itemCount}\n        </span>\n      </Button>\n    </div>\n  );\n}\n","size_bytes":1181},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Menu Categories\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  nameDE: text(\"name_de\").notNull(),\n  order: integer(\"order\").notNull().default(0),\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n});\n\nexport type Category = typeof categories.$inferSelect;\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\n\n// Menu Items\nexport const menuItems = pgTable(\"menu_items\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  nameDE: text(\"name_de\").notNull(),\n  description: text(\"description\").notNull(),\n  descriptionDE: text(\"description_de\").notNull(),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  priceSmall: decimal(\"price_small\", { precision: 10, scale: 2 }),\n  priceLarge: decimal(\"price_large\", { precision: 10, scale: 2 }),\n  image: text(\"image\").notNull(),\n  categoryId: varchar(\"category_id\").notNull().references(() => categories.id),\n  available: integer(\"available\").notNull().default(1), // 1 = available, 0 = not available\n  popular: integer(\"popular\").notNull().default(0), // 1 = popular item\n  protein: text(\"protein\"),\n  marinade: text(\"marinade\"),\n  ingredients: text(\"ingredients\").array(),\n  sauce: text(\"sauce\"),\n  toppings: text(\"toppings\").array(),\n  allergens: text(\"allergens\").array(),\n  hasSizeOptions: integer(\"has_size_options\").notNull().default(0), // 1 = has size options\n  isCustomBowl: integer(\"is_custom_bowl\").notNull().default(0), // 1 = Wunsch Bowl\n});\n\nexport const insertMenuItemSchema = createInsertSchema(menuItems).omit({\n  id: true,\n});\n\nexport type MenuItem = typeof menuItems.$inferSelect;\nexport type InsertMenuItem = z.infer<typeof insertMenuItemSchema>;\n\n// Ingredient Types\nexport enum IngredientType {\n  PROTEIN = \"protein\",\n  BASE = \"base\",\n  MARINADE = \"marinade\",\n  FRESH = \"fresh\",\n  SAUCE = \"sauce\",\n  TOPPING = \"topping\"\n}\n\n// Ingredients for Custom Bowls\nexport const ingredients = pgTable(\"ingredients\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  nameDE: text(\"name_de\").notNull(),\n  type: text(\"type\").notNull(), // protein, base, marinade, fresh, sauce, topping\n  description: text(\"description\"),\n  descriptionDE: text(\"description_de\"),\n  image: text(\"image\").notNull(),\n  price: decimal(\"price\", { precision: 10, scale: 2 }), // price for protein type\n  available: integer(\"available\").notNull().default(1),\n  order: integer(\"order\").notNull().default(0),\n});\n\nexport const insertIngredientSchema = createInsertSchema(ingredients).omit({\n  id: true,\n});\n\nexport type Ingredient = typeof ingredients.$inferSelect;\nexport type InsertIngredient = z.infer<typeof insertIngredientSchema>;\n\n// Orders\nexport const orders = pgTable(\"orders\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  phone: text(\"phone\").notNull(),\n  pickupTime: text(\"pickup_time\").notNull(), // When the customer wants to pick up\n  serviceType: text(\"service_type\").notNull(), // \"takeaway\" or \"dine-in\"\n  comment: text(\"comment\"),\n  total: decimal(\"total\", { precision: 10, scale: 2 }).notNull(),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, confirmed, ready, completed, cancelled\n  createdAt: text(\"created_at\").notNull().default(sql`CURRENT_TIMESTAMP`),\n});\n\nexport const insertOrderSchema = createInsertSchema(orders).omit({\n  id: true,\n  status: true,\n  createdAt: true,\n});\n\nexport type Order = typeof orders.$inferSelect;\nexport type InsertOrder = z.infer<typeof insertOrderSchema>;\n\n// Order Items\nexport const orderItems = pgTable(\"order_items\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  orderId: varchar(\"order_id\").notNull().references(() => orders.id),\n  menuItemId: varchar(\"menu_item_id\").references(() => menuItems.id),\n  name: text(\"name\").notNull(),\n  nameDE: text(\"name_de\").notNull(),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  quantity: integer(\"quantity\").notNull(),\n  size: text(\"size\"), // klein or standard\n  customization: text(\"customization\"), // JSON string for custom bowl selections\n});\n\nexport const insertOrderItemSchema = createInsertSchema(orderItems).omit({\n  id: true,\n});\n\nexport type OrderItem = typeof orderItems.$inferSelect;\nexport type InsertOrderItem = z.infer<typeof insertOrderItemSchema>;\n\n// Cart Items (client-side only, stored in memory)\nexport const customBowlSelectionSchema = z.object({\n  protein: z.string().optional(),\n  base: z.string().optional(),\n  marinade: z.string().optional(),\n  freshIngredients: z.array(z.string()).optional(),\n  sauce: z.string().optional(),\n  toppings: z.array(z.string()).optional(),\n  extraProtein: z.array(z.string()).optional(),\n  extraFreshIngredients: z.array(z.string()).optional(),\n  extraSauces: z.array(z.string()).optional(),\n  extraToppings: z.array(z.string()).optional(),\n});\n\nexport type CustomBowlSelection = z.infer<typeof customBowlSelectionSchema>;\n\nexport const cartItemSchema = z.object({\n  id: z.string(),\n  menuItemId: z.string(),\n  name: z.string(),\n  nameDE: z.string(),\n  price: z.string(),\n  image: z.string(),\n  quantity: z.number().int().positive(),\n  size: z.enum([\"klein\", \"standard\"]).optional(),\n  customization: customBowlSelectionSchema.optional(),\n});\n\nexport type CartItem = z.infer<typeof cartItemSchema>;\n\n// Cart\nexport const cartSchema = z.object({\n  items: z.array(cartItemSchema),\n  total: z.string(),\n});\n\nexport type Cart = z.infer<typeof cartSchema>;\n\n// Reservations\nexport const reservations = pgTable(\"reservations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  guests: integer(\"guests\").notNull(),\n  phone: text(\"phone\").notNull(),\n  date: text(\"date\").notNull(),\n  time: text(\"time\").notNull(),\n});\n\nexport const insertReservationSchema = createInsertSchema(reservations).omit({\n  id: true,\n});\n\nexport type Reservation = typeof reservations.$inferSelect;\nexport type InsertReservation = z.infer<typeof insertReservationSchema>;\n\n// Gallery Images\nexport const galleryImages = pgTable(\"gallery_images\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  url: text(\"url\").notNull(),\n  filename: text(\"filename\").notNull(),\n  uploadedAt: text(\"uploaded_at\").notNull().default(sql`CURRENT_TIMESTAMP`),\n});\n\nexport const insertGalleryImageSchema = createInsertSchema(galleryImages).omit({\n  id: true,\n  uploadedAt: true,\n});\n\nexport type GalleryImage = typeof galleryImages.$inferSelect;\nexport type InsertGalleryImage = z.infer<typeof insertGalleryImageSchema>;\n","size_bytes":6926},"client/src/pages/Menu.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Plus } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { CartWidget } from \"@/components/CartWidget\";\nimport { CartModal } from \"@/components/CartModal\";\nimport { MenuItemDialog } from \"@/components/MenuItemDialog\";\nimport { BowlBuilderDialog } from \"@/components/BowlBuilderDialog\";\nimport { useCartStore } from \"@/lib/cartStore\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport type { MenuItem, Category, CustomBowlSelection } from \"@shared/schema\";\nimport defaultBowlImage from \"@assets/a-clean-top-down-photograph-of-a-vibrant_lpUEBaGYSGKwiCHv7wxtfA_T6HyR7CQQVSh9lm80StEww_1760996660760.jpeg\";\n\nexport default function Menu() {\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  const [cartModalOpen, setCartModalOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState<MenuItem | null>(null);\n  const [itemDialogOpen, setItemDialogOpen] = useState(false);\n  const [bowlBuilderOpen, setBowlBuilderOpen] = useState(false);\n  const [editingItemId, setEditingItemId] = useState<string | null>(null);\n  const { addItem, items: cartItems, updateItem } = useCartStore();\n  const isMobile = useIsMobile();\n\n  // Fetch categories\n  const { data: categories = [] } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  // Fetch menu items\n  const { data: menuItems = [], isLoading } = useQuery<MenuItem[]>({\n    queryKey: [\"/api/menu-items\"],\n  });\n\n  // Filter menu items by category\n  const filteredItems =\n    selectedCategory === \"all\"\n      ? menuItems\n      : menuItems.filter((item) => item.categoryId === selectedCategory);\n\n  const handleAddToCart = (item: MenuItem, size?: \"klein\" | \"standard\", customization?: CustomBowlSelection, customPrice?: string) => {\n    // Use custom price if provided (for bowl builder with dynamic protein pricing)\n    // Otherwise determine the correct price based on size\n    let finalPrice = customPrice || item.price;\n    if (!customPrice && size && item.hasSizeOptions === 1) {\n      if (size === \"klein\" && item.priceSmall) {\n        finalPrice = item.priceSmall;\n      } else if (size === \"standard\" && item.priceLarge) {\n        finalPrice = item.priceLarge;\n      }\n    }\n\n    // If editing, update existing item\n    if (editingItemId) {\n      updateItem(editingItemId, {\n        price: finalPrice,\n        size: size,\n        customization: customization,\n      });\n      setEditingItemId(null);\n    } else {\n      // Create unique cart ID per size to allow both sizes in cart simultaneously\n      const cartItemId = size ? `${item.id}-${size}` : item.id;\n\n      addItem({\n        id: cartItemId,\n        menuItemId: item.id,\n        name: item.name,\n        nameDE: item.nameDE,\n        price: finalPrice,\n        image: item.image,\n        size: size,\n        customization: customization,\n      });\n    }\n  };\n\n  const handleEditItem = (itemId: string) => {\n    const cartItem = cartItems.find(i => i.id === itemId);\n    if (!cartItem || !cartItem.customization) return;\n\n    // Find the menu item for this cart item\n    const menuItem = menuItems.find(mi => mi.id === cartItem.menuItemId);\n    if (!menuItem) return;\n\n    setEditingItemId(itemId);\n    setSelectedItem(menuItem);\n    setBowlBuilderOpen(true);\n    setCartModalOpen(false);\n  };\n\n  return (\n    <div>\n      {/* Breadcrumb / Page Header */}\n      <div className=\"bg-gradient-to-r from-ocean to-ocean-dark text-white py-16\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h1 className=\"font-poppins text-4xl md:text-5xl font-bold mb-4\" data-testid=\"text-page-title\">\n            Speisekarte\n          </h1>\n          <p className=\"font-lato text-lg md:text-xl opacity-90\" data-testid=\"text-page-subtitle\">\n            Entdecke unsere k√∂stlichen Poke Bowls\n          </p>\n        </div>\n      </div>\n\n      {/* Menu Content */}\n      <section className=\"py-12\">\n        <div className=\"container mx-auto px-6\">\n          {/* Category Navigation */}\n          <div className=\"mb-12\">\n            {isMobile ? (\n              // Mobile: Dropdown Select\n              <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                <SelectTrigger className=\"w-full bg-card font-poppins font-semibold\" data-testid=\"select-category-mobile\">\n                  <SelectValue placeholder=\"Kategorie w√§hlen\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\" data-testid=\"option-category-all\">Alle</SelectItem>\n                  {categories.map((category) => (\n                    <SelectItem \n                      key={category.id} \n                      value={category.id}\n                      data-testid={`option-category-${category.id}`}\n                    >\n                      {category.nameDE}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            ) : (\n              // Desktop: Horizontal Tabs\n              <div className=\"overflow-x-auto\">\n                <div className=\"flex gap-3 pb-4 min-w-max\">\n                  <button\n                    onClick={() => setSelectedCategory(\"all\")}\n                    className={`px-6 py-3 rounded-full font-poppins font-semibold transition-all whitespace-nowrap ${\n                      selectedCategory === \"all\"\n                        ? \"bg-ocean text-white shadow-lg\"\n                        : \"bg-card text-foreground hover:bg-accent\"\n                    }`}\n                    data-testid=\"button-category-all\"\n                  >\n                    Alle\n                  </button>\n                  {categories.map((category) => (\n                    <button\n                      key={category.id}\n                      onClick={() => setSelectedCategory(category.id)}\n                      className={`px-6 py-3 rounded-full font-poppins font-semibold transition-all whitespace-nowrap ${\n                        selectedCategory === category.id\n                          ? \"bg-ocean text-white shadow-lg\"\n                          : \"bg-card text-foreground hover:bg-accent\"\n                      }`}\n                      data-testid={`button-category-${category.id}`}\n                    >\n                      {category.nameDE}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Menu Items Grid */}\n          {isLoading ? (\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {[...Array(6)].map((_, i) => (\n                <Card key={i} className=\"overflow-hidden animate-pulse\">\n                  <div className=\"aspect-[16/9] bg-muted\" />\n                  <div className=\"p-6 space-y-3\">\n                    <div className=\"h-6 bg-muted rounded w-3/4\" />\n                    <div className=\"h-4 bg-muted rounded w-full\" />\n                    <div className=\"h-4 bg-muted rounded w-2/3\" />\n                    <div className=\"h-10 bg-muted rounded\" />\n                  </div>\n                </Card>\n              ))}\n            </div>\n          ) : filteredItems.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <p className=\"font-poppins text-xl text-muted-foreground\" data-testid=\"text-no-items\">\n                Keine Produkte in dieser Kategorie\n              </p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredItems.map((item, index) => (\n                  <Card\n                    key={item.id}\n                    className=\"overflow-hidden hover:shadow-2xl hover:-translate-y-2 transition-all duration-300 group cursor-pointer border-2 hover:border-ocean/20\"\n                    data-testid={`card-menu-item-${item.id}`}\n                    onClick={() => {\n                      setSelectedItem(item);\n                      // Open Bowl Builder for customizable items\n                      if (item.isCustomBowl === 1) {\n                        setBowlBuilderOpen(true);\n                      } else {\n                        setItemDialogOpen(true);\n                      }\n                    }}\n                  >\n                  <div className=\"relative aspect-[16/9] overflow-hidden bg-white\">\n                    <img\n                      src={item.image || defaultBowlImage}\n                      alt={item.nameDE}\n                      loading=\"lazy\"\n                      className=\"w-full h-full object-contain group-hover:scale-105 transition-transform duration-300\"\n                      data-testid={`img-menu-item-${item.id}`}\n                    />\n                    {item.popular === 1 && (\n                      <div className=\"absolute top-3 right-3 group/badge\" data-testid={`badge-popular-${item.id}`}>\n                        <div className=\"relative backdrop-blur-sm bg-gradient-to-br from-yellow-400/90 via-orange-500/90 to-red-500/90 text-white text-xs font-poppins font-bold px-4 py-2 rounded-full shadow-lg border-2 border-white/30 hover:scale-105 transition-all duration-300\">\n                          <div className=\"absolute inset-0 bg-gradient-gold-shimmer bg-[length:200%_100%] opacity-30 rounded-full animate-shimmer\"></div>\n                          <span className=\"relative flex items-center gap-1.5\">\n                            <span className=\"animate-pulse-glow inline-block\">‚≠ê</span>\n                            <span className=\"font-extrabold tracking-wide\">Beliebt</span>\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"p-6\">\n                    <h3 className=\"font-poppins font-bold text-xl text-foreground mb-2\" data-testid={`text-menu-item-name-${item.id}`}>\n                      {item.nameDE}\n                    </h3>\n                    {item.protein && (\n                      <Badge variant=\"secondary\" className=\"mb-2 font-lato\" data-testid={`badge-protein-${item.id}`}>\n                        {item.protein}\n                      </Badge>\n                    )}\n                    <p className=\"font-lato text-sm text-muted-foreground mb-4 line-clamp-2\" data-testid={`text-menu-item-desc-${item.id}`}>\n                      {item.descriptionDE}\n                    </p>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <span className=\"font-poppins text-2xl font-bold text-ocean\" data-testid={`text-menu-item-price-${item.id}`}>\n                          {item.hasSizeOptions === 1 && \"ab \"}‚Ç¨{item.priceSmall || item.price}\n                        </span>\n                        {item.hasSizeOptions === 1 && (\n                          <p className=\"text-xs text-muted-foreground mt-1\">Klein/Standard</p>\n                        )}\n                      </div>\n                      <Button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          // Open Bowl Builder for customizable items\n                          if (item.isCustomBowl === 1) {\n                            setSelectedItem(item);\n                            setBowlBuilderOpen(true);\n                          } \n                          // If item has size options, open dialog instead\n                          else if (item.hasSizeOptions === 1) {\n                            setSelectedItem(item);\n                            setItemDialogOpen(true);\n                          } else {\n                            handleAddToCart(item);\n                          }\n                        }}\n                        disabled={item.available === 0}\n                        className=\"bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold rounded-full px-6 shadow-lg hover:shadow-2xl hover:scale-105 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed active:scale-95\"\n                        data-testid={`button-add-to-cart-${item.id}`}\n                      >\n                        <Plus className=\"w-5 h-5 mr-1 group-hover:rotate-90 transition-transform duration-200\" />\n                        {item.isCustomBowl === 1 ? \"Jetzt gestalten\" : \"Hinzuf√ºgen\"}\n                      </Button>\n                    </div>\n                    {item.available === 0 && (\n                      <p className=\"mt-2 text-sm text-destructive font-semibold\" data-testid={`text-unavailable-${item.id}`}>\n                        Derzeit nicht verf√ºgbar\n                      </p>\n                    )}\n                  </div>\n                  </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Cart Widget & Modal */}\n      <CartWidget onOpen={() => setCartModalOpen(true)} />\n      <CartModal \n        isOpen={cartModalOpen} \n        onClose={() => setCartModalOpen(false)} \n        onEditItem={handleEditItem}\n      />\n      \n      {/* Menu Item Detail Dialog */}\n      <MenuItemDialog\n        item={selectedItem}\n        isOpen={itemDialogOpen}\n        onClose={() => setItemDialogOpen(false)}\n        onAddToCart={handleAddToCart}\n      />\n      \n      {/* Bowl Builder Dialog */}\n      <BowlBuilderDialog\n        item={selectedItem}\n        isOpen={bowlBuilderOpen}\n        onClose={() => {\n          setBowlBuilderOpen(false);\n          setEditingItemId(null);\n        }}\n        onAddToCart={handleAddToCart}\n        editingCartItemId={editingItemId}\n      />\n    </div>\n  );\n}\n","size_bytes":13894},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { FaWhatsapp, FaInstagram, FaTiktok } from \"react-icons/fa\";\nimport { Phone, Mail, MapPin, Clock } from \"lucide-react\";\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-[hsl(210,40%,20%)] text-white\">\n      <div className=\"container mx-auto px-6 py-16\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-poppins font-bold text-xl mb-4 text-white\">\n              Quick Links\n            </h3>\n            <nav className=\"flex flex-col gap-2\">\n              <Link \n                href=\"/\"\n                className=\"text-gray-300 hover:text-sunset transition-colors\"\n                data-testid=\"link-footer-home\"\n              >\n                Startseite\n              </Link>\n              <Link \n                href=\"/menu\"\n                className=\"text-gray-300 hover:text-sunset transition-colors\"\n                data-testid=\"link-footer-menu\"\n              >\n                Speisekarte\n              </Link>\n              <Link \n                href=\"/about\"\n                className=\"text-gray-300 hover:text-sunset transition-colors\"\n                data-testid=\"link-footer-about\"\n              >\n                √úber Uns\n              </Link>\n              <Link \n                href=\"/contact\"\n                className=\"text-gray-300 hover:text-sunset transition-colors\"\n                data-testid=\"link-footer-contact\"\n              >\n                Kontakt\n              </Link>\n            </nav>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h3 className=\"font-poppins font-bold text-xl mb-4 text-white\">\n              Kontakt\n            </h3>\n            <div className=\"flex flex-col gap-3 text-gray-300\">\n              <a\n                href=\"tel:04036939098\"\n                className=\"flex items-center gap-2 hover:text-sunset transition-colors\"\n                data-testid=\"link-footer-phone\"\n              >\n                <Phone className=\"w-4 h-4 flex-shrink-0\" />\n                <span>040 36939098</span>\n              </a>\n              <div className=\"flex items-start gap-2\">\n                <MapPin className=\"w-4 h-4 flex-shrink-0 mt-1\" />\n                <span data-testid=\"text-address\">\n                  Fuhlsb√ºttler Stra√üe 328<br />Hamburg\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Opening Hours */}\n          <div>\n            <h3 className=\"font-poppins font-bold text-xl mb-4 text-white\">\n              √ñffnungszeiten\n            </h3>\n            <div className=\"flex flex-col gap-2 text-gray-300\">\n              <div className=\"flex items-start gap-2\">\n                <Clock className=\"w-4 h-4 flex-shrink-0 mt-1\" />\n                <div data-testid=\"text-hours\">\n                  <p>Mo-So: 11:15 - 21:00</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Social Media */}\n          <div>\n            <h3 className=\"font-poppins font-bold text-xl mb-4 text-white\">\n              Folgen Sie uns\n            </h3>\n            <div className=\"flex gap-4\">\n              <a\n                href=\"https://wa.me/380956257835\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-white/10 hover:bg-sunset p-3 rounded-full transition-all hover:-translate-y-1\"\n                data-testid=\"link-footer-whatsapp\"\n                aria-label=\"WhatsApp\"\n              >\n                <FaWhatsapp className=\"w-6 h-6\" />\n              </a>\n              <a\n                href=\"https://www.instagram.com/poke_pao\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-white/10 hover:bg-sunset p-3 rounded-full transition-all hover:-translate-y-1\"\n                data-testid=\"link-footer-instagram\"\n                aria-label=\"Instagram\"\n              >\n                <FaInstagram className=\"w-6 h-6\" />\n              </a>\n              <a\n                href=\"https://www.tiktok.com/@poke_pao_hamburg\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-white/10 hover:bg-sunset p-3 rounded-full transition-all hover:-translate-y-1\"\n                data-testid=\"link-footer-tiktok\"\n                aria-label=\"TikTok\"\n              >\n                <FaTiktok className=\"w-6 h-6\" />\n              </a>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"mt-12 pt-8 border-t border-white/10 text-center text-gray-400 text-sm\">\n          <p data-testid=\"text-copyright\">\n            ¬© {new Date().getFullYear()} PokePao. Alle Rechte vorbehalten.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4845},"client/src/lib/cartStore.ts":{"content":"import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport type { CartItem } from \"@shared/schema\";\n\ninterface CartStore {\n  items: CartItem[];\n  addItem: (item: Omit<CartItem, \"quantity\"> & { quantity?: number }) => void;\n  removeItem: (id: string) => void;\n  updateQuantity: (id: string, quantity: number) => void;\n  updateItem: (id: string, updates: Partial<Omit<CartItem, \"id\" | \"quantity\">>) => void;\n  clearCart: () => void;\n  getTotal: () => number;\n}\n\nexport const useCartStore = create<CartStore>()(\n  persist(\n    (set, get) => ({\n      items: [],\n      \n      addItem: (item) => {\n        // For custom bowls, always create a new item (unique ID for each customization)\n        // For regular items, check if same item with same size exists\n        const existingItem = item.customization \n          ? null \n          : get().items.find((i) => \n              i.id === item.id && \n              i.menuItemId === item.menuItemId && \n              i.size === item.size &&\n              !i.customization\n            );\n        \n        if (existingItem) {\n          set({\n            items: get().items.map((i) =>\n              i.id === existingItem.id\n                ? { ...i, quantity: i.quantity + (item.quantity || 1) }\n                : i\n            ),\n          });\n        } else {\n          // Generate a unique ID for custom bowls\n          const newId = item.customization \n            ? `${item.id}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n            : item.id;\n          \n          set({\n            items: [...get().items, { ...item, id: newId, quantity: item.quantity || 1 }],\n          });\n        }\n      },\n      \n      removeItem: (id) => {\n        set({ items: get().items.filter((i) => i.id !== id) });\n      },\n      \n      updateQuantity: (id, quantity) => {\n        if (quantity <= 0) {\n          get().removeItem(id);\n          return;\n        }\n        \n        set({\n          items: get().items.map((i) =>\n            i.id === id ? { ...i, quantity } : i\n          ),\n        });\n      },\n      \n      updateItem: (id, updates) => {\n        set({\n          items: get().items.map((i) =>\n            i.id === id ? { ...i, ...updates } : i\n          ),\n        });\n      },\n      \n      clearCart: () => {\n        set({ items: [] });\n      },\n      \n      getTotal: () => {\n        return get().items.reduce((total, item) => {\n          return total + parseFloat(item.price) * item.quantity;\n        }, 0);\n      },\n    }),\n    {\n      name: \"pokepao-cart\",\n    }\n  )\n);\n","size_bytes":2551},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/MenuItemDialog.tsx":{"content":"import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Plus } from \"lucide-react\";\nimport type { MenuItem } from \"@shared/schema\";\nimport { useState, useEffect } from \"react\";\n\ninterface MenuItemDialogProps {\n  item: MenuItem | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onAddToCart: (item: MenuItem, size?: \"klein\" | \"standard\") => void;\n}\n\nexport function MenuItemDialog({ item, isOpen, onClose, onAddToCart }: MenuItemDialogProps) {\n  const [selectedSize, setSelectedSize] = useState<\"klein\" | \"standard\">(\"standard\");\n\n  // Reset to default size when dialog opens or item changes\n  useEffect(() => {\n    if (isOpen && item?.hasSizeOptions === 1) {\n      setSelectedSize(\"standard\");\n    }\n  }, [item, isOpen]);\n\n  if (!item) return null;\n\n  // Calculate the displayed price based on selected size\n  const getDisplayPrice = () => {\n    if (item.hasSizeOptions === 1) {\n      if (selectedSize === \"klein\" && item.priceSmall) {\n        return item.priceSmall;\n      } else if (selectedSize === \"standard\" && item.priceLarge) {\n        return item.priceLarge;\n      }\n    }\n    return item.price;\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\" data-testid=\"dialog-menu-item\">\n        <DialogHeader>\n          <DialogTitle className=\"font-poppins text-2xl\" data-testid=\"text-dialog-title\">\n            {item.nameDE}\n          </DialogTitle>\n          <DialogDescription className=\"sr-only\">\n            Produktdetails und Gr√∂√üenauswahl f√ºr {item.nameDE}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Image */}\n          <div className=\"relative aspect-video rounded-lg overflow-hidden\">\n            <img\n              src={item.image}\n              alt={item.nameDE}\n              loading=\"lazy\"\n              className=\"w-full h-full object-cover\"\n              data-testid=\"img-dialog-item\"\n            />\n            {item.popular === 1 && (\n              <div className=\"absolute top-3 right-3 group/badge\">\n                <div className=\"relative backdrop-blur-sm bg-gradient-to-br from-yellow-400/90 via-orange-500/90 to-red-500/90 text-white text-xs font-poppins font-bold px-4 py-2 rounded-full shadow-lg border-2 border-white/30 hover:scale-105 transition-all duration-300\">\n                  <div className=\"absolute inset-0 bg-gradient-gold-shimmer bg-[length:200%_100%] opacity-30 rounded-full animate-shimmer\"></div>\n                  <span className=\"relative flex items-center gap-1.5\">\n                    <span className=\"animate-pulse-glow inline-block\">‚≠ê</span>\n                    <span className=\"font-extrabold tracking-wide\">Beliebt</span>\n                  </span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Description */}\n          <p className=\"font-lato text-muted-foreground\" data-testid=\"text-dialog-description\">\n            {item.descriptionDE}\n          </p>\n\n          {/* Size Selection */}\n          {item.hasSizeOptions === 1 && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-3 text-foreground\">Gr√∂√üe w√§hlen</h4>\n              <div className=\"flex gap-3\">\n                <Button\n                  variant={selectedSize === \"klein\" ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedSize(\"klein\")}\n                  className={`flex-1 font-poppins font-semibold ${\n                    selectedSize === \"klein\" \n                      ? \"bg-ocean hover:bg-ocean/90 text-white\" \n                      : \"\"\n                  }`}\n                  data-testid=\"button-size-klein\"\n                >\n                  <div className=\"text-center\">\n                    <div>Klein</div>\n                    {item.priceSmall && (\n                      <div className=\"text-sm font-normal\">‚Ç¨{item.priceSmall}</div>\n                    )}\n                  </div>\n                </Button>\n                <Button\n                  variant={selectedSize === \"standard\" ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedSize(\"standard\")}\n                  className={`flex-1 font-poppins font-semibold ${\n                    selectedSize === \"standard\" \n                      ? \"bg-ocean hover:bg-ocean/90 text-white\" \n                      : \"\"\n                  }`}\n                  data-testid=\"button-size-standard\"\n                >\n                  <div className=\"text-center\">\n                    <div>Standard</div>\n                    {item.priceLarge && (\n                      <div className=\"text-sm font-normal\">‚Ç¨{item.priceLarge}</div>\n                    )}\n                  </div>\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {/* Protein */}\n          {item.protein && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-2 text-foreground\">Protein</h4>\n              <Badge variant=\"secondary\" className=\"font-lato\" data-testid=\"badge-protein\">\n                {item.protein}\n              </Badge>\n            </div>\n          )}\n\n          {/* Marinade */}\n          {item.marinade && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-2 text-foreground\">Marinade</h4>\n              <div className=\"border-2 border-ocean/30 rounded-lg p-3 bg-ocean/5\">\n                <p className=\"font-lato text-sm font-medium text-foreground\" data-testid=\"text-marinade\">\n                  {item.marinade}\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* Ingredients */}\n          {item.ingredients && item.ingredients.length > 0 && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-2 text-foreground\">Frische Zutaten</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {item.ingredients.map((ingredient, idx) => (\n                  <Badge key={idx} variant=\"outline\" className=\"font-lato\" data-testid={`badge-ingredient-${idx}`}>\n                    {ingredient}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Sauce */}\n          {item.sauce && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-2 text-foreground\">Sauce</h4>\n              <div className=\"border-2 border-sunset/30 rounded-lg p-3 bg-sunset/5\">\n                <p className=\"font-lato text-sm font-medium text-foreground\" data-testid=\"text-sauce\">\n                  {item.sauce}\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* Toppings */}\n          {item.toppings && item.toppings.length > 0 && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-2 text-foreground\">Toppings</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {item.toppings.map((topping, idx) => (\n                  <Badge key={idx} variant=\"outline\" className=\"font-lato\" data-testid={`badge-topping-${idx}`}>\n                    {topping}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Allergens */}\n          {item.allergens && item.allergens.length > 0 && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-2 text-destructive\">Allergene</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {item.allergens.map((allergen, idx) => (\n                  <Badge key={idx} variant=\"destructive\" className=\"font-lato\" data-testid={`badge-allergen-${idx}`}>\n                    {allergen}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Price & Add to Cart */}\n          <div className=\"flex items-center justify-between pt-4 border-t\">\n            <div>\n              <span className=\"font-poppins text-3xl font-bold text-ocean\" data-testid=\"text-dialog-price\">\n                ‚Ç¨{getDisplayPrice()}\n              </span>\n            </div>\n            <Button\n              onClick={() => {\n                onAddToCart(item, item.hasSizeOptions === 1 ? selectedSize : undefined);\n                onClose();\n              }}\n              disabled={item.available === 0}\n              className=\"bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold rounded-full px-8 py-6 text-lg shadow-lg hover:shadow-xl transition-all disabled:opacity-50 disabled:cursor-not-allowed\"\n              data-testid=\"button-dialog-add-to-cart\"\n            >\n              <Plus className=\"w-5 h-5 mr-2\" />\n              Hinzuf√ºgen\n            </Button>\n          </div>\n\n          {item.available === 0 && (\n            <p className=\"text-center text-sm text-destructive font-semibold\" data-testid=\"text-dialog-unavailable\">\n              Derzeit nicht verf√ºgbar\n            </p>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":9176},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"replit.md":{"content":"# PokePao Poke Bowl Caf√©\n\n## Overview\n\nPokePao is a modern food e-commerce website for a Hamburg-based Hawaiian poke bowl restaurant. The application enables customers to browse the menu, add items to their cart, and learn about the restaurant. Built as a full-stack web application with a React frontend and Express backend, it follows a food delivery platform design approach inspired by Uber Eats and DoorDash, combined with fresh, health-focused restaurant aesthetics.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\n**Framework & Build System**\n- **React 18** with TypeScript for type-safe component development\n- **Vite** as the build tool and development server for fast HMR (Hot Module Replacement)\n- **Wouter** for lightweight client-side routing instead of React Router\n\n**UI Component System**\n- **shadcn/ui** component library built on Radix UI primitives\n- **Tailwind CSS** for utility-first styling with custom design tokens\n- Custom design system with ocean blue (#33A9D9) and sunset orange (#F26522) brand colors\n- Poppins font for headings, Lato for body text\n\n**State Management**\n- **TanStack Query (React Query)** for server state management and data fetching\n- **Zustand** with persist middleware for client-side cart state management\n- Cart data persisted to localStorage for session continuity\n\n**Key Design Patterns**\n- Component-based architecture with reusable UI components\n- Custom hooks for mobile detection and toast notifications\n- Form validation using React Hook Form with Zod resolvers\n- Responsive design with mobile-first approach\n\n### Backend Architecture\n\n**Server Framework**\n- **Express.js** on Node.js for RESTful API endpoints\n- **TypeScript** for type safety across the stack\n- Custom middleware for request logging and error handling\n\n**API Design**\n- RESTful endpoints for categories and menu items\n- Resource-based URL structure (`/api/categories`, `/api/menu-items`)\n- Support for filtering menu items by category\n- JSON request/response format\n\n**Data Access Layer**\n- Abstracted storage interface (`IStorage`) for data operations\n- **Dual storage implementation:**\n  - `DatabaseStorage` - PostgreSQL via Drizzle ORM (when DATABASE_URL is set)\n  - `MemStorage` - In-memory fallback (for development without database)\n- Automatic selection based on environment configuration\n- Graceful fallback ensures app works in all environments\n\n### Data Storage\n\n**Current Implementation (Updated: October 2025)**\n- **Primary:** PostgreSQL database via Neon serverless (production-ready)\n- **Fallback:** In-memory storage (development/testing without DATABASE_URL)\n- Database schema includes: categories, menu items, reservations, gallery images\n- Automatic database seeding on first run (when using PostgreSQL)\n- Cart data stored client-side in browser localStorage via Zustand persist\n\n**Database Schema (Active)**\n- **Drizzle ORM** with PostgreSQL Neon serverless driver\n- Tables: `categories`, `menu_items`, `reservations`, `gallery_images`\n- UUID primary keys with auto-generation via `gen_random_uuid()`\n- Foreign key relationships between menu items and categories\n- Support for bilingual content (English/German) with separate fields\n- Database connection: `server/db.ts`\n- Storage layer: `server/storage.ts`\n\n**Schema Design Rationale**\n- Normalized data structure to avoid duplication\n- Boolean flags stored as integers (0/1) for availability and popularity\n- Decimal type for precise price storage\n- Separate language fields rather than JSON for better queryability\n- Conditional initialization supports both local development and production\n\n### External Dependencies\n\n**Core Libraries**\n- `@tanstack/react-query` - Server state management and caching\n- `zustand` - Lightweight state management for cart\n- `drizzle-orm` - Type-safe SQL ORM (configured for future use)\n- `@neondatabase/serverless` - PostgreSQL driver for serverless environments\n\n**UI Component Libraries**\n- `@radix-ui/*` - Accessible, unstyled UI primitives (dialogs, dropdowns, tooltips, etc.)\n- `tailwindcss` - Utility-first CSS framework\n- `class-variance-authority` - Type-safe component variants\n- `embla-carousel-react` - Carousel/slider functionality\n\n**Form Handling**\n- `react-hook-form` - Performant form management\n- `zod` - Schema validation\n- `@hookform/resolvers` - Integration between react-hook-form and Zod\n\n**Development Tools**\n- `tsx` - TypeScript execution for development\n- `esbuild` - Fast JavaScript bundler for production builds\n- `@replit/*` plugins - Development environment enhancements (error overlay, cartographer, dev banner)\n\n**Icons & Fonts**\n- `lucide-react` - Icon library\n- `react-icons` - Additional icon sets (FontAwesome for social media)\n- Google Fonts (Poppins, Lato) loaded via CDN\n\n**Session Management**\n- `express-session` with `connect-pg-simple` - Configured for PostgreSQL session storage\n- Session data prepared for database persistence\n\n**Third-Party Integrations**\n- Food delivery platforms: Lieferando, Wolt, Uber Eats (external links)\n- Social media: WhatsApp, Instagram, TikTok (external links)\n- Google Fonts API for typography\n\n## Deployment\n\n### Vercel Deployment (Fully Configured: October 21, 2025)\n\n**Production Build Setup:**\n- Build command: `npm run build` (builds frontend only)\n- Output: Frontend ‚Üí `dist/public` (served by Vercel CDN)\n- Backend: Serverless functions in `api/index.ts`\n- Configuration: `vercel.json` with proper routing\n\n**Dual Environment Support:**\n- **Replit:** Uses WebSocket for Neon connection, full Express server\n- **Vercel:** Uses HTTP/Fetch for Neon connection, serverless functions\n- Automatic environment detection via `process.env.VERCEL`\n\n**Database Configuration:**\n- `server/db.ts` automatically selects connection method based on environment\n- Vercel: HTTP-based Neon driver with `fetchConnectionCache`\n- Replit: WebSocket-based connection with `ws` module\n- Works seamlessly in both environments without code changes\n\n**Requirements for Production:**\n1. PostgreSQL database (Neon recommended for serverless)\n2. Environment variables in Vercel: `DATABASE_URL`, `NODE_ENV=production`\n3. Database schema applied via `npm run db:push`\n4. Database seeded with initial data (if needed)\n\n**Deployment Files:**\n- `vercel.json` - Routing configuration (API, images, SPA)\n- `api/index.ts` - Serverless function handler\n- `VERCEL_DEPLOYMENT.md` - Step-by-step deployment guide\n\n**Key Features:**\n‚úÖ API routes (`/api/*`) handled by serverless functions\n‚úÖ Static images (`/images/*`) served by serverless with fallback\n‚úÖ SPA routing with proper fallback to `index.html`\n‚úÖ No code changes needed between Replit and Vercel\n‚úÖ Database connection automatically adapts to environment\n\nSee `VERCEL_DEPLOYMENT.md` for complete deployment instructions.\n\n## Recent Changes\n\n### October 21, 2025 (Latest - Vercel Deployment Fix)\n- ‚úÖ **Fixed Vercel deployment configuration**: Corrected `server/db.ts` to use HTTP/Fetch for Neon on Vercel instead of WebSocket\n- ‚úÖ **Created serverless function handler**: Added `api/index.ts` to handle all API and image requests on Vercel\n- ‚úÖ **Fixed routing configuration**: Updated `vercel.json` to use routes instead of rewrites, preserving full path information\n- ‚úÖ **Simplified build script**: Changed `npm run build` to only build frontend (Vercel handles serverless functions automatically)\n- ‚úÖ **Dual environment support**: Code now automatically detects Vercel vs Replit and uses appropriate connection method\n- ‚úÖ **Tested on Replit**: Verified all API endpoints work correctly (categories, menu items, ingredients, gallery)\n- ‚úÖ **Updated documentation**: Created comprehensive `VERCEL_DEPLOYMENT.md` with step-by-step instructions\n\n### October 20, 2025 (Production Polish)\n- ‚úÖ **Repository Cleanup**: Removed ~48 unused files (5 HTML, 3 TXT, 1 MD, 28 screenshots, duplicate images) saving significant storage space\n- ‚úÖ **Premium Badge Design**: Redesigned \"Beliebt\" badge with premium gradient (yellow‚Üíorange‚Üíred) and animations (shimmer + pulse-glow)\n- ‚úÖ **Enhanced Hover Effects**: Added smooth hover transitions to menu cards (scale, shadow, border) and CTA buttons\n- ‚úÖ **Performance Optimization**: Implemented lazy loading (`loading=\"lazy\"`) for all images across Menu, BowlBuilder, MenuItemDialog, About, and Gallery components\n- ‚úÖ **Accessibility Fixes**: Added DialogDescription components to all dialogs (BowlBuilderDialog, MenuItemDialog) for WCAG compliance\n- ‚úÖ **Badge Consistency**: Updated MenuItemDialog to use the new premium gradient badge design matching Menu page\n\n### October 20, 2025 (Earlier - Core Features)\n- ‚úÖ Fixed all marinade image paths in Bowl Builder from stock images to proper wunschbowl images\n- ‚úÖ Added authentic marinade images (Capri, Gozo, Lanai, Maui) to replace placeholder stock images\n- ‚úÖ Implemented auto-scroll to top functionality in Bowl Builder when navigating between steps\n- ‚úÖ Added additional \"Bowl fertigstellen\" button at bottom of toppings step for better UX\n- ‚úÖ Implemented full Wunsch Bowl edit functionality: users can now edit custom bowls from cart with preserved selections\n- ‚úÖ Updated cart store with updateItem method for in-place item editing\n- ‚úÖ Refactored checkout form to request pickup time (10:00-22:00 in 15-min intervals) for takeaway instead of table number\n- ‚úÖ Improved checkout form with separate state variables (pickupTime and tableNumber) based on serviceType\n- ‚úÖ Fixed static image serving bug in server/index.ts (changed from attached_assets to public/images)\n- ‚úÖ Removed all AnimatedSection components from Menu.tsx and Home.tsx for instant page loads\n- ‚úÖ Verified all menu images (custom-bowl.jpg and protein images) are served correctly as image/jpeg\n\n### October 16, 2025\n- ‚úÖ Migrated from in-memory storage to PostgreSQL database\n- ‚úÖ Implemented Drizzle ORM with Neon PostgreSQL driver\n- ‚úÖ Added automatic database seeding functionality\n- ‚úÖ Configured Vercel deployment setup\n- ‚úÖ Maintained backward compatibility with fallback to MemStorage\n- ‚úÖ Server adapted for serverless deployment on Vercel","size_bytes":10175},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertReservationSchema, insertGalleryImageSchema, insertOrderSchema, insertOrderItemSchema } from \"@shared/schema\";\nimport multer from \"multer\";\nimport path from \"path\";\nimport { promises as fs } from \"fs\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Configure multer for file uploads\n  const uploadDir = path.join(process.cwd(), \"client/public/uploads\");\n  \n  // Ensure upload directory exists\n  await fs.mkdir(uploadDir, { recursive: true });\n\n  const upload = multer({\n    storage: multer.diskStorage({\n      destination: uploadDir,\n      filename: (req, file, cb) => {\n        const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n        cb(null, uniqueSuffix + path.extname(file.originalname));\n      },\n    }),\n    limits: { fileSize: 5 * 1024 * 1024 }, // 5MB limit\n    fileFilter: (req, file, cb) => {\n      const allowedTypes = /jpeg|jpg|png|gif|webp/;\n      const extname = allowedTypes.test(path.extname(file.originalname).toLowerCase());\n      const mimetype = allowedTypes.test(file.mimetype);\n      \n      if (mimetype && extname) {\n        return cb(null, true);\n      }\n      cb(new Error(\"Only image files are allowed\"));\n    },\n  });\n\n  // Get all categories\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getAllCategories();\n      res.json(categories);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch categories\" });\n    }\n  });\n\n  // Get all menu items\n  app.get(\"/api/menu-items\", async (req, res) => {\n    try {\n      const menuItems = await storage.getAllMenuItems();\n      res.json(menuItems);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch menu items\" });\n    }\n  });\n\n  // Get menu items by category\n  app.get(\"/api/menu-items/category/:categoryId\", async (req, res) => {\n    try {\n      const { categoryId } = req.params;\n      const menuItems = await storage.getMenuItemsByCategory(categoryId);\n      res.json(menuItems);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch menu items\" });\n    }\n  });\n\n  // Get single menu item\n  app.get(\"/api/menu-items/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const menuItem = await storage.getMenuItemById(id);\n      \n      if (!menuItem) {\n        return res.status(404).json({ error: \"Menu item not found\" });\n      }\n      \n      res.json(menuItem);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch menu item\" });\n    }\n  });\n\n  // Reservations\n  app.get(\"/api/reservations\", async (req, res) => {\n    try {\n      const reservations = await storage.getAllReservations();\n      res.json(reservations);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch reservations\" });\n    }\n  });\n\n  app.post(\"/api/reservations\", async (req, res) => {\n    try {\n      const validatedData = insertReservationSchema.parse(req.body);\n      const reservation = await storage.createReservation(validatedData);\n      res.status(201).json(reservation);\n    } catch (error: any) {\n      if (error.name === 'ZodError') {\n        return res.status(400).json({ error: \"Invalid reservation data\" });\n      }\n      res.status(500).json({ error: \"Failed to create reservation\" });\n    }\n  });\n\n  // Gallery Images\n  app.get(\"/api/gallery\", async (req, res) => {\n    try {\n      const images = await storage.getAllGalleryImages();\n      res.json(images);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch gallery images\" });\n    }\n  });\n\n  app.post(\"/api/gallery\", upload.single(\"image\"), async (req, res) => {\n    try {\n      if (!req.file) {\n        return res.status(400).json({ error: \"No file uploaded\" });\n      }\n\n      const imageData = {\n        url: `/uploads/${req.file.filename}`,\n        filename: req.body.filename || req.file.originalname,\n      };\n\n      const validatedData = insertGalleryImageSchema.parse(imageData);\n      const image = await storage.createGalleryImage(validatedData);\n      res.status(201).json(image);\n    } catch (error: any) {\n      if (error.name === 'ZodError') {\n        return res.status(400).json({ error: \"Invalid gallery image data\" });\n      }\n      res.status(500).json({ error: \"Failed to upload image\" });\n    }\n  });\n\n  app.delete(\"/api/gallery/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const deleted = await storage.deleteGalleryImage(id);\n      \n      if (!deleted) {\n        return res.status(404).json({ error: \"Image not found\" });\n      }\n      \n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete image\" });\n    }\n  });\n\n  // Ingredients\n  app.get(\"/api/ingredients\", async (req, res) => {\n    try {\n      const ingredients = await storage.getAllIngredients();\n      res.json(ingredients);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch ingredients\" });\n    }\n  });\n\n  app.get(\"/api/ingredients/type/:type\", async (req, res) => {\n    try {\n      const { type } = req.params;\n      const ingredients = await storage.getIngredientsByType(type);\n      res.json(ingredients);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch ingredients by type\" });\n    }\n  });\n\n  // Orders\n  app.get(\"/api/orders\", async (req, res) => {\n    try {\n      const orders = await storage.getAllOrders();\n      res.json(orders);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch orders\" });\n    }\n  });\n\n  app.get(\"/api/orders/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const order = await storage.getOrderById(id);\n      \n      if (!order) {\n        return res.status(404).json({ error: \"Order not found\" });\n      }\n      \n      const orderItems = await storage.getOrderItemsByOrderId(id);\n      res.json({ ...order, items: orderItems });\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch order\" });\n    }\n  });\n\n  app.post(\"/api/orders\", async (req, res) => {\n    try {\n      const { items, ...orderData } = req.body;\n      \n      // Validate order data\n      const validatedOrderData = insertOrderSchema.parse(orderData);\n      \n      // Create order\n      const order = await storage.createOrder(validatedOrderData);\n      \n      // Create order items\n      if (items && Array.isArray(items)) {\n        for (const item of items) {\n          const validatedItem = insertOrderItemSchema.parse({\n            ...item,\n            orderId: order.id,\n          });\n          await storage.createOrderItem(validatedItem);\n        }\n      }\n      \n      res.status(201).json(order);\n    } catch (error: any) {\n      if (error.name === 'ZodError') {\n        return res.status(400).json({ error: \"Invalid order data\", details: error.errors });\n      }\n      console.error('Order creation error:', error);\n      res.status(500).json({ error: \"Failed to create order\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":7172},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/Header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X, Phone } from \"lucide-react\";\nimport { FaWhatsapp, FaInstagram, FaTiktok } from \"react-icons/fa\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function Header() {\n  const [location] = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const navItems = [\n    { href: \"/\", label: \"Startseite\" },\n    { href: \"/menu\", label: \"Speisekarte\" },\n    { href: \"/about\", label: \"√úber Uns\" },\n    { href: \"/contact\", label: \"Kontakt\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-gradient-to-r from-ocean to-ocean-dark shadow-lg\">\n      {/* Top Bar - Social Media & Phone */}\n      <div className=\"border-b border-white/10\">\n        <div className=\"container mx-auto px-6 py-2\">\n          <div className=\"flex items-center justify-between text-white text-sm\">\n            <div className=\"flex items-center gap-4\">\n              <a\n                href=\"https://wa.me/380956257835\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"hover-elevate p-2 rounded-md transition-all\"\n                data-testid=\"link-whatsapp\"\n                aria-label=\"WhatsApp\"\n              >\n                <FaWhatsapp className=\"w-5 h-5\" />\n              </a>\n              <a\n                href=\"https://www.instagram.com/poke_pao\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"hover-elevate p-2 rounded-md transition-all\"\n                data-testid=\"link-instagram\"\n                aria-label=\"Instagram\"\n              >\n                <FaInstagram className=\"w-5 h-5\" />\n              </a>\n              <a\n                href=\"https://www.tiktok.com/@poke_pao_hamburg\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"hover-elevate p-2 rounded-md transition-all\"\n                data-testid=\"link-tiktok\"\n                aria-label=\"TikTok\"\n              >\n                <FaTiktok className=\"w-5 h-5\" />\n              </a>\n            </div>\n            <a\n              href=\"tel:04036939098\"\n              className=\"flex items-center gap-2 hover-elevate px-3 py-1 rounded-md font-semibold transition-all\"\n              data-testid=\"link-phone\"\n            >\n              <Phone className=\"w-4 h-4\" />\n              <span>040 36939098</span>\n            </a>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Navigation */}\n      <div className=\"container mx-auto px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" data-testid=\"link-home\" className=\"flex items-center\">\n            <img\n              src=\"https://pokepao.de/assets/images/logo_blue.png\"\n              alt=\"PokePao Logo\"\n              className=\"h-12 md:h-14 w-auto\"\n              data-testid=\"img-logo\"\n            />\n          </Link>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden md:flex items-center gap-8\">\n            {navItems.map((item) => (\n              <Link \n                key={item.href} \n                href={item.href}\n                className={`relative font-poppins font-semibold text-white transition-colors hover:text-sunset group ${\n                  isActive(item.href) ? \"text-sunset\" : \"\"\n                }`}\n                data-testid={`link-nav-${item.label.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {item.label}\n                <span\n                  className={`absolute -bottom-1 left-0 h-0.5 bg-sunset transition-all ${\n                    isActive(item.href) ? \"w-full\" : \"w-0 group-hover:w-full\"\n                  }`}\n                />\n              </Link>\n            ))}\n          </nav>\n\n          {/* CTA Button & Mobile Menu Toggle */}\n          <div className=\"flex items-center gap-4\">\n            <Button\n              asChild\n              className=\"hidden md:inline-flex bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold rounded-full px-6 py-2 shadow-lg hover:shadow-xl transition-all hover:-translate-y-0.5\"\n              data-testid=\"button-order-now\"\n            >\n              <Link href=\"/menu\">\n                Jetzt bestellen\n              </Link>\n            </Button>\n\n            <button\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              className=\"md:hidden p-2 text-white hover-elevate rounded-md\"\n              data-testid=\"button-mobile-menu\"\n              aria-label=\"Toggle menu\"\n            >\n              {mobileMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {mobileMenuOpen && (\n          <div className=\"md:hidden mt-4 bg-white/95 backdrop-blur-sm rounded-lg p-4 shadow-xl animate-fade-in\">\n            <nav className=\"flex flex-col gap-2\">\n              {navItems.map((item) => (\n                <Link \n                  key={item.href} \n                  href={item.href}\n                  onClick={() => setMobileMenuOpen(false)}\n                  className={`block py-3 px-4 rounded-lg font-poppins font-semibold transition-all ${\n                    isActive(item.href)\n                      ? \"bg-ocean text-white\"\n                      : \"text-foreground hover:bg-accent\"\n                  }`}\n                  data-testid={`link-mobile-${item.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  {item.label}\n                </Link>\n              ))}\n              <Button\n                asChild\n                onClick={() => setMobileMenuOpen(false)}\n                className=\"w-full mt-2 bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold rounded-full py-3\"\n                data-testid=\"button-mobile-order\"\n              >\n                <Link href=\"/menu\">\n                  Jetzt bestellen\n                </Link>\n              </Button>\n            </nav>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}\n","size_bytes":6289},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n        // PokePao Brand Colors\n        ocean: {\n          DEFAULT: \"hsl(198 71% 55%)\",\n          dark: \"hsl(198 71% 45%)\",\n        },\n        sunset: {\n          DEFAULT: \"hsl(16 90% 55%)\",\n          dark: \"hsl(16 90% 45%)\",\n        },\n        gold: {\n          DEFAULT: \"hsl(45 100% 50%)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"Lato\", \"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        poppins: [\"Poppins\", \"sans-serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        \"marquee\": {\n          \"0%\": { transform: \"translateX(0%)\" },\n          \"100%\": { transform: \"translateX(-50%)\" },\n        },\n        \"fade-in\": {\n          from: { opacity: \"0\", transform: \"translateY(10px)\" },\n          to: { opacity: \"1\", transform: \"translateY(0)\" },\n        },\n        \"scale-in\": {\n          from: { transform: \"scale(0)\" },\n          to: { transform: \"scale(1)\" },\n        },\n        \"rotate-slow\": {\n          from: { transform: \"rotate(0deg)\" },\n          to: { transform: \"rotate(360deg)\" },\n        },\n        \"rotate-medium\": {\n          from: { transform: \"rotate(0deg)\" },\n          to: { transform: \"rotate(360deg)\" },\n        },\n        \"rotate-fast\": {\n          from: { transform: \"rotate(0deg)\" },\n          to: { transform: \"rotate(360deg)\" },\n        },\n        \"rotate-reverse\": {\n          from: { transform: \"rotate(360deg)\" },\n          to: { transform: \"rotate(0deg)\" },\n        },\n        \"pulse-glow\": {\n          \"0%, 100%\": { \n            opacity: \"1\",\n            transform: \"scale(1)\",\n          },\n          \"50%\": { \n            opacity: \"0.8\",\n            transform: \"scale(1.05)\",\n          },\n        },\n        \"shimmer\": {\n          \"0%\": { backgroundPosition: \"-200% 0\" },\n          \"100%\": { backgroundPosition: \"200% 0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"marquee\": \"marquee 80s linear infinite\",\n        \"fade-in\": \"fade-in 0.5s ease-in-out\",\n        \"scale-in\": \"scale-in 0.3s ease-out\",\n        \"rotate-slow\": \"rotate-slow 60s linear infinite\",\n        \"rotate-medium\": \"rotate-medium 40s linear infinite\",\n        \"rotate-fast\": \"rotate-fast 25s linear infinite\",\n        \"rotate-reverse-slow\": \"rotate-reverse 80s linear infinite\",\n        \"pulse-glow\": \"pulse-glow 2s ease-in-out infinite\",\n        \"shimmer\": \"shimmer 3s linear infinite\",\n      },\n      backgroundImage: {\n        \"gradient-gold\": \"linear-gradient(135deg, #FFD700 0%, #FFA500 50%, #FF6347 100%)\",\n        \"gradient-gold-shimmer\": \"linear-gradient(90deg, transparent, rgba(255,255,255,0.8), transparent)\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":6438},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/Gallery3D.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogTitle } from \"@/components/ui/dialog\";\nimport { ChevronLeft, ChevronRight, X, ZoomIn } from \"lucide-react\";\nimport { type GalleryImage } from \"@shared/schema\";\n\nconst defaultImages = [\n  { id: \"default-1\", url: \"/images/gallery-1.png\", filename: \"Store Interior 1\" },\n  { id: \"default-2\", url: \"/images/gallery-2.png\", filename: \"Store Interior 2\" },\n  { id: \"default-3\", url: \"/images/gallery-3.png\", filename: \"Store View\" },\n];\n\nexport function Gallery3D() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState(0);\n  const [dragOffset, setDragOffset] = useState(0);\n  const [isFullscreenOpen, setIsFullscreenOpen] = useState(false);\n  const [fullscreenImageIndex, setFullscreenImageIndex] = useState(0);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: uploadedImages = [] } = useQuery<GalleryImage[]>({\n    queryKey: [\"/api/gallery\"],\n  });\n\n  const allImages = [...defaultImages, ...uploadedImages];\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`/api/gallery/${id}`, {\n        method: \"DELETE\",\n        credentials: \"include\",\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Delete failed\");\n      }\n      \n      return response;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/gallery\"] });\n      toast({\n        title: \"Bild gel√∂scht\",\n        description: \"Das Bild wurde aus der Galerie entfernt.\",\n      });\n    },\n  });\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    setIsDragging(true);\n    setDragStart(e.clientX);\n    setDragOffset(0);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging) return;\n    const offset = e.clientX - dragStart;\n    setDragOffset(offset);\n  };\n\n  const handleMouseUp = () => {\n    if (!isDragging) return;\n    setIsDragging(false);\n    \n    const threshold = 50;\n    if (dragOffset > threshold) {\n      setCurrentIndex((prev) => (prev - 1 + allImages.length) % allImages.length);\n    } else if (dragOffset < -threshold) {\n      setCurrentIndex((prev) => (prev + 1) % allImages.length);\n    }\n    \n    setDragOffset(0);\n  };\n\n  const handleMouseLeave = () => {\n    if (isDragging) {\n      handleMouseUp();\n    }\n  };\n\n  const nextSlide = () => {\n    setCurrentIndex((prev) => (prev + 1) % allImages.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentIndex((prev) => (prev - 1 + allImages.length) % allImages.length);\n  };\n\n  const openFullscreen = (index: number) => {\n    setFullscreenImageIndex(index);\n    setIsFullscreenOpen(true);\n  };\n\n  const nextFullscreenImage = () => {\n    setFullscreenImageIndex((prev) => (prev + 1) % allImages.length);\n  };\n\n  const prevFullscreenImage = () => {\n    setFullscreenImageIndex((prev) => (prev - 1 + allImages.length) % allImages.length);\n  };\n\n  const getImageStyle = (index: number) => {\n    const diff = index - currentIndex;\n    const totalImages = allImages.length;\n    \n    let adjustedDiff = diff;\n    if (diff > totalImages / 2) {\n      adjustedDiff = diff - totalImages;\n    } else if (diff < -totalImages / 2) {\n      adjustedDiff = diff + totalImages;\n    }\n\n    const isCenter = adjustedDiff === 0;\n    const absAdjustedDiff = Math.abs(adjustedDiff);\n    \n    const dragOffsetPercent = isDragging ? (dragOffset / window.innerWidth) * 100 : 0;\n    \n    return {\n      transform: `\n        translateX(${adjustedDiff * 85 + dragOffsetPercent}%) \n        translateZ(${isCenter ? 0 : -absAdjustedDiff * 200}px) \n        rotateY(${adjustedDiff * -15}deg)\n        scale(${isCenter ? 1 : 1 - absAdjustedDiff * 0.2})\n      `,\n      opacity: absAdjustedDiff > 2 ? 0 : 1 - absAdjustedDiff * 0.3,\n      zIndex: 10 - absAdjustedDiff,\n    };\n  };\n\n  return (\n    <div className=\"py-16 md:py-24 bg-muted\">\n      <div className=\"container mx-auto px-6\">\n        <h2 className=\"font-poppins text-3xl md:text-4xl font-bold text-ocean mb-4 text-center\" data-testid=\"text-gallery-title\">\n          Unsere Galerie\n        </h2>\n        <p className=\"text-center text-muted-foreground mb-12 font-lato\" data-testid=\"text-gallery-subtitle\">\n          Entdecken Sie unseren einladenden Raum\n        </p>\n\n        {/* 3D Carousel */}\n        <div className=\"mb-8\">\n          <div \n            className=\"perspective-1000 h-[400px] md:h-[500px] relative overflow-hidden cursor-grab active:cursor-grabbing\"\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onMouseLeave={handleMouseLeave}\n          >\n            <div className=\"absolute inset-0 flex items-center justify-center preserve-3d select-none\">\n              {allImages.map((image, index) => {\n                const isCenter = index === currentIndex;\n                return (\n                  <div\n                    key={image.id}\n                    className=\"absolute w-[280px] md:w-[400px] h-[200px] md:h-[300px] transition-all duration-700 ease-out\"\n                    style={getImageStyle(index)}\n                    data-testid={`gallery-image-${index}`}\n                  >\n                    <Card \n                      className=\"w-full h-full overflow-hidden relative group\"\n                      onClick={() => isCenter && openFullscreen(index)}\n                    >\n                      <img\n                        src={image.url}\n                        alt={image.filename}\n                        loading=\"lazy\"\n                        className={`w-full h-full object-cover ${isCenter ? 'cursor-pointer' : ''}`}\n                      />\n                      {isCenter && (\n                        <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/10 transition-colors flex items-center justify-center\">\n                          <div className=\"opacity-0 group-hover:opacity-100 transition-opacity bg-background/80 text-foreground p-3 rounded-full\">\n                            <ZoomIn className=\"w-6 h-6\" />\n                          </div>\n                        </div>\n                      )}\n                      {!image.id.startsWith('default-') && (\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            deleteMutation.mutate(image.id);\n                          }}\n                          className=\"absolute top-2 right-2 bg-destructive text-white p-2 rounded-full opacity-0 group-hover:opacity-100 transition-opacity z-10\"\n                          data-testid={`button-delete-${image.id}`}\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </button>\n                      )}\n                    </Card>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Navigation Buttons - Under Gallery */}\n          <div className=\"flex items-center justify-center gap-4 mt-8\">\n            <Button\n              onClick={prevSlide}\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"rounded-full\"\n              data-testid=\"button-prev\"\n            >\n              <ChevronLeft className=\"w-6 h-6\" />\n            </Button>\n            <span className=\"font-poppins text-sm text-muted-foreground\">\n              {currentIndex + 1} / {allImages.length}\n            </span>\n            <Button\n              onClick={nextSlide}\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"rounded-full\"\n              data-testid=\"button-next\"\n            >\n              <ChevronRight className=\"w-6 h-6\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Fullscreen Dialog */}\n      <Dialog open={isFullscreenOpen} onOpenChange={setIsFullscreenOpen}>\n        <DialogContent className=\"max-w-[95vw] max-h-[95vh] p-0 bg-black/95 border-none\">\n          <DialogTitle className=\"sr-only\">\n            {allImages[fullscreenImageIndex]?.filename || 'Bild'}\n          </DialogTitle>\n          <div className=\"relative w-full h-[95vh] flex items-center justify-center\">\n            <img\n              src={allImages[fullscreenImageIndex]?.url}\n              loading=\"lazy\"\n              alt={allImages[fullscreenImageIndex]?.filename}\n              className=\"max-w-full max-h-full object-contain\"\n              data-testid=\"fullscreen-image\"\n            />\n            \n            {/* Fullscreen Navigation */}\n            <Button\n              onClick={prevFullscreenImage}\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"absolute left-4 top-1/2 -translate-y-1/2 rounded-full bg-background/90 hover:bg-background\"\n              data-testid=\"button-fullscreen-prev\"\n            >\n              <ChevronLeft className=\"w-6 h-6\" />\n            </Button>\n            <Button\n              onClick={nextFullscreenImage}\n              variant=\"outline\"\n              size=\"icon\"\n              className=\"absolute right-4 top-1/2 -translate-y-1/2 rounded-full bg-background/90 hover:bg-background\"\n              data-testid=\"button-fullscreen-next\"\n            >\n              <ChevronRight className=\"w-6 h-6\" />\n            </Button>\n\n            {/* Image Counter */}\n            <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 bg-background/90 px-4 py-2 rounded-full\">\n              <span className=\"font-poppins text-sm\" data-testid=\"text-image-counter\">\n                {fullscreenImageIndex + 1} / {allImages.length}\n              </span>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <style>{`\n        .perspective-1000 {\n          perspective: 1000px;\n        }\n        .preserve-3d {\n          transform-style: preserve-3d;\n        }\n      `}</style>\n    </div>\n  );\n}\n","size_bytes":10209},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport path from \"path\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Serve menu images from public/images\napp.use(\"/images\", express.static(\"public/images\"));\n// Also serve any uploaded wunschbowl images from attached_assets so newly added\n// ingredient photos are immediately available at /images/wunschbowl/<file>\napp.use(\n  \"/images/wunschbowl\",\n  express.static(path.join(process.cwd(), \"attached_assets\", \"wunschbowl\")),\n);\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Initialize app\nasync function initializeApp() {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else if (!process.env.VERCEL) {\n    // Only serve static files when in production but NOT on Vercel\n    // Vercel handles static files separately\n    serveStatic(app);\n  }\n\n  return server;\n}\n\n// Only run server in non-Vercel environments\nif (!process.env.VERCEL) {\n  initializeApp().then((server) => {\n    // ALWAYS serve the app on the port specified in the environment variable PORT\n    // Other ports are firewalled. Default to 5000 if not specified.\n    // this serves both the API and the client.\n    // It is the only port that is not firewalled.\n    const port = parseInt(process.env.PORT || '5000', 10);\n    // reusePort is not supported on some platforms (notably default Windows sockets)\n    // so only set it when the platform is not win32.\n    const listenOptions: any = {\n      port,\n      host: \"0.0.0.0\",\n    };\n    if (process.platform !== 'win32') {\n      listenOptions.reusePort = true;\n    }\n\n    server.listen(listenOptions, () => {\n      log(`serving on port ${port}`);\n    });\n  });\n}\n\n// Export app for other modules\nexport { app, initializeApp };\n","size_bytes":3098},"client/src/components/AnimatedSection.tsx":{"content":"import { motion, useInView, useReducedMotion } from \"framer-motion\";\nimport { useRef, type ReactNode } from \"react\";\n\ninterface AnimatedSectionProps {\n  children: ReactNode;\n  className?: string;\n  delay?: number;\n  direction?: \"up\" | \"down\" | \"left\" | \"right\" | \"none\";\n}\n\nexport function AnimatedSection({ \n  children, \n  className = \"\", \n  delay = 0,\n  direction = \"up\"\n}: AnimatedSectionProps) {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true, margin: \"-50px\" });\n  const shouldReduceMotion = useReducedMotion();\n\n  // Reduced movement distance for subtlety\n  const directionOffset = {\n    up: { y: shouldReduceMotion ? 0 : 15 },\n    down: { y: shouldReduceMotion ? 0 : -15 },\n    left: { x: shouldReduceMotion ? 0 : 15 },\n    right: { x: shouldReduceMotion ? 0 : -15 },\n    none: {}\n  };\n\n  return (\n    <motion.div\n      ref={ref}\n      className={className}\n      initial={{ \n        opacity: 0, \n        ...directionOffset[direction]\n      }}\n      animate={isInView ? { \n        opacity: 1, \n        y: 0,\n        x: 0\n      } : {}}\n      transition={{\n        duration: shouldReduceMotion ? 0.2 : 0.4,\n        delay: shouldReduceMotion ? 0 : delay,\n        ease: \"easeOut\"\n      }}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","size_bytes":1268},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n\n  --foreground: 210 40% 20%;\n\n  --border: 210 20% 88%;\n\n  --card: 210 20% 98%;\n\n  --card-foreground: 210 40% 20%;\n\n  --card-border: 210 20% 92%;\n\n  --sidebar: 210 20% 96%;\n\n  --sidebar-foreground: 210 40% 20%;\n\n  --sidebar-border: 210 20% 90%;\n\n  --sidebar-primary: 198 71% 55%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 210 20% 92%;\n\n  --sidebar-accent-foreground: 210 40% 20%;\n\n  --sidebar-ring: 198 71% 55%;\n\n  --popover: 210 20% 94%;\n\n  --popover-foreground: 210 40% 20%;\n\n  --popover-border: 210 20% 88%;\n\n  --primary: 198 71% 55%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 210 20% 90%;\n\n  --secondary-foreground: 210 40% 20%;\n\n  --muted: 210 15% 93%;\n\n  --muted-foreground: 210 20% 40%;\n\n  --accent: 210 18% 92%;\n\n  --accent-foreground: 210 40% 20%;\n\n  --destructive: 0 70% 55%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 210 30% 70%;\n  --ring: 198 71% 55%;\n  --chart-1: 198 71% 45%;\n  --chart-2: 16 90% 55%;\n  --chart-3: 45 100% 50%;\n  --chart-4: 140 50% 45%;\n  --chart-5: 210 40% 35%;\n\n  --font-sans: Open Sans, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 2px 0px 0px hsl(210 20% 80% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(210 20% 80% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(210 20% 80% / 0.00), 0px 1px 2px -1px hsl(210 20% 70% / 0.05);\n  --shadow: 0px 2px 0px 0px hsl(210 20% 80% / 0.00), 0px 1px 2px -1px hsl(210 20% 70% / 0.08);\n  --shadow-md: 0px 2px 0px 0px hsl(210 20% 80% / 0.00), 0px 2px 4px -1px hsl(210 20% 70% / 0.10);\n  --shadow-lg: 0px 2px 0px 0px hsl(210 20% 80% / 0.00), 0px 4px 6px -1px hsl(210 20% 70% / 0.12);\n  --shadow-xl: 0px 2px 0px 0px hsl(210 20% 80% / 0.00), 0px 8px 10px -1px hsl(210 20% 70% / 0.15);\n  --shadow-2xl: 0px 2px 0px 0px hsl(210 20% 80% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 210 40% 8%;\n\n  --foreground: 210 20% 92%;\n\n  --border: 210 30% 18%;\n\n  --card: 210 35% 10%;\n\n  --card-foreground: 210 20% 92%;\n\n  --card-border: 210 30% 15%;\n\n  --sidebar: 210 35% 12%;\n\n  --sidebar-foreground: 210 20% 92%;\n\n  --sidebar-border: 210 30% 17%;\n\n  --sidebar-primary: 198 71% 55%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 210 25% 16%;\n\n  --sidebar-accent-foreground: 210 20% 92%;\n\n  --sidebar-ring: 198 71% 55%;\n\n  --popover: 210 30% 14%;\n\n  --popover-foreground: 210 20% 92%;\n\n  --popover-border: 210 30% 19%;\n\n  --primary: 198 71% 55%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 210 25% 18%;\n\n  --secondary-foreground: 210 20% 92%;\n\n  --muted: 210 20% 15%;\n\n  --muted-foreground: 210 15% 65%;\n\n  --accent: 210 18% 16%;\n\n  --accent-foreground: 210 20% 92%;\n\n  --destructive: 0 70% 55%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 210 30% 35%;\n  --ring: 198 71% 55%;\n  --chart-1: 198 71% 65%;\n  --chart-2: 16 90% 65%;\n  --chart-3: 45 100% 60%;\n  --chart-4: 140 50% 55%;\n  --chart-5: 210 40% 75%;\n\n  --shadow-2xs: 0px 2px 0px 0px hsl(210 40% 5% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(210 40% 5% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(210 40% 5% / 0.00), 0px 1px 2px -1px hsl(210 40% 5% / 0.20);\n  --shadow: 0px 2px 0px 0px hsl(210 40% 5% / 0.00), 0px 1px 2px -1px hsl(210 40% 5% / 0.25);\n  --shadow-md: 0px 2px 0px 0px hsl(210 40% 5% / 0.00), 0px 2px 4px -1px hsl(210 40% 5% / 0.30);\n  --shadow-lg: 0px 2px 0px 0px hsl(210 40% 5% / 0.00), 0px 4px 6px -1px hsl(210 40% 5% / 0.35);\n  --shadow-xl: 0px 2px 0px 0px hsl(210 40% 5% / 0.00), 0px 8px 10px -1px hsl(210 40% 5% / 0.40);\n  --shadow-2xl: 0px 2px 0px 0px hsl(210 40% 5% / 0.00);\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    border-radius: inherit;\n    z-index: -1;\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    border-radius: inherit;\n    z-index: 999;\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n\n  /* Subtle pulse animation for selected items */\n  @keyframes pulse-once {\n    0%, 100% {\n      box-shadow: 0 0 0 0 hsl(198, 71%, 55%, 0.4);\n    }\n    50% {\n      box-shadow: 0 0 0 8px hsl(198, 71%, 55%, 0);\n    }\n  }\n\n  .animate-pulse-once {\n    animation: pulse-once 0.6s ease-out;\n  }\n}","size_bytes":9404},"server/storage.ts":{"content":"import { \n  type Category, \n  type InsertCategory, \n  type MenuItem, \n  type InsertMenuItem,\n  type Reservation,\n  type InsertReservation,\n  type GalleryImage,\n  type InsertGalleryImage,\n  type Ingredient,\n  type InsertIngredient,\n  type Order,\n  type InsertOrder,\n  type OrderItem,\n  type InsertOrderItem,\n  categories as categoriesTable,\n  menuItems as menuItemsTable,\n  reservations as reservationsTable,\n  galleryImages as galleryImagesTable,\n  ingredients as ingredientsTable,\n  orders as ordersTable,\n  orderItems as orderItemsTable\n} from \"@shared/schema\";\n// import { db } from \"./db\";  // Commented out since we're using MemStorage\nimport { eq, asc, desc } from \"drizzle-orm\";\nimport { randomUUID } from \"crypto\";\nimport { categories as seedCategories, createMenuItems } from \"./data/menu\";\nimport { createIngredients } from \"./data/ingredients\";\n\n// In-memory storage for when DATABASE_URL is not set\nclass MemStorage implements IStorage {\n  private categories: Map<string, Category>;\n  private menuItems: Map<string, MenuItem>;\n  private reservations: Map<string, Reservation>;\n  private galleryImages: Map<string, GalleryImage>;\n  private ingredients: Map<string, Ingredient>;\n  private orders: Map<string, Order>;\n  private orderItems: Map<string, OrderItem>;\n\n  constructor() {\n    this.categories = new Map();\n    this.menuItems = new Map();\n    this.reservations = new Map();\n    this.galleryImages = new Map();\n    this.ingredients = new Map();\n    this.orders = new Map();\n    this.orderItems = new Map();\n    this.initializeData();\n  }\n\n  private initializeData() {\n    const createdCategories = seedCategories.map(cat => this.createCategorySync(cat));\n    \n    const categoryIds = {\n      customBowls: createdCategories[0].id,\n      bowls: createdCategories[1].id,\n      wraps: createdCategories[2].id,\n      appetizers: createdCategories[3].id,\n      desserts: createdCategories[4].id,\n      drinks: createdCategories[5].id,\n    };\n\n    const menuItemsData = createMenuItems(categoryIds);\n    menuItemsData.forEach(item => this.createMenuItemSync(item));\n    \n    const ingredientsData = createIngredients();\n    ingredientsData.forEach((ing: InsertIngredient) => this.createIngredientSync(ing));\n  }\n\n  private createCategorySync(category: InsertCategory): Category {\n    const id = randomUUID();\n    const cat: Category = { ...category, id, order: category.order ?? 0 };\n    this.categories.set(id, cat);\n    return cat;\n  }\n\n  private createMenuItemSync(menuItem: InsertMenuItem): MenuItem {\n    const id = randomUUID();\n    const item: MenuItem = { \n      ...menuItem, \n      id,\n      available: menuItem.available ?? 1,\n      popular: menuItem.popular ?? 0,\n      priceSmall: menuItem.priceSmall ?? null,\n      priceLarge: menuItem.priceLarge ?? null,\n      protein: menuItem.protein ?? null,\n      marinade: menuItem.marinade ?? null,\n      ingredients: menuItem.ingredients ?? null,\n      sauce: menuItem.sauce ?? null,\n      toppings: menuItem.toppings ?? null,\n      allergens: menuItem.allergens ?? null,\n      hasSizeOptions: menuItem.hasSizeOptions ?? 0,\n      isCustomBowl: menuItem.isCustomBowl ?? 0,\n    };\n    this.menuItems.set(id, item);\n    return item;\n  }\n\n  private createIngredientSync(ingredient: InsertIngredient): Ingredient {\n    const id = randomUUID();\n    const ing: Ingredient = {\n      ...ingredient,\n      id,\n      description: ingredient.description ?? null,\n      descriptionDE: ingredient.descriptionDE ?? null,\n      price: ingredient.price ?? null,\n      available: ingredient.available ?? 1,\n      order: ingredient.order ?? 0,\n    };\n    this.ingredients.set(id, ing);\n    return ing;\n  }\n\n  async getAllCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values()).sort((a, b) => a.order - b.order);\n  }\n\n  async getCategoryById(id: string): Promise<Category | undefined> {\n    return this.categories.get(id);\n  }\n\n  async createCategory(category: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const cat: Category = { ...category, id, order: category.order ?? 0 };\n    this.categories.set(id, cat);\n    return cat;\n  }\n\n  async getAllMenuItems(): Promise<MenuItem[]> {\n    return Array.from(this.menuItems.values());\n  }\n\n  async getMenuItemById(id: string): Promise<MenuItem | undefined> {\n    return this.menuItems.get(id);\n  }\n\n  async getMenuItemsByCategory(categoryId: string): Promise<MenuItem[]> {\n    return Array.from(this.menuItems.values()).filter(\n      (item) => item.categoryId === categoryId\n    );\n  }\n\n  async createMenuItem(menuItem: InsertMenuItem): Promise<MenuItem> {\n    const id = randomUUID();\n    const item: MenuItem = { \n      ...menuItem, \n      id,\n      available: menuItem.available ?? 1,\n      popular: menuItem.popular ?? 0,\n      priceSmall: menuItem.priceSmall ?? null,\n      priceLarge: menuItem.priceLarge ?? null,\n      protein: menuItem.protein ?? null,\n      marinade: menuItem.marinade ?? null,\n      ingredients: menuItem.ingredients ?? null,\n      sauce: menuItem.sauce ?? null,\n      toppings: menuItem.toppings ?? null,\n      allergens: menuItem.allergens ?? null,\n      hasSizeOptions: menuItem.hasSizeOptions ?? 0,\n      isCustomBowl: menuItem.isCustomBowl ?? 0,\n    };\n    this.menuItems.set(id, item);\n    return item;\n  }\n\n  async getAllReservations(): Promise<Reservation[]> {\n    return Array.from(this.reservations.values());\n  }\n\n  async getReservationById(id: string): Promise<Reservation | undefined> {\n    return this.reservations.get(id);\n  }\n\n  async createReservation(reservation: InsertReservation): Promise<Reservation> {\n    const id = randomUUID();\n    const res: Reservation = { ...reservation, id };\n    this.reservations.set(id, res);\n    return res;\n  }\n\n  async getAllGalleryImages(): Promise<GalleryImage[]> {\n    return Array.from(this.galleryImages.values()).sort((a, b) => \n      new Date(b.uploadedAt).getTime() - new Date(a.uploadedAt).getTime()\n    );\n  }\n\n  async getGalleryImageById(id: string): Promise<GalleryImage | undefined> {\n    return this.galleryImages.get(id);\n  }\n\n  async createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage> {\n    const id = randomUUID();\n    const img: GalleryImage = { ...image, id, uploadedAt: new Date().toISOString() };\n    this.galleryImages.set(id, img);\n    return img;\n  }\n\n  async deleteGalleryImage(id: string): Promise<boolean> {\n    return this.galleryImages.delete(id);\n  }\n\n  async getAllIngredients(): Promise<Ingredient[]> {\n    return Array.from(this.ingredients.values()).sort((a, b) => a.order - b.order);\n  }\n\n  async getIngredientById(id: string): Promise<Ingredient | undefined> {\n    return this.ingredients.get(id);\n  }\n\n  async getIngredientsByType(type: string): Promise<Ingredient[]> {\n    return Array.from(this.ingredients.values())\n      .filter(ing => ing.type === type && ing.available === 1)\n      .sort((a, b) => a.order - b.order);\n  }\n\n  async createIngredient(ingredient: InsertIngredient): Promise<Ingredient> {\n    const id = randomUUID();\n    const ing: Ingredient = {\n      ...ingredient,\n      id,\n      description: ingredient.description ?? null,\n      descriptionDE: ingredient.descriptionDE ?? null,\n      price: ingredient.price ?? null,\n      available: ingredient.available ?? 1,\n      order: ingredient.order ?? 0,\n    };\n    this.ingredients.set(id, ing);\n    return ing;\n  }\n\n  async getAllOrders(): Promise<Order[]> {\n    return Array.from(this.orders.values()).sort((a, b) => \n      new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n    );\n  }\n\n  async getOrderById(id: string): Promise<Order | undefined> {\n    return this.orders.get(id);\n  }\n\n  async createOrder(order: InsertOrder): Promise<Order> {\n    const id = randomUUID();\n    const ord: Order = {\n      ...order,\n      id,\n      comment: order.comment ?? null,\n      status: 'pending',\n      createdAt: new Date().toISOString(),\n    };\n    this.orders.set(id, ord);\n    return ord;\n  }\n\n  async getOrderItemsByOrderId(orderId: string): Promise<OrderItem[]> {\n    return Array.from(this.orderItems.values()).filter(item => item.orderId === orderId);\n  }\n\n  async createOrderItem(orderItem: InsertOrderItem): Promise<OrderItem> {\n    const id = randomUUID();\n    const item: OrderItem = {\n      ...orderItem,\n      id,\n      menuItemId: orderItem.menuItemId ?? null,\n      size: orderItem.size ?? null,\n      customization: orderItem.customization ?? null,\n    };\n    this.orderItems.set(id, item);\n    return item;\n  }\n}\n\nexport interface IStorage {\n  // Categories\n  getAllCategories(): Promise<Category[]>;\n  getCategoryById(id: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n  \n  // Menu Items\n  getAllMenuItems(): Promise<MenuItem[]>;\n  getMenuItemById(id: string): Promise<MenuItem | undefined>;\n  getMenuItemsByCategory(categoryId: string): Promise<MenuItem[]>;\n  createMenuItem(menuItem: InsertMenuItem): Promise<MenuItem>;\n\n  // Reservations\n  getAllReservations(): Promise<Reservation[]>;\n  getReservationById(id: string): Promise<Reservation | undefined>;\n  createReservation(reservation: InsertReservation): Promise<Reservation>;\n\n  // Gallery Images\n  getAllGalleryImages(): Promise<GalleryImage[]>;\n  getGalleryImageById(id: string): Promise<GalleryImage | undefined>;\n  createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage>;\n  deleteGalleryImage(id: string): Promise<boolean>;\n\n  // Ingredients\n  getAllIngredients(): Promise<Ingredient[]>;\n  getIngredientById(id: string): Promise<Ingredient | undefined>;\n  getIngredientsByType(type: string): Promise<Ingredient[]>;\n  createIngredient(ingredient: InsertIngredient): Promise<Ingredient>;\n\n  // Orders\n  getAllOrders(): Promise<Order[]>;\n  getOrderById(id: string): Promise<Order | undefined>;\n  createOrder(order: InsertOrder): Promise<Order>;\n  getOrderItemsByOrderId(orderId: string): Promise<OrderItem[]>;\n  createOrderItem(orderItem: InsertOrderItem): Promise<OrderItem>;\n}\n\n// DatabaseStorage stub - not used in this project\nclass DatabaseStorage implements IStorage {\n  private notAvailable(): never {\n    throw new Error('DatabaseStorage is not available - using MemStorage');\n  }\n\n  async getAllCategories(): Promise<Category[]> { return this.notAvailable(); }\n  async getCategoryById(_id: string): Promise<Category | undefined> { return this.notAvailable(); }\n  async createCategory(_category: InsertCategory): Promise<Category> { return this.notAvailable(); }\n  async getAllMenuItems(): Promise<MenuItem[]> { return this.notAvailable(); }\n  async getMenuItemById(_id: string): Promise<MenuItem | undefined> { return this.notAvailable(); }\n  async getMenuItemsByCategory(_categoryId: string): Promise<MenuItem[]> { return this.notAvailable(); }\n  async createMenuItem(_menuItem: InsertMenuItem): Promise<MenuItem> { return this.notAvailable(); }\n  async getAllReservations(): Promise<Reservation[]> { return this.notAvailable(); }\n  async getReservationById(_id: string): Promise<Reservation | undefined> { return this.notAvailable(); }\n  async createReservation(_reservation: InsertReservation): Promise<Reservation> { return this.notAvailable(); }\n  async getAllGalleryImages(): Promise<GalleryImage[]> { return this.notAvailable(); }\n  async getGalleryImageById(_id: string): Promise<GalleryImage | undefined> { return this.notAvailable(); }\n  async createGalleryImage(_image: InsertGalleryImage): Promise<GalleryImage> { return this.notAvailable(); }\n  async deleteGalleryImage(_id: string): Promise<boolean> { return this.notAvailable(); }\n  async getAllIngredients(): Promise<Ingredient[]> { return this.notAvailable(); }\n  async getIngredientById(_id: string): Promise<Ingredient | undefined> { return this.notAvailable(); }\n  async getIngredientsByType(_type: string): Promise<Ingredient[]> { return this.notAvailable(); }\n  async createIngredient(_ingredient: InsertIngredient): Promise<Ingredient> { return this.notAvailable(); }\n  async getAllOrders(): Promise<Order[]> { return this.notAvailable(); }\n  async getOrderById(_id: string): Promise<Order | undefined> { return this.notAvailable(); }\n  async createOrder(_order: InsertOrder): Promise<Order> { return this.notAvailable(); }\n  async getOrderItemsByOrderId(_orderId: string): Promise<OrderItem[]> { return this.notAvailable(); }\n  async createOrderItem(_orderItem: InsertOrderItem): Promise<OrderItem> { return this.notAvailable(); }\n}\n\n// Use MemStorage for this project\nexport const storage: IStorage = new MemStorage();\n\n// MemStorage initializes data in constructor - no seeding needed\n","size_bytes":12568},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport * as schema from \"@shared/schema\";\n\n// Configure Neon for serverless environments (Vercel)\n// Use fetch for HTTP connections instead of WebSocket\nif (process.env.VERCEL) {\n  neonConfig.fetchConnectionCache = true;\n} else {\n  // For local development with Replit, use WebSocket\n  import('ws').then((ws) => {\n    neonConfig.webSocketConstructor = ws.default;\n  });\n}\n\nlet pool: Pool | null = null;\nlet db: ReturnType<typeof drizzle> | null = null;\n\nif (process.env.DATABASE_URL) {\n  pool = new Pool({ connectionString: process.env.DATABASE_URL });\n  db = drizzle({ client: pool, schema });\n}\n\nexport { pool, db };\n","size_bytes":735},"VERCEL_DEPLOYMENT.md":{"content":"# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel\n\n## ‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!\n\n–í–∞—à –ø—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ Vercel —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö Neon PostgreSQL.\n\n---\n\n## –ß—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ:\n\n### 1. **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö** ‚úÖ\n- `server/db.ts` –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –∫–∞–∫ –Ω–∞ Replit (WebSocket), —Ç–∞–∫ –∏ –Ω–∞ Vercel (HTTP/Fetch)\n- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `@neondatabase/serverless` –¥—Ä–∞–π–≤–µ—Ä\n- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n### 2. **Serverless —Ñ—É–Ω–∫—Ü–∏–∏** ‚úÖ\n- –°–æ–∑–¥–∞–Ω `api/index.ts` –¥–ª—è Vercel serverless —Ñ—É–Ω–∫—Ü–∏–π\n- –í—Å–µ API –º–∞—Ä—à—Ä—É—Ç—ã (`/api/*`) —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ serverless\n- –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—Å–ª—É–∂–∏–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n\n### 3. **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vercel** ‚úÖ\n- `vercel.json` –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π\n- –§—Ä–æ–Ω—Ç–µ–Ω–¥ –±–∏–ª–¥–∏—Ç—Å—è –≤ `dist/public`\n- API –∑–∞–ø—Ä–æ—Å—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ serverless —Ñ—É–Ω–∫—Ü–∏–∏\n\n### 4. **Build —Å–∫—Ä–∏–ø—Ç—ã** ‚úÖ\n- `npm run build` —Å–æ–±–∏—Ä–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ (vite build)\n- Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç serverless —Ñ—É–Ω–∫—Ü–∏–∏\n\n---\n\n## –®–∞–≥–∏ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:\n\n### –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Neon\n\n1. **–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ Neon.tech:**\n   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://neon.tech\n   - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ\n   - –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç\n   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Connection String (–æ–Ω –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫):\n     ```\n     postgresql://username:password@ep-xxxxx.region.aws.neon.tech/neondb?sslmode=require\n     ```\n\n2. **–ü—Ä–∏–º–µ–Ω–∏—Ç–µ —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:**\n   \n   –ù–∞ –≤–∞—à–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ (–∏–ª–∏ –≤ Replit), –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:\n   ```bash\n   # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –≤–∞—à–µ–π —Å—Ç—Ä–æ–∫–æ–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Neon\n   export DATABASE_URL=\"postgresql://username:password@...\"\n   \n   # –ü—Ä–∏–º–µ–Ω–∏—Ç–µ —Å—Ö–µ–º—É –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n   npm run db:push\n   ```\n\n3. **–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):**\n   \n   –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å seed —Å–∫—Ä–∏–ø—Ç:\n   ```bash\n   tsx server/seed.ts\n   ```\n\n### –®–∞–≥ 2: –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel\n\n#### –í–∞—Ä–∏–∞–Ω—Ç A: –ß–µ—Ä–µ–∑ Vercel Dashboard (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n\n1. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ GitHub:**\n   ```bash\n   git init\n   git add .\n   git commit -m \"Ready for Vercel deployment\"\n   git branch -M main\n   git remote add origin https://github.com/–≤–∞—à-username/–≤–∞—à-repo.git\n   git push -u origin main\n   ```\n\n2. **–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤ Vercel:**\n   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://vercel.com\n   - –ù–∞–∂–º–∏—Ç–µ \"Add New Project\"\n   - –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π\n   - Vercel –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\n3. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:**\n   \n   –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ Vercel –¥–æ–±–∞–≤—å—Ç–µ:\n   ```\n   DATABASE_URL = postgresql://username:password@ep-xxxxx.region.aws.neon.tech/neondb?sslmode=require\n   NODE_ENV = production\n   ```\n\n4. **Deploy:**\n   - –ù–∞–∂–º–∏—Ç–µ \"Deploy\"\n   - –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏\n   - –í–∞—à —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É `https://–≤–∞—à-–ø—Ä–æ–µ–∫—Ç.vercel.app`\n\n#### –í–∞—Ä–∏–∞–Ω—Ç B: –ß–µ—Ä–µ–∑ Vercel CLI\n\n1. **–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Vercel CLI:**\n   ```bash\n   npm install -g vercel\n   ```\n\n2. **–í–æ–π–¥–∏—Ç–µ –≤ Vercel:**\n   ```bash\n   vercel login\n   ```\n\n3. **Deploy –ø—Ä–æ–µ–∫—Ç:**\n   ```bash\n   vercel\n   ```\n\n4. **–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:**\n   ```bash\n   vercel env add DATABASE_URL\n   # –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neon\n   \n   vercel env add NODE_ENV\n   # –í–≤–µ–¥–∏—Ç–µ: production\n   ```\n\n5. **Deploy –≤ production:**\n   ```bash\n   vercel --prod\n   ```\n\n---\n\n## –í–∞–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vercel (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ):\n\n–ë–ª–∞–≥–æ–¥–∞—Ä—è `vercel.json`, —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:\n\n‚úÖ **Build Command:** `npm run build` (—Å–æ–±–∏—Ä–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)  \n‚úÖ **Output Directory:** `dist/public` (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã)  \n‚úÖ **Serverless Functions:** `api/index.ts` (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ API –∑–∞–ø—Ä–æ—Å—ã)  \n‚úÖ **Routing:** –í—Å–µ `/api/*` –º–∞—Ä—à—Ä—É—Ç—ã –∏–¥—É—Ç –Ω–∞ serverless —Ñ—É–Ω–∫—Ü–∏–∏, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥\n\n---\n\n## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞ Vercel:\n\n–ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:\n\n1. **–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:** `https://–≤–∞—à-–ø—Ä–æ–µ–∫—Ç.vercel.app/`\n2. **–ú–µ–Ω—é:** `https://–≤–∞—à-–ø—Ä–æ–µ–∫—Ç.vercel.app/menu`\n3. **API —Ç–µ—Å—Ç:** `https://–≤–∞—à-–ø—Ä–æ–µ–∫—Ç.vercel.app/api/categories` (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å JSON)\n\n–ï—Å–ª–∏ –º–µ–Ω—é –ø—É—Å—Ç–æ–µ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:\n- ‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è `DATABASE_URL` —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ Vercel\n- ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ (–≤—ã–ø–æ–ª–Ω–µ–Ω seed)\n- ‚úÖ –í –ª–æ–≥–∞—Ö Vercel Functions –Ω–µ—Ç –æ—à–∏–±–æ–∫\n\n---\n\n## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è Vercel:\n\n```\n.\n‚îú‚îÄ‚îÄ api/\n‚îÇ   ‚îî‚îÄ‚îÄ index.ts          # Serverless —Ñ—É–Ω–∫—Ü–∏–∏ (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç /api/*)\n‚îú‚îÄ‚îÄ server/\n‚îÇ   ‚îú‚îÄ‚îÄ db.ts             # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Vercel –∏ Replit)\n‚îÇ   ‚îú‚îÄ‚îÄ routes.ts         # API –º–∞—Ä—à—Ä—É—Ç—ã\n‚îÇ   ‚îî‚îÄ‚îÄ ...\n‚îú‚îÄ‚îÄ client/               # React —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥\n‚îÇ   ‚îî‚îÄ‚îÄ src/\n‚îú‚îÄ‚îÄ dist/\n‚îÇ   ‚îî‚îÄ‚îÄ public/           # –°–æ–±—Ä–∞–Ω–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ (—Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ build)\n‚îú‚îÄ‚îÄ vercel.json           # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vercel\n‚îî‚îÄ‚îÄ package.json\n```\n\n---\n\n## –û—Ç–ª–∏—á–∏—è –æ—Ç Replit:\n\n| –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å | Replit | Vercel |\n|------------|--------|--------|\n| –û–∫—Ä—É–∂–µ–Ω–∏–µ | `process.env.VERCEL` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç | `process.env.VERCEL` = \"1\" |\n| –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î | WebSocket (`ws`) | HTTP/Fetch |\n| –°–µ—Ä–≤–µ—Ä | Express –≤—Å–µ–≥–¥–∞ –∑–∞–ø—É—â–µ–Ω | Serverless —Ñ—É–Ω–∫—Ü–∏–∏ (–∑–∞–ø—É—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É) |\n| –°—Ç–∞—Ç–∏–∫–∞ | –û–±—Å–ª—É–∂–∏–≤–∞–µ—Ç—Å—è Express | –û–±—Å–ª—É–∂–∏–≤–∞–µ—Ç—Å—è Vercel CDN |\n\n–ö–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö! üéâ\n\n---\n\n## Troubleshooting:\n\n### –ü—Ä–æ–±–ª–µ–º–∞: –ú–µ–Ω—é –ø—É—Å—Ç–æ–µ (404 –Ω–∞ API)\n\n**–†–µ—à–µ–Ω–∏–µ:**\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `DATABASE_URL` –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Vercel\n2. –û—Ç–∫—Ä–æ–π—Ç–µ –ª–æ–≥–∏ Functions –≤ Vercel Dashboard\n3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Neon –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ\n\n### –ü—Ä–æ–±–ª–µ–º–∞: –û—à–∏–±–∫–∞ \"WebSocket is not available\"\n\n**–†–µ—à–µ–Ω–∏–µ:**\n- –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è Vercel! –ö–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç HTTP –≤–º–µ—Å—Ç–æ WebSocket\n- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ `server/db.ts` —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É `if (process.env.VERCEL)`\n\n### –ü—Ä–æ–±–ª–µ–º–∞: 500 Internal Server Error\n\n**–†–µ—à–µ–Ω–∏–µ:**\n1. –û—Ç–∫—Ä–æ–π—Ç–µ Vercel Dashboard ‚Üí –≤–∞—à –ø—Ä–æ–µ–∫—Ç ‚Üí Functions\n2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ —Ñ—É–Ω–∫—Ü–∏–∏ `api/index.ts`\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å `DATABASE_URL`\n\n---\n\n## –ü–æ–¥–¥–µ—Ä–∂–∫–∞:\n\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Vercel Dashboard ‚Üí Functions\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (`package.json`)\n3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ `DATABASE_URL` –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω\n\n**–ì–æ—Ç–æ–≤–æ!** üöÄ –í–∞—à –ø—Ä–æ–µ–∫—Ç —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Vercel —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö Neon!\n","size_bytes":8220},"server/data/ingredients.ts":{"content":"import type { InsertIngredient } from \"@shared/schema\";\n\nexport function createIngredients(): InsertIngredient[] {\n  return [\n    // PROTEINS\n    {\n      name: \"Tofu\",\n      nameDE: \"Tofu\",\n      type: \"protein\",\n      description: \"Marinated tofu\",\n      descriptionDE: \"Marinierter Tofu\",\n      image: \"/images/wunschbowl/tofu cubes.png\",\n      price: \"9.50\",\n      order: 1,\n      available: 1,\n    },\n    {\n      name: \"Falafel\",\n      nameDE: \"Falafel\",\n      type: \"protein\",\n      description: \"Homemade falafel\",\n      descriptionDE: \"Hausgemachte Falafel\",\n      image: \"/images/wunschbowl/falafel balls.png\",\n      price: \"9.50\",\n      order: 2,\n      available: 1,\n    },\n    {\n      name: \"Chicken\",\n      nameDE: \"H√§hnchen\",\n      type: \"protein\",\n      description: \"Tender chicken\",\n      descriptionDE: \"Zartes H√§hnchen\",\n      image: \"/images/wunschbowl/chicken slices.png\",\n      price: \"9.50\",\n      order: 3,\n      available: 1,\n    },\n    {\n      name: \"Salmon\",\n      nameDE: \"Lachs\",\n      type: \"protein\",\n      description: \"Fresh salmon\",\n      descriptionDE: \"Frischer Lachs\",\n      image: \"/images/wunschbowl/salmon slices .png\",\n      price: \"9.90\",\n      order: 4,\n      available: 1,\n    },\n    {\n      name: \"Shrimp\",\n      nameDE: \"Garnelen\",\n      type: \"protein\",\n      description: \"Fresh shrimp\",\n      descriptionDE: \"Frische Garnelen\",\n      image: \"/images/wunschbowl/shrimp.png\",\n      price: \"9.90\",\n      order: 5,\n      available: 1,\n    },\n    {\n      name: \"Tuna\",\n      nameDE: \"Thunfisch\",\n      type: \"protein\",\n      description: \"Fresh tuna\",\n      descriptionDE: \"Frischer Thunfisch\",\n      image: \"/images/wunschbowl/tuna slices.png\",\n      price: \"9.90\",\n      order: 6,\n      available: 1,\n    },\n\n    // BASES\n    {\n      name: \"Rice\",\n      nameDE: \"Reis\",\n      type: \"base\",\n      description: \"White rice\",\n      descriptionDE: \"Wei√üer Reis\",\n      image: \"/images/wunschbowl/white rice.png\",\n      order: 1,\n      available: 1,\n    },\n    {\n      name: \"Couscous\",\n      nameDE: \"Couscous\",\n      type: \"base\",\n      description: \"Couscous\",\n      descriptionDE: \"Couscous\",\n      image: \"/images/wunschbowl/cooked couscous.png\",\n      order: 2,\n      available: 1,\n    },\n    {\n      name: \"Quinoa\",\n      nameDE: \"Quinoa\",\n      type: \"base\",\n      description: \"Quinoa\",\n      descriptionDE: \"Quinoa\",\n      image: \"/images/wunschbowl/cooked quinoa.png\",\n      order: 3,\n      available: 1,\n    },\n    {\n      name: \"Zucchini Noodles\",\n      nameDE: \"Zucchini-Nudeln\",\n      type: \"base\",\n      description: \"Spiralized zucchini noodles\",\n      descriptionDE: \"Zucchini-Nudeln\",\n      image: \"/images/wunschbowl/zucchini spaghetti.png\",\n      order: 4,\n      available: 1,\n    },\n\n    // MARINADES\n    {\n      name: \"Lanai\",\n      nameDE: \"Lanai\",\n      type: \"marinade\",\n      description: \"With soy and garlic\",\n      descriptionDE: \"mit Soja, Knoblauch\",\n      image: \"/images/wunschbowl/Lanai (Marinade).png\",\n      order: 1,\n      available: 1,\n    },\n    {\n      name: \"Gozo\",\n      nameDE: \"Gozo\",\n      type: \"marinade\",\n      description: \"With garlic\",\n      descriptionDE: \"mit Knoblauch\",\n      image: \"/images/wunschbowl/Gozo (Marinade).png\",\n      order: 2,\n      available: 1,\n    },\n    {\n      name: \"Capri\",\n      nameDE: \"Capri\",\n      type: \"marinade\",\n      description: \"Tomato-based, medium spicy\",\n      descriptionDE: \"Ein Traum aus Tomaten\",\n      image: \"/images/wunschbowl/Capri (Marinade).png\",\n      order: 3,\n      available: 1,\n    },\n    {\n      name: \"Maui\",\n      nameDE: \"Maui\",\n      type: \"marinade\",\n      description: \"Careful, fiery hot\",\n      descriptionDE: \"Vorsicht, feurig-scharf\",\n      image: \"/images/wunschbowl/Maui (Marinade).png\",\n      order: 4,\n      available: 1,\n    },\n\n    // FRESH INGREDIENTS\n    {\n      name: \"Edamame\",\n      nameDE: \"Edamame\",\n      type: \"fresh\",\n      description: \"Steamed edamame beans\",\n      descriptionDE: \"Edamame\",\n      image: \"/images/wunschbowl/Edamame.png\",\n      order: 1,\n      available: 1,\n    },\n    {\n      name: \"Cucumber\",\n      nameDE: \"Gurke\",\n      type: \"fresh\",\n      description: \"Fresh cucumber\",\n      descriptionDE: \"Gurke\",\n      image: \"/images/wunschbowl/Gurke (Cucumber).png\",\n      order: 2,\n      available: 1,\n    },\n    {\n      name: \"Avocado\",\n      nameDE: \"Avocado\",\n      type: \"fresh\",\n      description: \"Fresh avocado\",\n      descriptionDE: \"Avocado\",\n      image: \"/images/wunschbowl/avokado.png\",\n      order: 3,\n      available: 1,\n    },\n    {\n      name: \"Mango\",\n      nameDE: \"Mango\",\n      type: \"fresh\",\n      description: \"Fresh mango cubes\",\n      descriptionDE: \"Mango\",\n      image: \"/images/wunschbowl/diced mango.png\",\n      order: 4,\n      available: 1,\n    },\n    {\n      name: \"Carrot\",\n      nameDE: \"Karotte\",\n      type: \"fresh\",\n      description: \"Shredded carrot\",\n      descriptionDE: \"Karotte\",\n      image: \"/images/wunschbowl/marinated carrot.png\",\n      order: 5,\n      available: 1,\n    },\n    {\n      name: \"Kimchi\",\n      nameDE: \"Kimchi\",\n      type: \"fresh\",\n      description: \"Korean fermented kimchi\",\n      descriptionDE: \"Kimchi\",\n      image: \"/images/wunschbowl/Haus-Kimchi (Top).png\",\n      order: 6,\n      available: 1,\n    },\n    {\n      name: \"Cherry Tomatoes\",\n      nameDE: \"Kirschtomaten\",\n      type: \"fresh\",\n      description: \"Fresh cherry tomatoes\",\n      descriptionDE: \"Kirschtomaten\",\n      image: \"/images/wunschbowl/fresh tomato cubes.png\",\n      order: 7,\n      available: 1,\n    },\n    {\n      name: \"Spinach\",\n      nameDE: \"Spinat\",\n      type: \"fresh\",\n      description: \"Fresh spinach leaves\",\n      descriptionDE: \"Spinat\",\n      image: \"/images/wunschbowl/fresh spinach leaves.png\",\n      order: 8,\n      available: 1,\n    },\n    {\n      name: \"Sweet Potato\",\n      nameDE: \"S√º√ükartoffel\",\n      type: \"fresh\",\n      description: \"Roasted sweet potato cubes\",\n      descriptionDE: \"S√º√ükartoffel\",\n      image: \"/images/wunschbowl/cubed sweet potato.png\",\n      order: 9,\n      available: 1,\n    },\n    {\n      name: \"Pumpkin\",\n      nameDE: \"s√º√üer K√ºrbis\",\n      type: \"fresh\",\n      description: \"Roasted pumpkin cubes\",\n      descriptionDE: \"s√º√üer K√ºrbis\",\n      image: \"/images/wunschbowl/sweet pumpkin.png\",\n      order: 10,\n      available: 1,\n    },\n    {\n      name: \"Corn\",\n      nameDE: \"Zuckermais\",\n      type: \"fresh\",\n      description: \"Sweet corn kernels\",\n      descriptionDE: \"Zuckermais\",\n      image: \"/images/wunschbowl/sweet corn kernels.png\",\n      order: 12,\n      available: 1,\n    },\n    {\n      name: \"Red Onion\",\n      nameDE: \"Rote Zwiebeln\",\n      type: \"fresh\",\n      description: \"Sliced red onion\",\n      descriptionDE: \"Rote Zwiebeln\",\n      image: \"/images/wunschbowl/marinated red onions.png\",\n      order: 13,\n      available: 1,\n    },\n    {\n      name: \"Red Beet\",\n      nameDE: \"Rote Bete\",\n      type: \"fresh\",\n      description: \"Pickled red beet\",\n      descriptionDE: \"Rote Bete\",\n      image: \"/images/wunschbowl/sliced beetroot.png\",\n      order: 14,\n      available: 1,\n    },\n    {\n      name: \"Wakame Salad\",\n      nameDE: \"Wakame Salat\",\n      type: \"fresh\",\n      description: \"Seaweed salad\",\n      descriptionDE: \"Wakame Salat\",\n      image: \"/images/wunschbowl/Wakame seaweed salad.png\",\n      order: 15,\n      available: 1,\n    },\n    {\n      name: \"Pickled Radish\",\n      nameDE: \"Rettich eingelegt\",\n      type: \"fresh\",\n      description: \"Pickled yellow radish\",\n      descriptionDE: \"Rettich eingelegt\",\n      image: \"/images/wunschbowl/pickled radish.png\",\n      order: 16,\n      available: 1,\n    },\n    {\n      name: \"Pickled Ginger\",\n      nameDE: \"Ingwer eingelegt\",\n      type: \"fresh\",\n      description: \"Pickled ginger slices\",\n      descriptionDE: \"Ingwer eingelegt\",\n      image: \"/images/wunschbowl/pickled white.png\",\n      order: 17,\n      available: 1,\n    },\n\n    // SAUCES\n    {\n      name: \"Teriyaki Sauce\",\n      nameDE: \"Teriyaki-Sauce\",\n      type: \"sauce\",\n      description: \"Fresh arugula with creamy herbs\",\n      descriptionDE: \"Frischer Rucola mit cremigen Kr√§utern\",\n      image: \"/images/wunschbowl/Teriyaki Sauce .png\",\n      order: 1,\n      available: 1,\n    },\n    {\n      name: \"Truffle Fusion\",\n      nameDE: \"Tr√ºffel Fusion\",\n      type: \"sauce\",\n      description: \"Noble truffle with tropical note\",\n      descriptionDE: \"Edler Tr√ºffel mit tropischer Note\",\n      image: \"/images/wunschbowl/Tr√ºffel Fusion Sauce.png\",\n      order: 2,\n      available: 1,\n    },\n    {\n      name: \"Mango Dill\",\n      nameDE: \"Mango-Dill\",\n      type: \"sauce\",\n      description: \"Sweet mango meets fresh dill\",\n      descriptionDE: \"S√º√üe Mango trifft frischen Dill\",\n      image: \"/images/wunschbowl/Mango-Dill Sauce.png\",\n      order: 3,\n      available: 1,\n    },\n    {\n      name: \"Chili Mayo\",\n      nameDE: \"Chili Mayo\",\n      type: \"sauce\",\n      description: \"Creamy and pleasantly spicy\",\n      descriptionDE: \"Cremig und angenehm scharf\",\n      image: \"/images/wunschbowl/Chili Mayo.png\",\n      order: 4,\n      available: 1,\n    },\n    {\n      name: \"Kimchi Sriracha\",\n      nameDE: \"Kimchi Sriracha\",\n      type: \"sauce\",\n      description: \"Spicy and tangy - full of flavor\",\n      descriptionDE: \"W√ºrzig u scharf ‚Äì voll im Geschmack\",\n      image: \"/images/wunschbowl/Kimchi Sriracha.png\",\n      order: 5,\n      available: 1,\n    },\n    {\n      name: \"Soy-Sesame\",\n      nameDE: \"Soja-Sesam\",\n      type: \"sauce\",\n      description: \"Nutty sesame with fine soy sauce\",\n      descriptionDE: \"Nussiger Sesam mit feiner Sojaso√üe\",\n      image: \"/images/wunschbowl/Soy-Sesame Sauce.png\",\n      order: 6,\n      available: 1,\n    },\n    {\n      name: \"Ginger Sauce\",\n      nameDE: \"Ingwer-Sauce\",\n      type: \"sauce\",\n      description: \"Ginger sauce\",\n      descriptionDE: \"Ingwer-Sauce\",\n      image: \"/images/wunschbowl/Ginger Sauce.png\",\n      order: 7,\n      available: 1,\n    },\n\n    // TOPPINGS\n    {\n      name: \"Sesame\",\n      nameDE: \"Sesam\",\n      type: \"topping\",\n      description: \"White sesame seeds\",\n      descriptionDE: \"Sesam\",\n      image: \"/images/wunschbowl/sesame seeds.png\",\n      order: 1,\n      available: 1,\n    },\n    {\n      name: \"Sunflower Seeds\",\n      nameDE: \"Sonnenblumenkerne\",\n      type: \"topping\",\n      description: \"Roasted sunflower seeds\",\n      descriptionDE: \"Sonnenblumenkerne\",\n      image: \"/images/wunschbowl/sunflower seeds.png\",\n      order: 2,\n      available: 1,\n    },\n    {\n      name: \"Nori\",\n      nameDE: \"Nori\",\n      type: \"topping\",\n      description: \"Dried seaweed sheets\",\n      descriptionDE: \"Nori\",\n      image: \"/images/wunschbowl/Nori strips.png\",\n      order: 3,\n      available: 1,\n    },\n    {\n      name: \"Pomegranate\",\n      nameDE: \"Granatapfel\",\n      type: \"topping\",\n      description: \"Pomegranate seeds\",\n      descriptionDE: \"Granatapfel\",\n      image: \"/images/wunschbowl/pomegranate seeds.png\",\n      order: 4,\n      available: 1,\n    },\n    {\n      name: \"Spring Onions\",\n      nameDE: \"Fr√ºhlingszwiebe\",\n      type: \"topping\",\n      description: \"Chopped spring onions\",\n      descriptionDE: \"Fr√ºhlingszwiebe\",\n      image: \"/images/wunschbowl/spring onions.png\",\n      order: 5,\n      available: 1,\n    },\n    {\n      name: \"Black Olives\",\n      nameDE: \"Schwarze Oliven\",\n      type: \"topping\",\n      description: \"Sliced black olives\",\n      descriptionDE: \"Schwarze Oliven\",\n      image: \"/images/wunschbowl/black olives.png\",\n      order: 8,\n      available: 1,\n    },\n    {\n      name: \"Pumpkin Seeds\",\n      nameDE: \"K√ºrbiskerne\",\n      type: \"topping\",\n      description: \"Roasted pumpkin seeds\",\n      descriptionDE: \"K√ºrbiskerne\",\n      image: \"/images/wunschbowl/pumpkin seeds.png\",\n      order: 9,\n      available: 1,\n    },\n    {\n      name: \"Cashew Nuts\",\n      nameDE: \"Cashewkerne\",\n      type: \"topping\",\n      description: \"Roasted cashew nuts\",\n      descriptionDE: \"Cashewkerne\",\n      image: \"/images/wunschbowl/cashew nuts.png\",\n      order: 10,\n      available: 1,\n    },\n    {\n      name: \"Peanuts\",\n      nameDE: \"Erdn√ºsse\",\n      type: \"topping\",\n      description: \"Roasted peanuts\",\n      descriptionDE: \"Erdn√ºsse\",\n      image: \"/images/wunschbowl/peanuts .png\",\n      order: 11,\n      available: 1,\n    },\n    {\n      name: \"Coconut Chips\",\n      nameDE: \"Kokoschips\",\n      type: \"topping\",\n      description: \"Crispy coconut chips\",\n      descriptionDE: \"Kokoschips\",\n      image: \"/images/wunschbowl/coconut chips.png\",\n      order: 12,\n      available: 1,\n    },\n    {\n      name: \"Roasted Beet Chips\",\n      nameDE: \"Ger√∂stete Rote Bete Chips\",\n      type: \"topping\",\n      description: \"Roasted red beet chips\",\n      descriptionDE: \"Ger√∂stete Rote Bete Chips\",\n      image: \"/images/wunschbowl/oasted beetroot.png\",\n      order: 13,\n      available: 1,\n    },\n    {\n      name: \"Banana Chips\",\n      nameDE: \"Bananenchips\",\n      type: \"topping\",\n      description: \"Crispy banana chips\",\n      descriptionDE: \"Bananenchips\",\n      image: \"/images/wunschbowl/banana chips.png\",\n      order: 14,\n      available: 1,\n    },\n    {\n      name: \"Capers\",\n      nameDE: \"Kapern\",\n      type: \"topping\",\n      description: \"Pickled capers\",\n      descriptionDE: \"Kapern\",\n      image: \"/images/wunschbowl/capers.png\",\n      order: 15,\n      available: 1,\n    },\n    {\n      name: \"Almonds\",\n      nameDE: \"Mandeln\",\n      type: \"topping\",\n      description: \"Sliced almonds\",\n      descriptionDE: \"Mandeln\",\n      image: \"/images/wunschbowl/almonds.png\",\n      order: 16,\n      available: 1,\n    },\n    {\n      name: \"Coconut Flakes\",\n      nameDE: \"Kokosraspeln\",\n      type: \"topping\",\n      description: \"Shredded coconut\",\n      descriptionDE: \"Kokosraspeln\",\n      image: \"/images/wunschbowl/coconut chips.png\",\n      order: 17,\n      available: 1,\n    },\n    {\n      name: \"Pickled Ginger\",\n      nameDE: \"Ingwer eingelegt\",\n      type: \"topping\",\n      description: \"Pickled ginger slices\",\n      descriptionDE: \"Ingwer eingelegt\",\n      image: \"/images/wunschbowl/pickled white.png\",\n      order: 18,\n      available: 1,\n    },\n  ];\n}\n","size_bytes":14128},"client/src/components/BowlBuilderDialog.tsx":{"content":"import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Check, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport type { MenuItem, Ingredient, CustomBowlSelection } from \"@shared/schema\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport { useCartStore } from \"@/lib/cartStore\";\n\ninterface BowlBuilderDialogProps {\n  item: MenuItem | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onAddToCart: (item: MenuItem, size: \"klein\" | \"standard\", customization: CustomBowlSelection, customPrice?: string) => void;\n  editingCartItemId?: string | null;\n}\n\ntype BuilderStep = \"protein\" | \"base\" | \"marinade\" | \"fresh\" | \"sauce\" | \"topping\" | \"extras\";\n\nconst STEPS: BuilderStep[] = [\"protein\", \"base\", \"marinade\", \"fresh\", \"sauce\", \"topping\", \"extras\"];\n\nconst STEP_CONFIG = {\n  protein: { title: \"W√§hle dein Protein\", min: 1, max: 1 },\n  base: { title: \"W√§hle deine Base\", min: 1, max: 1 },\n  marinade: { title: \"W√§hle deine Marinade\", min: 1, max: 1 },\n  fresh: { title: \"W√§hle 4 frische Zutaten\", min: 4, max: 4 },\n  sauce: { title: \"W√§hle deine Sauce\", min: 1, max: 1 },\n  topping: { title: \"W√§hle 3 Toppings\", min: 3, max: 3 },\n  extras: { title: \"Deine extra (optional)\", min: 0, max: 999 },\n};\n\nexport function BowlBuilderDialog({ item, isOpen, onClose, onAddToCart, editingCartItemId }: BowlBuilderDialogProps) {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n  const [selectedSize, setSelectedSize] = useState<\"klein\" | \"standard\">(\"standard\");\n  const [selections, setSelections] = useState<CustomBowlSelection>({\n    protein: undefined,\n    base: undefined,\n    marinade: undefined,\n    freshIngredients: [],\n    sauce: undefined,\n    toppings: [],\n    extraProtein: [],\n    extraFreshIngredients: [],\n    extraSauces: [],\n    extraToppings: [],\n  });\n  const isMobile = useIsMobile();\n  const contentRef = useRef<HTMLDivElement>(null);\n  const { items: cartItems } = useCartStore();\n\n  // Fetch ingredients\n  const { data: ingredients = [] } = useQuery<Ingredient[]>({\n    queryKey: ['/api/ingredients'],\n  });\n\n  // Helper function to get ingredient name by ID\n  const getIngredientName = (id: string | undefined) => {\n    if (!id) return \"\";\n    const ingredient = ingredients.find(ing => ing.id === id);\n    return ingredient?.nameDE || \"\";\n  };\n\n  // Reset when dialog opens or item changes\n  useEffect(() => {\n    if (isOpen && item) {\n      // If editing, load existing data from cart\n      if (editingCartItemId) {\n        const cartItem = cartItems.find(i => i.id === editingCartItemId);\n        if (cartItem && cartItem.customization) {\n          setCurrentStep(0);\n          setSelectedSize(cartItem.size || \"standard\");\n          setSelections(cartItem.customization);\n          return;\n        }\n      }\n      \n      // Otherwise reset to defaults\n      setCurrentStep(0);\n      setSelectedSize(\"standard\");\n      setSelections({\n        protein: undefined,\n        base: undefined,\n        marinade: undefined,\n        freshIngredients: [],\n        sauce: undefined,\n        toppings: [],\n        extraProtein: [],\n        extraFreshIngredients: [],\n        extraSauces: [],\n        extraToppings: [],\n      });\n    }\n  }, [item, isOpen, editingCartItemId, cartItems]);\n\n  if (!item) return null;\n\n  const currentStepType = STEPS[currentStep];\n  const stepConfig = STEP_CONFIG[currentStepType];\n  const progress = ((currentStep + 1) / STEPS.length) * 100;\n\n  // Filter ingredients for current step\n  const currentIngredients = ingredients.filter(\n    ing => ing.type === currentStepType && ing.available === 1\n  );\n\n  // Check if current step is complete\n  const isStepComplete = () => {\n    const current = currentStepType;\n    if (current === \"protein\" || current === \"base\" || current === \"marinade\" || current === \"sauce\") {\n      const key = current as keyof typeof selections;\n      return !!selections[key];\n    } else if (current === \"fresh\") {\n      return selections.freshIngredients?.length === 4;\n    } else if (current === \"topping\") {\n      return selections.toppings?.length === 3;\n    } else if (current === \"extras\") {\n      return true;\n    }\n    return false;\n  };\n\n  // Handle ingredient selection\n  const handleSelect = (ingredientId: string) => {\n    const current = currentStepType;\n    \n    if (current === \"protein\" || current === \"base\" || current === \"marinade\" || current === \"sauce\") {\n      setSelections(prev => ({ ...prev, [current]: ingredientId }));\n    } else if (current === \"fresh\") {\n      setSelections(prev => {\n        const current = prev.freshIngredients || [];\n        if (current.includes(ingredientId)) {\n          return { ...prev, freshIngredients: current.filter(id => id !== ingredientId) };\n        } else if (current.length < 4) {\n          return { ...prev, freshIngredients: [...current, ingredientId] };\n        }\n        return prev;\n      });\n    } else if (current === \"topping\") {\n      setSelections(prev => {\n        const current = prev.toppings || [];\n        if (current.includes(ingredientId)) {\n          return { ...prev, toppings: current.filter(id => id !== ingredientId) };\n        } else if (current.length < 3) {\n          return { ...prev, toppings: [...current, ingredientId] };\n        }\n        return prev;\n      });\n    }\n  };\n\n  const isSelected = (ingredientId: string) => {\n    const current = currentStepType;\n    if (current === \"protein\" || current === \"base\" || current === \"marinade\" || current === \"sauce\") {\n      return selections[current] === ingredientId;\n    } else if (current === \"fresh\") {\n      return selections.freshIngredients?.includes(ingredientId) || false;\n    } else if (current === \"topping\") {\n      return selections.toppings?.includes(ingredientId) || false;\n    }\n    return false;\n  };\n\n  // Handle extras selection\n  const handleExtraSelect = (ingredientId: string, type: \"protein\" | \"fresh\" | \"sauce\" | \"topping\") => {\n    const key = type === \"protein\" ? \"extraProtein\" : type === \"fresh\" ? \"extraFreshIngredients\" : type === \"sauce\" ? \"extraSauces\" : \"extraToppings\";\n    setSelections(prev => {\n      const current = prev[key] || [];\n      if (current.includes(ingredientId)) {\n        return { ...prev, [key]: current.filter(id => id !== ingredientId) };\n      } else {\n        return { ...prev, [key]: [...current, ingredientId] };\n      }\n    });\n  };\n\n  const isExtraSelected = (ingredientId: string, type: \"protein\" | \"fresh\" | \"sauce\" | \"topping\") => {\n    const key = type === \"protein\" ? \"extraProtein\" : type === \"fresh\" ? \"extraFreshIngredients\" : type === \"sauce\" ? \"extraSauces\" : \"extraToppings\";\n    return selections[key]?.includes(ingredientId) || false;\n  };\n\n  const handleNext = () => {\n    if (currentStep < STEPS.length - 1 && isStepComplete()) {\n      setCurrentStep(prev => prev + 1);\n      contentRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentStep > 0) {\n      setCurrentStep(prev => prev - 1);\n      contentRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  const handleComplete = () => {\n    if (isStepComplete()) {\n      // Calculate final price based on selected protein and size\n      const finalPrice = item.hasSizeOptions === 1 ? getSizePrice(selectedSize) : parseFloat(item.price).toFixed(2);\n      onAddToCart(item, selectedSize, selections, finalPrice);\n      onClose();\n    }\n  };\n\n  const getSizePrice = (size: \"klein\" | \"standard\") => {\n    // Get selected protein's base price\n    const selectedProtein = selections.protein \n      ? ingredients.find(ing => ing.id === selections.protein)\n      : null;\n    \n    const basePrice = selectedProtein?.price \n      ? parseFloat(selectedProtein.price) \n      : parseFloat(item.price);\n\n    let totalPrice = basePrice;\n\n    if (size === \"standard\") {\n      // Standard pricing: +5.25 for ‚Ç¨9.50 proteins, +6.00 for ‚Ç¨9.90 proteins\n      const priceIncrease = basePrice === 9.90 ? 6.00 : 5.25;\n      totalPrice += priceIncrease;\n    }\n\n    // Add extras pricing\n    totalPrice += (selections.extraProtein?.length || 0) * 3.70;\n    totalPrice += (selections.extraFreshIngredients?.length || 0) * 1.00;\n    totalPrice += (selections.extraSauces?.length || 0) * 0.60;\n    totalPrice += (selections.extraToppings?.length || 0) * 0.60;\n\n    return totalPrice.toFixed(2);\n  };\n\n  const getDisplayPrice = () => {\n    if (item.hasSizeOptions === 1) {\n      return getSizePrice(selectedSize);\n    }\n    return parseFloat(item.price).toFixed(2);\n  };\n\n  // Get price range for protein options\n  const getProteinPriceRange = () => {\n    const proteinIngredients = ingredients.filter(\n      ing => ing.type === \"protein\" && ing.available === 1 && ing.price\n    );\n    \n    if (proteinIngredients.length === 0) {\n      return { min: parseFloat(item.price), max: parseFloat(item.price) };\n    }\n    \n    const prices = proteinIngredients.map(ing => parseFloat(ing.price || \"0\"));\n    return {\n      min: Math.min(...prices),\n      max: Math.max(...prices)\n    };\n  };\n\n  const getSizeButtonText = (size: \"klein\" | \"standard\") => {\n    const priceRange = getProteinPriceRange();\n    \n    if (selections.protein) {\n      // If protein is selected, show exact price\n      return `‚Ç¨${getSizePrice(size)}`;\n    }\n    \n    // Show price range\n    if (size === \"klein\") {\n      if (priceRange.min === priceRange.max) {\n        return `ab ‚Ç¨${priceRange.min.toFixed(2)}`;\n      }\n      return `‚Ç¨${priceRange.min.toFixed(2)} - ‚Ç¨${priceRange.max.toFixed(2)}`;\n    } else {\n      const minStandard = priceRange.min + (priceRange.min === 9.90 ? 6.00 : 5.25);\n      const maxStandard = priceRange.max + (priceRange.max === 9.90 ? 6.00 : 5.25);\n      if (minStandard === maxStandard) {\n        return `ab ‚Ç¨${minStandard.toFixed(2)}`;\n      }\n      return `‚Ç¨${minStandard.toFixed(2)} - ‚Ç¨${maxStandard.toFixed(2)}`;\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-6xl max-h-[90vh]\" data-testid=\"dialog-bowl-builder\">\n        <div ref={contentRef} className=\"overflow-y-auto max-h-[calc(90vh-80px)]\">\n        <DialogHeader>\n          <DialogTitle className=\"font-poppins text-2xl\" data-testid=\"text-builder-title\">\n            {item.nameDE}\n          </DialogTitle>\n          <DialogDescription asChild>\n            <p className={`font-poppins mt-2 ${\n              currentStepType === \"fresh\" || currentStepType === \"topping\"\n                ? \"text-2xl font-bold text-ocean\"\n                : \"text-lg font-semibold text-ocean\"\n            }`}>\n              {stepConfig.title}\n            </p>\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className={`${isMobile ? '' : 'grid grid-cols-3 gap-6'}`}>\n          {/* Main Content */}\n          <div className={`space-y-6 ${isMobile ? '' : 'col-span-2'}`}>\n          {/* Progress Bar */}\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm font-poppins text-muted-foreground\">\n              <span>Schritt {currentStep + 1} von {STEPS.length}</span>\n              <span>{Math.round(progress)}%</span>\n            </div>\n            <Progress value={progress} className=\"h-2\" />\n          </div>\n\n          {/* Size Selection (shown on first step) */}\n          {currentStep === 0 && item.hasSizeOptions === 1 && (\n            <div>\n              <h4 className=\"font-poppins font-semibold text-sm mb-3 text-foreground\">Gr√∂√üe w√§hlen</h4>\n              <div className=\"flex gap-3\">\n                <Button\n                  variant={selectedSize === \"klein\" ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedSize(\"klein\")}\n                  className={`flex-1 font-poppins font-semibold ${\n                    selectedSize === \"klein\" \n                      ? \"bg-ocean hover:bg-ocean/90 text-white\" \n                      : \"\"\n                  }`}\n                  data-testid=\"button-size-klein\"\n                >\n                  <div className=\"text-center\">\n                    <div>Klein</div>\n                    <div className=\"text-sm font-normal\">{getSizeButtonText(\"klein\")}</div>\n                  </div>\n                </Button>\n                <Button\n                  variant={selectedSize === \"standard\" ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedSize(\"standard\")}\n                  className={`flex-1 font-poppins font-semibold ${\n                    selectedSize === \"standard\" \n                      ? \"bg-ocean hover:bg-ocean/90 text-white\" \n                      : \"\"\n                  }`}\n                  data-testid=\"button-size-standard\"\n                >\n                  <div className=\"text-center\">\n                    <div>Standard</div>\n                    <div className=\"text-sm font-normal\">{getSizeButtonText(\"standard\")}</div>\n                  </div>\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {/* Extras Step - Categorized View */}\n          {currentStepType === \"extras\" && (\n            <div className=\"space-y-8\">\n              {/* Nein, Danke Button */}\n              <div className=\"flex justify-center mb-6\">\n                <Button\n                  onClick={() => {\n                    contentRef.current?.scrollTo({ top: contentRef.current.scrollHeight, behavior: 'smooth' });\n                  }}\n                  className=\"bg-red-500 hover:bg-red-600 text-white font-poppins font-bold px-12 py-6 text-lg shadow-lg transform transition-all duration-300 hover:scale-105 hover:shadow-xl active:scale-95\"\n                  data-testid=\"button-skip-extras\"\n                >\n                  Nein, Danke\n                </Button>\n              </div>\n\n              {/* Extra Protein */}\n              <div>\n                <h3 className=\"font-poppins font-bold text-xl mb-4\">Extra Protein</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                  {ingredients.filter(ing => ing.type === \"protein\" && ing.available === 1).map((ingredient) => {\n                    const selected = isExtraSelected(ingredient.id, \"protein\");\n                    return (\n                      <div\n                        key={ingredient.id}\n                        className={`relative rounded-lg border-2 overflow-hidden transition-all ${\n                          selected ? \"border-ocean shadow-lg\" : \"border-gray-200 hover:border-gray-300\"\n                        }`}\n                        data-testid={`card-extra-protein-${ingredient.id}`}\n                      >\n                        <div className=\"aspect-square relative\">\n                          <img src={ingredient.image} alt={ingredient.nameDE} loading=\"lazy\" className=\"w-full h-full object-cover\" />\n                          {selected && (\n                            <div className=\"absolute top-2 right-2 bg-ocean text-white rounded-full p-1\">\n                              <Check className=\"w-4 h-4\" />\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"p-2 bg-white\">\n                          <p className=\"font-poppins text-sm font-medium text-center mb-1\">{ingredient.nameDE}</p>\n                          <p className=\"font-poppins text-sm text-center text-sunset font-bold mb-2\">‚Ç¨3.70</p>\n                          <Button\n                            onClick={() => handleExtraSelect(ingredient.id, \"protein\")}\n                            variant={selected ? \"default\" : \"outline\"}\n                            size=\"sm\"\n                            className={`w-full font-poppins font-bold text-xs ${selected ? \"bg-ocean hover:bg-ocean/90 text-white\" : \"\"}`}\n                            data-testid={`button-add-extra-protein-${ingredient.id}`}\n                          >\n                            {selected ? \"HINZUGEF√úGT\" : \"HINZUF√úGEN\"}\n                          </Button>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Extra Fresh Ingredients */}\n              <div>\n                <h3 className=\"font-poppins font-bold text-xl mb-4\">extra frische Zutaten</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                  {ingredients.filter(ing => ing.type === \"fresh\" && ing.available === 1).map((ingredient) => {\n                    const selected = isExtraSelected(ingredient.id, \"fresh\");\n                    return (\n                      <div\n                        key={ingredient.id}\n                        className={`relative rounded-lg border-2 overflow-hidden transition-all ${\n                          selected ? \"border-ocean shadow-lg\" : \"border-gray-200 hover:border-gray-300\"\n                        }`}\n                        data-testid={`card-extra-fresh-${ingredient.id}`}\n                      >\n                        <div className=\"aspect-square relative\">\n                          <img src={ingredient.image} alt={ingredient.nameDE} loading=\"lazy\" className=\"w-full h-full object-cover\" />\n                          {selected && (\n                            <div className=\"absolute top-2 right-2 bg-ocean text-white rounded-full p-1\">\n                              <Check className=\"w-4 h-4\" />\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"p-2 bg-white\">\n                          <p className=\"font-poppins text-sm font-medium text-center mb-1\">{ingredient.nameDE}</p>\n                          <p className=\"font-poppins text-sm text-center text-sunset font-bold mb-2\">‚Ç¨1.00</p>\n                          <Button\n                            onClick={() => handleExtraSelect(ingredient.id, \"fresh\")}\n                            variant={selected ? \"default\" : \"outline\"}\n                            size=\"sm\"\n                            className={`w-full font-poppins font-bold text-xs ${selected ? \"bg-ocean hover:bg-ocean/90 text-white\" : \"\"}`}\n                            data-testid={`button-add-extra-fresh-${ingredient.id}`}\n                          >\n                            {selected ? \"HINZUGEF√úGT\" : \"HINZUF√úGEN\"}\n                          </Button>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Extra Sauces */}\n              <div>\n                <h3 className=\"font-poppins font-bold text-xl mb-4\">extra Sauce</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                  {ingredients.filter(ing => ing.type === \"sauce\" && ing.available === 1).map((ingredient) => {\n                    const selected = isExtraSelected(ingredient.id, \"sauce\");\n                    return (\n                      <div\n                        key={ingredient.id}\n                        className={`relative rounded-lg border-2 overflow-hidden transition-all ${\n                          selected ? \"border-ocean shadow-lg\" : \"border-gray-200 hover:border-gray-300\"\n                        }`}\n                        data-testid={`card-extra-sauce-${ingredient.id}`}\n                      >\n                        <div className=\"aspect-square relative\">\n                          <img src={ingredient.image} alt={ingredient.nameDE} loading=\"lazy\" className=\"w-full h-full object-cover\" />\n                          {selected && (\n                            <div className=\"absolute top-2 right-2 bg-ocean text-white rounded-full p-1\">\n                              <Check className=\"w-4 h-4\" />\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"p-2 bg-white\">\n                          <p className=\"font-poppins text-sm font-medium text-center mb-1\">{ingredient.nameDE}</p>\n                          <p className=\"font-poppins text-sm text-center text-sunset font-bold mb-2\">‚Ç¨0.60</p>\n                          <Button\n                            onClick={() => handleExtraSelect(ingredient.id, \"sauce\")}\n                            variant={selected ? \"default\" : \"outline\"}\n                            size=\"sm\"\n                            className={`w-full font-poppins font-bold text-xs ${selected ? \"bg-ocean hover:bg-ocean/90 text-white\" : \"\"}`}\n                            data-testid={`button-add-extra-sauce-${ingredient.id}`}\n                          >\n                            {selected ? \"HINZUGEF√úGT\" : \"HINZUF√úGEN\"}\n                          </Button>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Extra Toppings */}\n              <div>\n                <h3 className=\"font-poppins font-bold text-xl mb-4\">extra Toppings</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                  {ingredients.filter(ing => ing.type === \"topping\" && ing.available === 1).map((ingredient) => {\n                    const selected = isExtraSelected(ingredient.id, \"topping\");\n                    return (\n                      <div\n                        key={ingredient.id}\n                        className={`relative rounded-lg border-2 overflow-hidden transition-all ${\n                          selected ? \"border-ocean shadow-lg\" : \"border-gray-200 hover:border-gray-300\"\n                        }`}\n                        data-testid={`card-extra-topping-${ingredient.id}`}\n                      >\n                        <div className=\"aspect-square relative\">\n                          <img src={ingredient.image} alt={ingredient.nameDE} loading=\"lazy\" className=\"w-full h-full object-cover\" />\n                          {selected && (\n                            <div className=\"absolute top-2 right-2 bg-ocean text-white rounded-full p-1\">\n                              <Check className=\"w-4 h-4\" />\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"p-2 bg-white\">\n                          <p className=\"font-poppins text-sm font-medium text-center mb-1\">{ingredient.nameDE}</p>\n                          <p className=\"font-poppins text-sm text-center text-sunset font-bold mb-2\">‚Ç¨0.60</p>\n                          <Button\n                            onClick={() => handleExtraSelect(ingredient.id, \"topping\")}\n                            variant={selected ? \"default\" : \"outline\"}\n                            size=\"sm\"\n                            className={`w-full font-poppins font-bold text-xs ${selected ? \"bg-ocean hover:bg-ocean/90 text-white\" : \"\"}`}\n                            data-testid={`button-add-extra-topping-${ingredient.id}`}\n                          >\n                            {selected ? \"HINZUGEF√úGT\" : \"HINZUF√úGEN\"}\n                          </Button>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n            </div>\n          )}\n\n          {/* Ingredient Selection Grid (for non-extras steps) */}\n          {currentStepType !== \"extras\" && (\n            <>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n              {currentIngredients.map((ingredient) => {\n                const selected = isSelected(ingredient.id);\n                return (\n                  <div\n                    key={ingredient.id}\n                    className={`relative rounded-lg border-2 overflow-hidden transition-all ${\n                      selected \n                        ? \"border-ocean shadow-lg\" \n                        : \"border-gray-200 hover:border-gray-300\"\n                    }`}\n                    data-testid={`card-ingredient-${ingredient.id}`}\n                  >\n                    {/* Image */}\n                    <div className=\"aspect-square relative\">\n                      <img\n                        src={ingredient.image}\n                        alt={ingredient.nameDE}\n                        loading=\"lazy\"\n                        className=\"w-full h-full object-cover\"\n                        data-testid={`img-ingredient-${ingredient.id}`}\n                      />\n                      {selected && (\n                        <div className=\"absolute top-2 right-2 bg-ocean text-white rounded-full p-1\">\n                          <Check className=\"w-4 h-4\" />\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Name and Price */}\n                    <div className=\"p-2 bg-white\">\n                      <p className=\"font-poppins text-sm font-medium text-center mb-1\" data-testid={`text-ingredient-name-${ingredient.id}`}>\n                        {ingredient.nameDE}\n                      </p>\n                      \n                      {/* Price for protein */}\n                      {currentStepType === \"protein\" && ingredient.price && (\n                        <p className=\"font-poppins text-xs text-center text-muted-foreground mb-2\">\n                          {selectedSize === \"klein\" ? (\n                            <>‚Ç¨{ingredient.price}</>\n                          ) : (\n                            <>‚Ç¨{(parseFloat(ingredient.price) + (parseFloat(ingredient.price) === 9.90 ? 6.00 : 5.25)).toFixed(2)}</>\n                          )}\n                        </p>\n                      )}\n                      \n                      {/* Add Button */}\n                      <Button\n                        onClick={() => handleSelect(ingredient.id)}\n                        variant={selected ? \"default\" : \"outline\"}\n                        size=\"sm\"\n                        className={`w-full font-poppins font-bold text-xs transition-all duration-200 ${\n                          selected \n                            ? \"bg-ocean hover:bg-ocean/90 text-white shadow-md\" \n                            : \"border-ocean/40 hover:border-ocean hover:bg-ocean/5 shadow-sm hover:shadow-md hover:scale-105 active:scale-95\"\n                        }`}\n                        data-testid={`button-add-ingredient-${ingredient.id}`}\n                      >\n                        {selected ? \"AUSGEW√ÑHLT\" : \"W√ÑHLEN\"}\n                      </Button>\n                    </div>\n                  </div>\n                );\n              })}\n              </div>\n\n            </>\n          )}\n\n          {/* Navigation */}\n          <div className=\"flex items-center justify-between pt-4 border-t\">\n            <Button\n              onClick={handlePrev}\n              disabled={currentStep === 0}\n              variant=\"outline\"\n              className=\"font-poppins\"\n              data-testid=\"button-prev\"\n            >\n              <ChevronLeft className=\"w-4 h-4 mr-2\" />\n              Zur√ºck\n            </Button>\n\n            <div className=\"flex items-center gap-2\">\n              <span className=\"font-poppins text-2xl font-bold text-ocean\" data-testid=\"text-builder-price\">\n                ‚Ç¨{getDisplayPrice()}\n              </span>\n            </div>\n\n            {currentStep < STEPS.length - 1 ? (\n              <Button\n                onClick={handleNext}\n                disabled={!isStepComplete()}\n                className=\"bg-sunset hover:bg-sunset-dark text-white font-poppins font-bold\"\n                data-testid=\"button-next\"\n              >\n                Weiter\n                <ChevronRight className=\"w-4 h-4 ml-2\" />\n              </Button>\n            ) : (\n              <Button\n                onClick={handleComplete}\n                disabled={!isStepComplete()}\n                className=\"bg-green-500 hover:bg-green-600 text-white font-poppins font-bold px-8 shadow-lg transform transition-all duration-300 hover:scale-105 hover:shadow-xl active:scale-95\"\n                data-testid=\"button-complete\"\n              >\n                In den Warenkorb\n                <Check className=\"w-4 h-4 ml-2\" />\n              </Button>\n            )}\n          </div>\n\n          {/* Helper Text */}\n          <p className=\"text-center text-sm text-muted-foreground font-lato\">\n            {currentStepType === \"fresh\" && `${selections.freshIngredients?.length || 0} von 4 ausgew√§hlt`}\n            {currentStepType === \"topping\" && `${selections.toppings?.length || 0} von 3 ausgew√§hlt`}\n            {(currentStepType === \"protein\" || currentStepType === \"base\" || currentStepType === \"marinade\" || currentStepType === \"sauce\") && \n              !isStepComplete() && \"Bitte w√§hle eine Option\"}\n          </p>\n          </div>\n\n          {/* Summary Sidebar (Desktop only) */}\n          {!isMobile && (\n            <div className=\"col-span-1 border-l pl-6 space-y-4\">\n              <h3 className=\"font-poppins font-bold text-lg text-foreground\">Deine Auswahl</h3>\n              \n              {/* Size */}\n              <div>\n                <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Gr√∂√üe:</p>\n                <Badge variant=\"outline\">{selectedSize === \"klein\" ? \"Klein\" : \"Standard\"}</Badge>\n              </div>\n\n              {/* Protein */}\n              {selections.protein && (\n                <div>\n                  <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Protein:</p>\n                  <Badge variant=\"outline\">{getIngredientName(selections.protein)}</Badge>\n                </div>\n              )}\n\n              {/* Base */}\n              {selections.base && (\n                <div>\n                  <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Base:</p>\n                  <Badge variant=\"outline\">{getIngredientName(selections.base)}</Badge>\n                </div>\n              )}\n\n              {/* Marinade */}\n              {selections.marinade && (\n                <div>\n                  <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Marinade:</p>\n                  <Badge variant=\"outline\">{getIngredientName(selections.marinade)}</Badge>\n                </div>\n              )}\n\n              {/* Fresh Ingredients */}\n              {selections.freshIngredients && selections.freshIngredients.length > 0 && (\n                <div>\n                  <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Zutaten:</p>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {selections.freshIngredients.map((ing, idx) => (\n                      <Badge key={idx} variant=\"outline\" className=\"text-xs\">{getIngredientName(ing)}</Badge>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Sauce */}\n              {selections.sauce && (\n                <div>\n                  <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Sauce:</p>\n                  <Badge variant=\"outline\">{getIngredientName(selections.sauce)}</Badge>\n                </div>\n              )}\n\n              {/* Toppings */}\n              {selections.toppings && selections.toppings.length > 0 && (\n                <div>\n                  <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Toppings:</p>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {selections.toppings.map((topping, idx) => (\n                      <Badge key={idx} variant=\"outline\" className=\"text-xs\">{getIngredientName(topping)}</Badge>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Price */}\n              <div className=\"pt-4 border-t\">\n                <p className=\"font-semibold text-sm text-muted-foreground mb-1\">Gesamtpreis:</p>\n                <p className=\"font-poppins text-3xl font-bold text-ocean\">‚Ç¨{getDisplayPrice()}</p>\n              </div>\n            </div>\n          )}\n        </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":32411},"api/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"../server/routes\";\nimport path from \"path\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Serve static images for Vercel deployment\napp.use(\"/images\", express.static(path.join(process.cwd(), \"public/images\")));\napp.use(\n  \"/images/wunschbowl\",\n  express.static(path.join(process.cwd(), \"attached_assets\", \"wunschbowl\")),\n);\n\n// Request logging middleware\napp.use((req, res, next) => {\n  const start = Date.now();\n  const reqPath = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (reqPath.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${reqPath} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      console.log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Initialize routes\nlet initialized = false;\nasync function initializeApp() {\n  if (!initialized) {\n    await registerRoutes(app);\n    \n    app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n      const status = err.status || err.statusCode || 500;\n      const message = err.message || \"Internal Server Error\";\n      res.status(status).json({ message });\n      console.error(err);\n    });\n    \n    initialized = true;\n  }\n  return app;\n}\n\n// Export handler for Vercel serverless functions\nexport default async (req: Request, res: Response) => {\n  const app = await initializeApp();\n  return app(req, res);\n};\n","size_bytes":1938}},"version":2}